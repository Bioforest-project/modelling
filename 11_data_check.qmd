```{r set}
#| message: false
#| include: false
library(tidyverse)
library(knitr)
vars <- c(
  "ba", "agb", "nstem", "gini",
  "diversity_q1_gen", "FDiv",
  "WD_cwm_ba", "SLA_cwm_ba"
)
aggregated_file <- "data/raw_data/aggregated_data_v9.csv"
options(knitr.kable.NA = "")
```

# Data check {.unnumbered}

Data check.

## Metadata

```{r metadata_sites_dl}
#| eval: false
library(googlesheets4)
read_sheet("https://docs.google.com/spreadsheets/d/1fq2owxMBLBwwibcdw2uQQFxnIhsMbaH4Qcj_xUwVvSQ/edit?usp=sharing", 2) %>% # nolint
  separate_rows(site_raw, sep = ",") %>%
  write_tsv("data/raw_data/sites.tsv")
read_sheet("https://docs.google.com/spreadsheets/d/1fq2owxMBLBwwibcdw2uQQFxnIhsMbaH4Qcj_xUwVvSQ/edit?gid=0#gid=0", col_types = "c") %>% # nolint
  rename_all(tolower) %>%
  select(site, plot, treatment, year_of_harvest, longitude) %>%
  write_tsv("data/raw_data/metadata.tsv")
read_sheet("https://docs.google.com/spreadsheets/d/1fq2owxMBLBwwibcdw2uQQFxnIhsMbaH4Qcj_xUwVvSQ/edit?usp=sharing",
           "plot_correspondance", col_types = "c") %>% 
  write_tsv("data/raw_data/plot_metadata.tsv")
read_sheet("https://docs.google.com/spreadsheets/d/1fq2owxMBLBwwibcdw2uQQFxnIhsMbaH4Qcj_xUwVvSQ/edit?usp=sharing",
           "spurious", col_types = "c") %>% 
  na.omit() %>% 
  write_tsv("data/raw_data/spurious.tsv")
```

The following site names in metadata need to be fixed:

```{r metadata_sitenames}
#| message: false
#| warning: false
read_tsv("data/raw_data/metadata.tsv") %>%
  select(site) %>%
  rename(site_raw = site) %>%
  unique() %>%
  left_join(read_tsv("data/raw_data/sites.tsv")) %>%
  filter(site_raw != site) %>%
  kable()
```

The following treatments are present:

```{r metadat_treatments}
#| message: false
#| warning: false
control_names <- c("Control")
read_tsv("data/raw_data/metadata.tsv") %>%
  select(treatment) %>%
  unique() %>%
  mutate(treatment_simpified = ifelse(treatment %in% control_names,
    "control", "logged"
  )) %>%
  group_by(treatment_simpified) %>%
  summarise(treatments = paste(treatment, collapse = ", ")) %>%
  kable()
```

The following sites have non machine readable year of harvest:

```{r metadat_year}
#| message: false
#| warning: false
read_tsv("data/raw_data/metadata.tsv") %>%
  select(site, year_of_harvest) %>%
  unique() %>%
  na.omit() %>%
  filter(is.na(as.numeric(year_of_harvest))) %>%
  kable()
```

## Aggregated data

The following site names in data need to be fixed:

```{r data_sitenames}
#| message: false
#| warning: false
read_csv(aggregated_file) %>%
  rename_all(tolower) %>%
  select(site) %>%
  rename(site_raw = site) %>%
  unique() %>%
  left_join(read_tsv("data/raw_data/sites.tsv")) %>%
  filter(site_raw != site) %>%
  kable()
```

Missing values (NA) across variables of interest:

```{r data_na}
#| message: false
#| warning: false
na_data <- read_csv(aggregated_file) %>%
  rename_all(tolower) %>%
  rename(site_raw = site) %>%
  left_join(read_tsv("data/raw_data/sites.tsv")) %>%
  select(-site_raw) %>%
  filter(variable %in% vars) %>%
  filter(is.na(value)) %>%
  group_by(variable, site) %>%
  summarise(N = n()) %>%
  pivot_wider(names_from = variable, values_from = N)
kable(na_data)
```

Infinite values (Inf) across variables of interest:

```{r data_inf}
#| message: false
#| warning: false
inf_data <- read_csv(aggregated_file) %>%
  rename_all(tolower) %>%
  rename(site_raw = site) %>%
  left_join(read_tsv("data/raw_data/sites.tsv")) %>%
  select(-site_raw) %>%
  filter(variable %in% vars) %>%
  filter(is.infinite(value)) %>%
  group_by(variable, site) %>%
  summarise(N = n()) %>%
  pivot_wider(names_from = variable, values_from = N)
kable(inf_data)
```

Zero values across variables of interest:

```{r data_zero}
#| message: false
#| warning: false
zero_data <- read_csv(aggregated_file) %>%
  rename_all(tolower) %>%
  rename(site_raw = site) %>%
  left_join(read_tsv("data/raw_data/sites.tsv")) %>%
  select(-site_raw) %>%
  filter(variable %in% vars) %>%
  filter(value == 0) %>%
  group_by(variable, site) %>%
  summarise(N = n()) %>%
  pivot_wider(names_from = variable, values_from = N)
kable(zero_data)
```

Spurious structure values across variables of interest:

```{r data_spurious_str}
#| message: false
#| warning: false
lims <- tribble(
  ~variable, ~min, ~max,
  "ba", 5, 80,
  "agb", 50, 800,
  "nstem", 50, 1000,
  "gini", 0, 1
)
spurious_data_str <- read_csv(aggregated_file) %>%
  rename_all(tolower) %>%
  rename(site_raw = site) %>%
  left_join(read_tsv("data/raw_data/sites.tsv")) %>%
  select(-site_raw) %>%
  filter(variable %in% lims$variable) %>%
  left_join(lims) %>%
  filter(value < min | value > max) %>%
  group_by(variable, site) %>%
  summarise(N = n()) %>%
  pivot_wider(names_from = variable, values_from = N)
kable(spurious_data_str)
```

Spurious diversity values across variables of interest:

```{r data_spurious_div}
#| message: false
#| warning: false
lims <- tribble(
  ~variable, ~min, ~max,
  "diversity_q1_gen", 10, 100,
  "FDiv", 0, 1
)
spurious_data_div <- read_csv(aggregated_file) %>%
  rename_all(tolower) %>%
  rename(site_raw = site) %>%
  left_join(read_tsv("data/raw_data/sites.tsv")) %>%
  select(-site_raw) %>%
  filter(variable %in% lims$variable) %>%
  left_join(lims) %>%
  filter(value < min | value > max) %>%
  group_by(variable, site) %>%
  summarise(N = n()) %>%
  pivot_wider(names_from = variable, values_from = N)
kable(spurious_data_div)
```

Spurious functional values across variables of interest:

```{r data_spurious_func}
#| message: false
#| warning: false
lims <- tribble(
  ~variable, ~min, ~max,
  "WD_cwm_ba", 0, 1,
  "SLA_cwm_ba", 5, 30
)
spurious_data_func <- read_csv(aggregated_file) %>%
  rename_all(tolower) %>%
  rename(site_raw = site) %>%
  left_join(read_tsv("data/raw_data/sites.tsv")) %>%
  select(-site_raw) %>%
  filter(variable %in% lims$variable) %>%
  left_join(lims) %>%
  filter(value < min | value > max) %>%
  group_by(variable, site) %>%
  summarise(N = n()) %>%
  pivot_wider(names_from = variable, values_from = N)
kable(spurious_data_func)
```

All sites with NA, infinite, zeros or spurious values will be removed for now:

```{r spurious_sites}
spurious_sites <- bind_rows(
  na_data %>% select(site),
  inf_data %>% select(site),
  zero_data %>% select(site),
  spurious_data_str %>% select(site)
  # spurious_data_div %>% select(site), #nolint
  # spurious_data_func %>% select(site) #nolint
) %>%
  unique() %>%
  arrange() %>%
  mutate(N = seq_len(n()))
kable(spurious_sites)
```

Remaining sites are:

```{r data_remaining}
#| message: false
#| warning: false
read_csv(aggregated_file) %>%
  rename_all(tolower) %>%
  rename(site_raw = site) %>%
  left_join(read_tsv("data/raw_data/sites.tsv")) %>%
  select(-site_raw) %>%
  filter(!(site %in% spurious_sites$site)) %>%
  select(site) %>%
  unique() %>%
  arrange() %>%
  mutate(N = seq_len(n())) %>%
  kable()
```
