```{r set}
#| message: false
#| include: false
library(tidyverse)
library(knitr)
library(cmdstanr)
library(bayesplot)
library(patchwork)
list.files("r", full.names = TRUE, pattern = ".R") %>%
  lapply(source)
```

# Stem {.unnumbered}

Stem density in trees per hectare directly derived from censuses.

## Data

```{r data}
#| message: false
#| warning: false
var <- "nstem"
if (!exists(file.path("chains", var))) {
  dir.create(file.path("chains", var))
}
lab <- expression("Stem [ trees" ~ ha^{
  -1
} ~ "]")
data_rec <- read_tsv("data/derived_data/data_rec.tsv") %>%
  filter(variable == var)
data_pre <- read_tsv("data/derived_data/data_pre.tsv") %>%
  filter(variable == var)
data_old <- read_tsv("data/derived_data/data_old.tsv") %>%
  filter(variable == var)
```

```{r fig}
#| fig-cap: "Modelled trajectories."
bind_rows(data_rec, data_pre, data_old) %>%
  ggplot(aes(rel_year, y, group = paste(site, plot), col = treatment)) +
  geom_line() +
  facet_wrap(~site) +
  theme_bw() +
  xlab("") +
  ylab(lab) +
  theme(legend.position = "bottom") +
  scale_color_discrete("")
```

## LTP

```{r load_ltp}
#| message: false
#| warning: false
path <- file.path("chains", var, "ltp")
fit_ltp <- as_cmdstan_fit(list.files(path, full.names = TRUE))
fit_ltp
```

```{r pvo_ltp}
#| message: false
#| warning: false
#| fig-cap: "Predicted versus observed."
pvo_fig(data_rec, data_pre, fit_ltp)
```

```{r preds_ltp}
#| message: false
#| warning: false
#| fig-cap: "Predicted trajectories."
proj_fig(data_rec, data_pre, data_old, fit_ltp, lab)
```

## STP

```{r load_stp}
#| message: false
#| warning: false
path <- file.path("chains", var, "stp")
fit_stp <- as_cmdstan_fit(list.files(path, full.names = TRUE))
fit_stp
```

```{r pvo_stp}
#| message: false
#| warning: false
#| fig-cap: "Predicted versus observed."
pvo_fig(data_rec, data_pre, fit_stp)
```

```{r preds_stp}
#| message: false
#| warning: false
#| fig-cap: "Predicted trajectories."
proj_fig(data_rec, data_pre, data_old, fit_stp, lab)
```

## Comparison

```{r lambda_comp}
#| message: false
#| warning: false
#| fig-cap: "lambda comparison across models."
comp_lambda_fig(data_rec, fit_ltp, fit_stp)
```
