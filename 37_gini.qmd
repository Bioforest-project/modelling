```{r set}
#| message: false
#| include: false
library(tidyverse)
library(knitr)
library(cmdstanr)
library(bayesplot)
library(loo)
library(patchwork)
list.files("r", full.names = TRUE, pattern = ".R") %>% 
         lapply(source)
```

# Gini {.unnumbered}

Test of modelling with Gini index.

## Data

```{r data}
#| message: false
#| warning: false
var <- "gini"
if (!exists(file.path("chains", var))) {
  dir.create(file.path("chains", var))
}
lab <- "Gini"
data <- read_tsv("data/derived_data/data.tsv") %>%
  filter(variable == var) %>%
  unique() %>%
  mutate(value = value + 1) %>%
  rename(stem = value) %>%
  select(-env, -env_value, -variable) %>%
  unique() %>%
  filter(!is.infinite(harvest_year_min)) %>%
  mutate(sitenum = as.numeric(as.factor(site)))
data_rec <- data %>%
  filter(treatment == "logged", rel_year > 2) %>%
  mutate(plotnum = as.numeric(as.factor(paste0(site, "_", plot))))
data_old <- data %>%
  filter(treatment == "control") %>%
  mutate(plotoldnum = as.numeric(as.factor(paste0(site, "_", plot))))
data_pre <- data %>% filter(rel_year <= 0)
ind_rec <- data_rec %>%
  select(site, plot, sitenum, plotnum) %>%
  unique() %>%
  arrange(plotnum)
mdata <- list(
  n_rec = nrow(data_rec),
  n_old = nrow(data_old),
  n_pre = nrow(data_pre),
  n_site = max(data_rec$sitenum),
  n_plot_rec = max(data_rec$plotnum),
  stem_rec = data_rec$stem,
  stem_old = data_old$stem,
  stem_pre = data_pre$stem,
  time = data_rec$rel_year - 3,
  site_rec = data_rec$sitenum,
  site_old = data_old$sitenum,
  site_pre = data_pre$sitenum,
  plot_rec = data_rec$plotnum,
  site_plot_rec = ind_rec$sitenum,
  dist_bounds = c(0.1, 1.5),
  delta_bounds = c(0, 2),
  mu_thetaInf_bounds = c(0, 2),
  thetaInf_s_bounds = c(0, 2)
)
```

```{r fig}
#| fig-cap: "Modelled trajectories."
ggplot(data, aes(rel_year, stem, group = paste(site, plot), col = treatment)) +
  geom_line() +
  facet_wrap(~site) +
  theme_bw() +
  xlab("") +
  ylab(lab) +
  theme(legend.position = "bottom") +
  scale_color_discrete("")
```

## LTP

```{r ltp_fit}
#| eval: false
ltp <- cmdstan_model("models/ltp.stan")
path <- file.path("chains", var, "ltp")
unlink(path, recursive = TRUE)
dir.create(path)
fit_ltp <- ltp$sample(
  data = mdata,
  chains = 4,
  parallel_chains = 4,
  save_warmup = FALSE,
  output_dir = path
)
```

```{r load_ltp}
#| message: false
#| warning: false
path <- file.path("chains", var, "ltp")
fit_ltp <- as_cmdstan_fit(list.files(path, full.names = TRUE))
data_old <- data_old %>%
  group_by(site) %>%
  mutate(rel_year = max(rel_year + 2))
data_rec$preds <- fit_ltp$summary(c("mu_rec"), median)$median
data_pre$preds <- fit_ltp$summary(c("mu_pre"), median)$median
fit_ltp
```

```{r pvo_ltp}
#| message: false
#| warning: false
#| fig-cap: "Predicted versus observed."
pvo_fig(data_rec, data_pre)
```

```{r preds_ltp}
#| message: false
#| warning: false
#| fig-cap: "Predicted trajectories."
ltp_fig(data_rec, data_pre, data_old, fit_ltp, lab)
```

## STP

```{r stp_fit}
#| eval: false
stp <- cmdstan_model("models/stp.stan")
path <- file.path("chains", var, "stp")
unlink(path, recursive = TRUE)
dir.create(path)
fit_stp <- stp$sample(
  data = mdata,
  chains = 4,
  parallel_chains = 4,
  save_warmup = FALSE,
  output_dir = path
)
```

```{r load_stp}
#| message: false
#| warning: false
path <- file.path("chains", var, "stp")
fit_stp <- as_cmdstan_fit(list.files(path, full.names = TRUE))
data_old <- data_old %>%
  group_by(site) %>%
  mutate(rel_year = max(rel_year + 2))
data_rec$preds <- fit_stp$summary(c("mu_rec"), median)$median
data_pre$preds <- fit_stp$summary(c("mu_pre"), median)$median
fit_stp
```

```{r pvo_stp}
#| message: false
#| warning: false
#| fig-cap: "Predicted versus observed."
pvo_fig(data_rec, data_pre)
```

```{r preds_stp}
#| message: false
#| warning: false
#| fig-cap: "Predicted trajectories."
stp_fig(data_rec, data_pre, data_old, fit_stp, lab)
```
