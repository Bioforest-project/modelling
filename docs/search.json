[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "modelling",
    "section": "",
    "text": "Introduction\nmodelling is a sub-project of the BioForest project aimed at species related data (correct names, functional traits, phylogeny) as part of the data preparation for data preparation within the project."
  },
  {
    "objectID": "index.html#usage",
    "href": "index.html#usage",
    "title": "modelling",
    "section": "Usage",
    "text": "Usage\nAll modelling analyses rely on the quarto documents (files.qmd) that can be run with R and associated environment defined with renv."
  },
  {
    "objectID": "index.html#project",
    "href": "index.html#project",
    "title": "modelling",
    "section": "Project",
    "text": "Project\nmodelling includes:\n\nAnalyse of the data with associated documentation and figures:\n\nReproductive analyses in files.qmd\nResulting pages in docs/\nDocument structure definition in _quarto.yml\n\nData in data/ with:\n\nAll raw data in raw_data/\nAll derived data in derived_sata/\n\nStan Bayesian models in models/\nR scripts with funtions in r/\nIntermediary files in outputs/\nFigures in figures/\nR environment definition with renv in renv/ and renv/lock\nR files (.Rbuildignore , .Rdata , .Rprofile , .Rhistory, .lintr)\nGit and GitHub files (.gitignore , .github/)\nProject documentation (README.qmd , README.md , NEWS.md, LICENSE )"
  },
  {
    "objectID": "index.html#contribution",
    "href": "index.html#contribution",
    "title": "modelling",
    "section": "Contribution",
    "text": "Contribution\nYou can contribute to the project by forking the repository on github and cloning the fork to your machine using several options, including GitHub desktop GUI. Further informations on contribution are detailed in the online document: https://bioforest-project.github.io/data_preparation/98_contributing.html."
  },
  {
    "objectID": "index.html#help",
    "href": "index.html#help",
    "title": "modelling",
    "section": "Help",
    "text": "Help\nPlease preferentially create an issue on GitHub for any questions, bugs or help needed regarding modelling: https://github.com/Bioforest-project/modelling/issues . You may however reach us by mail with people from the core group (see below)."
  },
  {
    "objectID": "index.html#core-group",
    "href": "index.html#core-group",
    "title": "modelling",
    "section": "Core group",
    "text": "Core group\n\nSylvain Schmitt (sylvain.schmitt@cirad.fr)\nCamille Piponiot-Laroche (camille.piponiot-laroche@cirad.fr)\nBruno HÃ©rault (bruno.herault@cirad.fr)\n\nThe whole group consist of participants to the Bioforest project."
  },
  {
    "objectID": "11_observations.html",
    "href": "11_observations.html",
    "title": "Observations",
    "section": "",
    "text": "Data exploration.\nTo do:\n\nn_fixation, dispersal\nlog sla log la\n\n\n\nCode\nmetadata &lt;- read_sheet(\"https://docs.google.com/spreadsheets/d/1fq2owxMBLBwwibcdw2uQQFxnIhsMbaH4Qcj_xUwVvSQ/edit?gid=0#gid=0\", col_types = \"c\") %&gt;% # nolint\n  rename_all(tolower) %&gt;%\n  select(site, plot, treatment, year_of_harvest) %&gt;%\n  separate(year_of_harvest, \"year_of_harvest\") %&gt;%\n  mutate(year_of_harvest = as.numeric(year_of_harvest)) %&gt;%\n  rename(harvest_year = year_of_harvest) %&gt;%\n  mutate(treatment = ifelse(\n    treatment %in% c(\"control\", \"Control\", \"Natural_Forest\"),\n    \"control\", \"logged\"\n  )) %&gt;%\n  group_by(site) %&gt;%\n  mutate(harvest_year_min = min(harvest_year, na.rm = TRUE)) %&gt;%\n  mutate(harvest_year = ifelse(site == \"Paracou\", 1986, harvest_year)) %&gt;%\n  mutate(harvest_year_min = ifelse(site == \"Paracou\", 1986, harvest_year_min))\ndata &lt;- read_csv(\"data/raw_data/aggregated_data.csv\") %&gt;%\n  rename_all(tolower) %&gt;%\n  left_join(read_tsv(\"data/raw_data/environment.tsv\") %&gt;%\n              gather(env, env_value, -site, -plot)) %&gt;%\n  left_join(read_csv(\"data/raw_data/plot_area.csv\") %&gt;%\n              rename_all(tolower) %&gt;%\n              select(site, plot, plotarea) %&gt;%\n              unique()) %&gt;%\n  left_join(metadata) %&gt;%\n  filter(!(site %in% c(\"Peteco\", \"Bafog\", \"Tene\", \"Montagne_Tortue\"))) %&gt;%\n  filter(!(site == \"Kabo\" & year &lt; 1980)) %&gt;%\n  mutate(rel_year = ifelse(treatment == \"control\",\n    year - harvest_year_min,\n    year - harvest_year\n  ))\nwrite_tsv(data, \"data/derived_data/data.tsv\")\n\n\n\n\nCode\nread_tsv(\"data/derived_data/data.tsv\") %&gt;%\n  ggplot(aes(year, value, group = paste(site, plot))) +\n  geom_line() +\n  theme_bw() +\n  facet_wrap(~variable, scales = \"free_y\") +\n  theme(\n    axis.title = element_blank(),\n    strip.text = element_text(size = 6)\n  )\n\n\n\n\n\nDummy figure 1 - traj.\n\n\n\n\n\n\nCode\nread_tsv(\"data/derived_data/data.tsv\") %&gt;%\n  filter(variable == \"agb\", env == \"cwd\") %&gt;%\n  na.omit() %&gt;%\n  ggplot(aes(year, value, group = paste(site, plot), col = env_value)) +\n  geom_line() +\n  theme_bw() +\n  scale_color_viridis_c(\"Climate\\nwater\\ndeficit\\n[ mm ]\") +\n  xlab(\"\") +\n  ylab(expression(\"AGB [\" ~ Mg ~ ha^{\n    -1\n  } ~ \"]\"))\n\n\n\n\n\nDummy figure 2 - env.\n\n\n\n\n\n\nCode\nmake_fig &lt;- function(var) {\n  g &lt;- read_tsv(\"data/derived_data/data.tsv\") %&gt;%\n    filter(variable == var) %&gt;%\n    ggplot(aes(year, value, group = paste(site, plot), col = treatment)) +\n    geom_line() +\n    theme_bw() +\n    xlab(\"\") +\n    ylab(\"\") +\n    facet_wrap(~site, scales = \"free\") +\n    geom_vline(aes(xintercept = harvest_year)) +\n    theme(legend.position = \"bottom\") +\n    ggtitle(var)\n  ggsave(plot = g, filename = paste0(\"figures/obs/\", var, \".png\"))\n}\nunique(read_tsv(\"data/derived_data/data.tsv\")$variable) %&gt;%\n  lapply(make_fig)\n\n\n\n\nCode\nread_tsv(\"data/derived_data/data.tsv\") %&gt;%\n  filter(variable == \"agb_mort\") %&gt;%\n  ggplot(aes(year, log(value), group = paste(site, plot), col = treatment)) +\n  geom_line() +\n  theme_bw() +\n  xlab(\"\") +\n  ylab(expression(\"AGB [\" ~ Mg ~ ha^{\n    -1\n  } ~ \"]\")) +\n  facet_wrap(~site, scales = \"free\") +\n  geom_vline(aes(xintercept = harvest_year)) +\n  theme(legend.position = \"bottom\")\n\n\n\n\n\nDummy figure 3 - treatment."
  },
  {
    "objectID": "21_models.html#ltp",
    "href": "21_models.html#ltp",
    "title": "Models",
    "section": "LTP",
    "text": "LTP\nLong term process only model:\n\\[\n\\begin{align}\n\\mu_{rec} = \\theta_{0,p} + (\\theta_{\\infty,s} - \\theta_{0,p}) \\times LTP \\\\\nLTP = 1 - e^{-\\lambda_p \\times time}\n\\end{align}\n\\]\n\n\nCode\nltp &lt;- function(time, dist, thetainf, lambda) {\n  theta0 &lt;- thetainf * dist\n  ltp &lt;- 1 - exp(-lambda * time)\n  return(theta0 + (thetainf - theta0) * (ltp))\n}\ndata.frame(time = seq(0.1, 50, length.out = 100)) %&gt;%\n  mutate(y_ltp = ltp(time, dist = 0.5, thetainf = 20, lambda = 0.05)) %&gt;%\n  bind_rows(data.frame(time = 0, y_stp = 20, y_ltp = 20)) %&gt;%\n  ggplot(aes(time)) +\n  geom_line(aes(y = y_ltp)) +\n  theme_bw() +\n  annotate(\"text\", x = 52, y = 19.5, label = \"theta[Inf]\", \n           col = \"#9ea1d4\", parse = TRUE, size = 5) +\n  annotate(\"text\", x = 20, y = 15, label = \"lambda\", \n           col = \"#a8d2d1\", parse = TRUE, size = 5) +\n  annotate(\"text\", x = -4, y = 15, label = \"dist\", \n           col = \"#fc8a8a\", parse = TRUE, size = 5) +\n  theme(axis.title = element_blank()) +\n  geom_segment(aes(x = -2, y = 10, xend = -2, yend = 20), \n               arrow = arrow(length = unit(0.2, \"cm\")), col = \"#fc8a8a\") +\n  geom_segment(aes(x = -2, y = 20, xend = -2, yend = 10), \n               arrow = arrow(length = unit(0.2, \"cm\")), col = \"#fc8a8a\")\n\n\n\n\n\nLTP proj with pars."
  },
  {
    "objectID": "21_models.html#stp",
    "href": "21_models.html#stp",
    "title": "Models",
    "section": "STP",
    "text": "STP\nLong term and short term processes model based on disturbance index \\(dist\\):\n\\[\n\\begin{align}\n\\mu_{rec} = \\theta_{0,p} + (\\theta_{\\infty,s} - \\theta_{0,p}) \\times (LTP+STP) \\\\\nLTP = 1 - e^{-\\lambda_p \\times time} \\\\\nSTP = \\delta_p \\times (\\frac{time}{\\tau_s} \\times e^{1-\\frac{time}{\\tau_s}})^2 \\\\\n\\theta_{0,p} = \\theta_{\\infty,s} \\times dist_p\n\\end{align}\n\\]\n\n\nCode\nstp &lt;- function(time, dist, thetainf, lambda, tau, delta) {\n  theta0 &lt;- thetainf * dist\n  ltp &lt;- 1 - exp(-lambda * time)\n  stp &lt;- delta * (time / tau * exp(1 - time / tau))^2\n  return(theta0 + (thetainf - theta0) * (ltp + stp))\n}\ndata.frame(time = seq(0.1, 50, length.out = 100)) %&gt;%\n  mutate(y_stp = stp(time, dist = 0.5, thetainf = 20, lambda = 0.05,\n                     tau = 5, delta = 1)) %&gt;%\n  mutate(y_ltp = ltp(time, dist = 0.5, thetainf = 20, lambda = 0.05)) %&gt;%\n  bind_rows(data.frame(time = 0, y_stp = 20, y_ltp = 20)) %&gt;%\n  ggplot(aes(time)) +\n  geom_line(aes(y = y_ltp), col = \"grey\") +\n  geom_line(aes(y = y_stp)) +\n  theme_bw() +\n  annotate(\"text\", x = 52, y = 19.5, label = \"theta[Inf]\", \n           col = \"#9ea1d4\", parse = TRUE, size = 5) +\n  annotate(\"text\", x = 20, y = 15, label = \"lambda\", \n           col = \"#a8d2d1\", parse = TRUE, size = 5) +\n  annotate(\"text\", x = -4, y = 15, label = \"dist\", \n           col = \"#fc8a8a\", parse = TRUE, size = 5) +\n  theme(axis.title = element_blank()) +\n  geom_segment(aes(x = -2, y = 10, xend = -2, yend = 20), \n               arrow = arrow(length = unit(0.2, \"cm\")), col = \"#fc8a8a\") +\n  geom_segment(aes(x = -2, y = 20, xend = -2, yend = 10), \n               arrow = arrow(length = unit(0.2, \"cm\")), col = \"#fc8a8a\") +\n  annotate(\"text\", x = 6, y = 11.3, label = \"tau\", \n           col = \"#f2e5a9\", parse = TRUE, size = 5) +\n  annotate(\"text\", x = 5, y = 17.5, label = \"delta\", \n           col = \"#a7d6ac\", parse = TRUE, size = 5) +\n  geom_segment(aes(x = 6, y = 13, xend = 6, yend = 22), \n               arrow = arrow(length = unit(0.2, \"cm\")), col = \"#a7d6ac\") +\n  geom_segment(aes(x = 6, y = 22, xend = 6, yend = 13), \n               arrow = arrow(length = unit(0.2, \"cm\")), col = \"#a7d6ac\") +\n  geom_segment(aes(x = 6, y = 11, xend = 6, yend = 10), \n               arrow = arrow(length = unit(0.2, \"cm\")), col = \"#f2e5a9\") +\n  theme(axis.title = element_blank())\n\n\n\n\n\nSTP proj with pars.\n\n\n\n\nChoices:\n\nUsing the log of y and a normal distribution centred on log(mu)\nCauchy hyperdist\nForced dist_p&lt;1\nBounds of theta\nFree tau\nFree delta\n\nâ ï¸ Hump is mathematically opposed to the sign of dist_p-1."
  },
  {
    "objectID": "21_models.html#old",
    "href": "21_models.html#old",
    "title": "Models",
    "section": "Old",
    "text": "Old\n\nSTP sum\nmodels/stp_sum.stan\n\\[\n\\begin{align}\n\\mu_{rec} = \\theta_{0,p} + (\\theta_{\\infty,s} - \\theta_{0,p}) \\times (LTP+STP) \\\\\nLTP = 1 - e^{-\\lambda_p \\times time} \\\\\nSTP = \\delta_p \\times (\\frac{time}{\\tau_s} \\times e^{1-\\frac{time}{\\tau_s}})^2 \\\\\n\\theta_{0,p} = \\theta_{\\infty,s} \\times dist_p\n\\end{align}\n\\]\n\n\nSTP lognormal\nmodels/stp.stan\n\\[\n\\begin{align}\n\\mu_{rec} = \\theta_{0,p} + (\\theta_{\\infty,s} - \\theta_{0,p}) \\times (LTP+STP) \\\\\nLTP = 1 - e^{-\\lambda_p \\times time} \\\\\nSTP = \\delta_p \\times (\\frac{time}{\\tau_s} \\times e^{1-\\frac{time}{\\tau_s}})^2 \\\\\n\\theta_{0,p} = \\theta_{\\infty,s} \\times dist_p\n\\end{align}\n\\]\n\n\nSTP correlated\nmodels/stp_cor.stan\nImposed variance-covariance matrix on dist_p and delta_p.\n\\[\n\\begin{align}\n\\mu_{rec} = \\theta_{0,p} + (\\theta_{\\infty,s} - \\theta_{0,p}) \\times (LTP+STP) \\\\\nLTP = 1 - e^{-\\lambda_p \\times time} \\\\\nSTP = \\delta_p \\times (\\frac{time}{\\tau_s} \\times e^{1-\\frac{time}{\\tau_s}})^2 \\\\\n\\theta_{0,p} = \\theta_{\\infty,s} \\times dist_p\n\\end{align}\n\\]"
  },
  {
    "objectID": "21_models.html#parrallel",
    "href": "21_models.html#parrallel",
    "title": "Models",
    "section": "Parrallel",
    "text": "Parrallel\ndummy_par.stan"
  },
  {
    "objectID": "31_stem.html#data",
    "href": "31_stem.html#data",
    "title": "Stem",
    "section": "Data",
    "text": "Data\n\n\nCode\nvar &lt;- \"nstem\"\nif (!exists(file.path(\"chains\", var))) {\n  dir.create(file.path(\"chains\", var))\n}\nlab &lt;- expression(\"Stem [ trees\" ~ ha^{\n  -1\n} ~ \"]\")\ndata &lt;- read_tsv(\"data/derived_data/data.tsv\") %&gt;%\n  filter(variable == var) %&gt;%\n  unique() %&gt;%\n  rename(stem = value) %&gt;%\n  select(-env, -env_value, -variable) %&gt;%\n  unique() %&gt;%\n  filter(!is.infinite(harvest_year_min)) %&gt;%\n  mutate(sitenum = as.numeric(as.factor(site)))\ndata_rec &lt;- data %&gt;%\n  filter(treatment == \"logged\", rel_year &gt; 2) %&gt;%\n  mutate(plotnum = as.numeric(as.factor(paste0(site, \"_\", plot))))\ndata_old &lt;- data %&gt;% filter(treatment == \"control\")\ndata_pre &lt;- data %&gt;% filter(rel_year &lt;= 0)\nind_rec &lt;- data_rec %&gt;%\n  select(site, plot, sitenum, plotnum) %&gt;%\n  unique() %&gt;%\n  arrange(plotnum)\nmdata &lt;- list(\n  n_rec = nrow(data_rec),\n  n_old = nrow(data_old),\n  n_pre = nrow(data_pre),\n  n_site = max(data_rec$sitenum),\n  n_plot_rec = max(data_rec$plotnum),\n  stem_rec = data_rec$stem,\n  stem_old = data_old$stem,\n  stem_pre = data_pre$stem,\n  time = data_rec$rel_year - 3,\n  site_rec = data_rec$sitenum,\n  site_old = data_old$sitenum,\n  site_pre = data_pre$sitenum,\n  plot_rec = data_rec$plotnum,\n  site_plot_rec = ind_rec$sitenum,\n  dist_bounds = c(0.1, 1),\n  delta_bounds = c(0, 5),\n  mu_thetaInf_bounds = c(100, 1000),\n  thetaInf_s_bounds = c(50, 2000)\n)\n\n\n\n\nCode\nggplot(data, aes(rel_year, stem, group = paste(site, plot), col = treatment)) +\n  geom_line() +\n  facet_wrap(~site) +\n  theme_bw() +\n  xlab(\"\") +\n  ylab(lab) +\n  theme(legend.position = \"bottom\") +\n  scale_color_discrete(\"\")\n\n\n\n\n\nModelled trajectories."
  },
  {
    "objectID": "31_stem.html#ltp",
    "href": "31_stem.html#ltp",
    "title": "Stem",
    "section": "LTP",
    "text": "LTP\n\n\nCode\nltp &lt;- cmdstan_model(\"models/ltp.stan\")\npath &lt;- file.path(\"chains\", var, \"ltp\")\nunlink(path, recursive = TRUE)\ndir.create(path)\nfit_ltp &lt;- ltp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = path\n)\n\n\n\n\nCode\npath &lt;- file.path(\"chains\", var, \"ltp\")\nfit_ltp &lt;- as_cmdstan_fit(list.files(path, full.names = TRUE))\nfit_ltp\n\n\n   variable    mean  median    sd   mad      q5     q95 rhat ess_bulk ess_tail\n lp__       2114.75 2114.28 20.29 20.04 2083.79 2149.27 1.01      265      361\n mu_dist       0.79    0.79  0.02  0.02    0.76    0.82 1.01      565      886\n sigma_dist    0.08    0.08  0.01  0.01    0.06    0.10 1.00     1279     2686\n dist_p[1]     0.79    0.79  0.06  0.06    0.68    0.88 1.01     1779     1647\n dist_p[2]     0.87    0.87  0.06  0.06    0.77    0.97 1.00     1580     1260\n dist_p[3]     0.77    0.77  0.05  0.05    0.68    0.85 1.00     2104     2457\n dist_p[4]     0.80    0.80  0.06  0.06    0.70    0.90 1.00     1744     1982\n dist_p[5]     0.77    0.77  0.05  0.05    0.69    0.85 1.00     2095     2713\n dist_p[6]     0.81    0.81  0.05  0.05    0.73    0.90 1.00     1951     1425\n dist_p[7]     0.82    0.82  0.06  0.06    0.72    0.92 1.00     1676     1701\n\n # showing 10 of 3425 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\ndata_old &lt;- data_old %&gt;%\n  group_by(site) %&gt;%\n  mutate(rel_year = max(rel_year + 2))\ndata_rec$preds &lt;- fit_ltp$summary(c(\"mu_rec\"), median)$median\nrmse_rec &lt;- sqrt(mean((data_rec$preds - data_rec$stem)^2, na.rm = TRUE))\ng_rec &lt;- data_rec %&gt;%\n  ggplot(aes(preds, stem)) +\n  geom_point(alpha = 0.25) +\n  geom_abline(col = \"red\", linetype = \"dashed\") +\n  ggtitle(\"Recovery\", paste(\"RMSE =\", round(rmse_rec, 2))) +\n  theme_bw() +\n  xlab(\"Predicted\") +\n  ylab(\"Observed\")\ndata_pre$preds &lt;- fit_ltp$summary(c(\"mu_pre\"), median)$median\nrmse_pre &lt;- sqrt(mean((data_pre$preds - data_pre$stem)^2, na.rm = TRUE))\ng_pre &lt;- data_pre %&gt;%\n  ggplot(aes(preds, stem, col = site)) +\n  geom_point(alpha = 0.25) +\n  geom_abline(col = \"red\", linetype = \"dashed\") +\n  ggtitle(\"Prelogging\", paste(\"RMSE =\", round(rmse_pre, 2))) +\n  theme_bw() +\n  scale_color_discrete(\"\") +\n  theme(legend.position = \"bottom\") +\n  xlab(\"Predicted\") +\n  ylab(\"Observed\")\ng_pre + g_rec\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nbind_rows(data_pre, data_rec, data_old) %&gt;%\n  ggplot(aes(rel_year, group = paste(site, plot), col = plot)) +\n  geom_point(aes(y = stem), alpha = .5) +\n  geom_line(aes(y = preds)) +\n  facet_wrap(~site, scales = \"free\") +\n  theme_bw() +\n  xlab(\"\") +\n  theme(legend.position = \"bottom\") +\n  ylab(lab) +\n  scale_color_discrete(guide = \"none\")\n\n\nWarning: Removed 414 rows containing missing values or values outside the scale range\n(`geom_line()`).\n\n\n\n\n\nPredicted trajectories."
  },
  {
    "objectID": "31_stem.html#stp",
    "href": "31_stem.html#stp",
    "title": "Stem",
    "section": "STP",
    "text": "STP\n\n\nCode\nstp &lt;- cmdstan_model(\"models/stp.stan\")\npath &lt;- file.path(\"chains\", var, \"stp\")\nunlink(path, recursive = TRUE)\ndir.create(path)\nfit_stp &lt;- stp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = path\n)\n\n\n\n\nCode\npath &lt;- file.path(\"chains\", var, \"stp\")\nfit_stp &lt;- as_cmdstan_fit(list.files(path, full.names = TRUE))\nfit_stp\n\n\n   variable    mean  median    sd   mad      q5     q95 rhat ess_bulk ess_tail\n lp__       2512.30 2512.06 24.54 23.85 2472.42 2552.69 1.01      375      506\n mu_dist       0.73    0.73  0.02  0.02    0.70    0.77 1.00     1462     2387\n sigma_dist    0.09    0.09  0.01  0.01    0.07    0.11 1.00     2585     2677\n dist_p[1]     0.70    0.70  0.04  0.04    0.63    0.77 1.00     3538     2868\n dist_p[2]     0.85    0.85  0.05  0.06    0.76    0.94 1.00     2715     2234\n dist_p[3]     0.72    0.72  0.04  0.04    0.65    0.79 1.00     3503     2657\n dist_p[4]     0.72    0.72  0.04  0.04    0.65    0.79 1.00     3709     2584\n dist_p[5]     0.73    0.73  0.04  0.04    0.66    0.80 1.00     3328     2682\n dist_p[6]     0.80    0.80  0.04  0.04    0.73    0.87 1.00     2368     2258\n dist_p[7]     0.76    0.76  0.05  0.04    0.69    0.84 1.00     3595     2389\n\n # showing 10 of 4397 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\ndata_old &lt;- data_old %&gt;%\n  group_by(site) %&gt;%\n  mutate(rel_year = max(rel_year + 2))\ndata_rec$preds &lt;- fit_stp$summary(c(\"mu_rec\"), median)$median\nrmse_rec &lt;- sqrt(mean((data_rec$preds - data_rec$stem)^2, na.rm = TRUE))\ng_rec &lt;- data_rec %&gt;%\n  ggplot(aes(preds, stem)) +\n  geom_point(alpha = 0.25) +\n  geom_abline(col = \"red\", linetype = \"dashed\") +\n  ggtitle(\"Recovery\", paste(\"RMSE =\", round(rmse_rec, 2))) +\n  theme_bw() +\n  xlab(\"Predicted\") +\n  ylab(\"Observed\")\ndata_pre$preds &lt;- fit_stp$summary(c(\"mu_pre\"), median)$median\nrmse_pre &lt;- sqrt(mean((data_pre$preds - data_pre$stem)^2, na.rm = TRUE))\ng_pre &lt;- data_pre %&gt;%\n  ggplot(aes(preds, stem, col = site)) +\n  geom_point(alpha = 0.25) +\n  geom_abline(col = \"red\", linetype = \"dashed\") +\n  ggtitle(\"Prelogging\", paste(\"RMSE =\", round(rmse_pre, 2))) +\n  theme_bw() +\n  scale_color_discrete(\"\") +\n  theme(legend.position = \"bottom\") +\n  xlab(\"Predicted\") +\n  ylab(\"Observed\")\ng_pre + g_rec\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nbind_rows(data_pre, data_rec, data_old) %&gt;%\n  ggplot(aes(rel_year, group = paste(site, plot), col = plot)) +\n  geom_point(aes(y = stem), alpha = .5) +\n  geom_line(aes(y = preds)) +\n  facet_wrap(~site, scales = \"free\") +\n  theme_bw() +\n  xlab(\"\") +\n  theme(legend.position = \"bottom\") +\n  ylab(lab) +\n  scale_color_discrete(guide = \"none\")\n\n\nWarning: Removed 414 rows containing missing values or values outside the scale range\n(`geom_line()`).\n\n\n\n\n\nPredicted trajectories.\n\n\n\n\n\n\nCode\nt &lt;- fit_stp$summary(\n  c(\n    \"mu_dist\", \"dist_p\", \"sigma_dist\",\n    \"mu_lambda\", \"sigma_lambda\", \"lambda_p\",\n    \"mu_thetaInf\", \"sigma_thetaInf\", \"thetaInf_s\",\n    \"mu_delta\", \"delta_p\", \"sigma_delta\",\n    \"mu_tau\", \"tau_s\", \"sigma_tau\",\n    \"sigma_old\", \"sigma_pre\", \"sigma_rec\"\n  ),\n  \"rhat\"\n) %&gt;%\n  filter(rhat &gt; 1.1)\nt$variable\n\n\ncharacter(0)\n\n\n\n\nCode\npars &lt;- c(\n  \"mu_dist\", \"sigma_dist\", \"mu_lambda\", \"sigma_lambda\", \"mu_thetaInf\",\n  \"sigma_thetaInf\", \"sigma_old\", \"sigma_pre\", \"sigma_rec\", \"mu_delta\",\n  \"sigma_delta\", \"mu_tau\", \"sigma_tau\"\n)\nfit_stp$draws(pars) %&gt;%\n  mcmc_dens()\n\n\n\n\n\nPosteriors generals pars.\n\n\n\n\n\n\nCode\nfit_stp$draws(\"delta_p\") %&gt;%\n  mcmc_intervals()\n\n\n\n\n\nPosteriors delta_p."
  },
  {
    "objectID": "31_stem.html#comparison",
    "href": "31_stem.html#comparison",
    "title": "Stem",
    "section": "Comparison",
    "text": "Comparison\n\n\nCode\nloo_compare(\n  list(\n    ltp = fit_ltp$loo(),\n    stp = fit_stp$loo()\n  )\n) %&gt;%\n  kable()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nelpd_diff\nse_diff\nelpd_loo\nse_elpd_loo\np_loo\nse_p_loo\nlooic\nse_looic\n\n\n\n\nltp\n0.00000\n0.000000\n453.0664\n7.088091\n10.73106\n0.3127058\n-906.1329\n14.17618\n\n\nstp\n-22.48864\n5.909868\n430.5778\n6.234222\n17.11137\n0.4121705\n-861.1556\n12.46844"
  },
  {
    "objectID": "32_wd.html#data",
    "href": "32_wd.html#data",
    "title": "WD",
    "section": "Data",
    "text": "Data\n\n\nCode\nvar &lt;- \"WD_cwm_ba\"\nif (!exists(file.path(\"chains\", var))) {\n  dir.create(file.path(\"chains\", var))\n}\nlab &lt;- expression(\"WD [ g\" ~ cm^{\n  -3\n} ~ \"]\")\ndata &lt;- read_tsv(\"data/derived_data/data.tsv\") %&gt;%\n  filter(variable == var) %&gt;%\n  unique() %&gt;%\n  rename(stem = value) %&gt;%\n  select(-env, -env_value, -variable) %&gt;%\n  unique() %&gt;%\n  filter(!is.infinite(harvest_year_min)) %&gt;%\n  mutate(sitenum = as.numeric(as.factor(site)))\ndata_rec &lt;- data %&gt;%\n  filter(treatment == \"logged\", rel_year &gt; 2) %&gt;%\n  mutate(plotnum = as.numeric(as.factor(paste0(site, \"_\", plot))))\ndata_old &lt;- data %&gt;% filter(treatment == \"control\")\ndata_pre &lt;- data %&gt;% filter(rel_year &lt;= 0)\nind_rec &lt;- data_rec %&gt;%\n  select(site, plot, sitenum, plotnum) %&gt;%\n  unique() %&gt;%\n  arrange(plotnum)\nmdata &lt;- list(\n  n_rec = nrow(data_rec),\n  n_old = nrow(data_old),\n  n_pre = nrow(data_pre),\n  n_site = max(data_rec$sitenum),\n  n_plot_rec = max(data_rec$plotnum),\n  stem_rec = data_rec$stem,\n  stem_old = data_old$stem,\n  stem_pre = data_pre$stem,\n  time = data_rec$rel_year - 3,\n  site_rec = data_rec$sitenum,\n  site_old = data_old$sitenum,\n  site_pre = data_pre$sitenum,\n  plot_rec = data_rec$plotnum,\n  site_plot_rec = ind_rec$sitenum,\n  dist_bounds = c(0.1, 1.5),\n  delta_bounds = c(0, 2),\n  mu_thetaInf_bounds = c(0.5, 1.3),\n  thetaInf_s_bounds = c(0.5, 1.3)\n)\n\n\n\n\nCode\nggplot(data, aes(rel_year, stem, group = paste(site, plot), col = treatment)) +\n  geom_line() +\n  facet_wrap(~site) +\n  theme_bw() +\n  xlab(\"\") +\n  ylab(lab) +\n  theme(legend.position = \"bottom\") +\n  scale_color_discrete(\"\")\n\n\n\n\n\nModelled trajectories."
  },
  {
    "objectID": "32_wd.html#ltp",
    "href": "32_wd.html#ltp",
    "title": "WD",
    "section": "LTP",
    "text": "LTP\n\n\nCode\nltp &lt;- cmdstan_model(\"models/ltp.stan\")\npath &lt;- file.path(\"chains\", var, \"ltp\")\nunlink(path, recursive = TRUE)\ndir.create(path)\nfit_ltp &lt;- ltp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = path\n)\n\n\n\n\nCode\npath &lt;- file.path(\"chains\", var, \"ltp\")\nfit_ltp &lt;- as_cmdstan_fit(list.files(path, full.names = TRUE))\nfit_ltp\n\n\n   variable    mean  median     sd   mad      q5     q95 rhat ess_bulk ess_tail\n lp__       4365.26 4316.23 103.01 26.78 4283.35 4578.54 1.55        7       23\n mu_dist       0.99    1.00   0.02  0.02    0.97    1.02 1.69        6       29\n sigma_dist    0.04    0.04   0.01  0.01    0.02    0.05 1.56        6       29\n dist_p[1]     1.04    1.04   0.03  0.03    0.99    1.09 1.45        7       35\n dist_p[2]     0.98    0.98   0.02  0.02    0.95    1.01 1.22       12       58\n dist_p[3]     1.04    1.04   0.02  0.02    1.00    1.08 1.38        8       33\n dist_p[4]     1.01    1.01   0.03  0.03    0.97    1.05 1.39        8       33\n dist_p[5]     1.00    1.00   0.02  0.02    0.97    1.03 1.33        9       40\n dist_p[6]     1.01    1.01   0.02  0.02    0.98    1.04 1.35        9       36\n dist_p[7]     1.02    1.02   0.02  0.02    0.98    1.06 1.39        8       33\n\n # showing 10 of 3425 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\ndata_old &lt;- data_old %&gt;%\n  group_by(site) %&gt;%\n  mutate(rel_year = max(rel_year + 2))\ndata_rec$preds &lt;- fit_ltp$summary(c(\"mu_rec\"), median)$median\nrmse_rec &lt;- sqrt(mean((data_rec$preds - data_rec$stem)^2, na.rm = TRUE))\ng_rec &lt;- data_rec %&gt;%\n  ggplot(aes(preds, stem)) +\n  geom_point(alpha = 0.25) +\n  geom_abline(col = \"red\", linetype = \"dashed\") +\n  ggtitle(\"Recovery\", paste(\"RMSE =\", round(rmse_rec, 2))) +\n  theme_bw() +\n  xlab(\"Predicted\") +\n  ylab(\"Observed\")\ndata_pre$preds &lt;- fit_ltp$summary(c(\"mu_pre\"), median)$median\nrmse_pre &lt;- sqrt(mean((data_pre$preds - data_pre$stem)^2, na.rm = TRUE))\ng_pre &lt;- data_pre %&gt;%\n  ggplot(aes(preds, stem, col = site)) +\n  geom_point(alpha = 0.25) +\n  geom_abline(col = \"red\", linetype = \"dashed\") +\n  ggtitle(\"Prelogging\", paste(\"RMSE =\", round(rmse_pre, 2))) +\n  theme_bw() +\n  scale_color_discrete(\"\") +\n  theme(legend.position = \"bottom\") +\n  xlab(\"Predicted\") +\n  ylab(\"Observed\")\ng_pre + g_rec\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nbind_rows(data_pre, data_rec, data_old) %&gt;%\n  ggplot(aes(rel_year, group = paste(site, plot), col = plot)) +\n  geom_point(aes(y = stem), alpha = .5) +\n  geom_line(aes(y = preds)) +\n  facet_wrap(~site, scales = \"free\") +\n  theme_bw() +\n  xlab(\"\") +\n  theme(legend.position = \"bottom\") +\n  ylab(lab) +\n  scale_color_discrete(guide = \"none\")\n\n\n\n\n\nPredicted trajectories."
  },
  {
    "objectID": "32_wd.html#stp",
    "href": "32_wd.html#stp",
    "title": "WD",
    "section": "STP",
    "text": "STP\n\n\nCode\nstp &lt;- cmdstan_model(\"models/stp.stan\")\npath &lt;- file.path(\"chains\", var, \"stp\")\nunlink(path, recursive = TRUE)\ndir.create(path)\nfit_stp &lt;- stp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = path\n)\n\n\n\n\nCode\npath &lt;- file.path(\"chains\", var, \"stp\")\nfit_stp &lt;- as_cmdstan_fit(list.files(path, full.names = TRUE))\nfit_stp\n\n\n   variable    mean  median     sd    mad      q5     q95 rhat ess_bulk\n lp__       4453.74 4469.79 111.10 137.30 4288.80 4584.54 2.21        5\n mu_dist       1.02    1.02   0.02   0.02    0.99    1.04 1.96        5\n sigma_dist    0.05    0.05   0.01   0.01    0.03    0.06 1.17       15\n dist_p[1]     1.07    1.07   0.02   0.02    1.04    1.10 1.12       22\n dist_p[2]     0.99    0.99   0.02   0.01    0.96    1.02 1.03      163\n dist_p[3]     1.06    1.06   0.02   0.02    1.04    1.09 1.06       45\n dist_p[4]     1.04    1.04   0.02   0.02    1.01    1.07 1.06       46\n dist_p[5]     1.02    1.02   0.02   0.01    0.99    1.04 1.06       48\n dist_p[6]     1.02    1.02   0.02   0.02    1.00    1.05 1.09       28\n dist_p[7]     1.04    1.04   0.02   0.02    1.01    1.07 1.05       55\n ess_tail\n       30\n       24\n       63\n      209\n     2265\n      539\n      281\n      461\n      380\n      524\n\n # showing 10 of 4397 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\ndata_old &lt;- data_old %&gt;%\n  group_by(site) %&gt;%\n  mutate(rel_year = max(rel_year + 2))\ndata_rec$preds &lt;- fit_stp$summary(c(\"mu_rec\"), median)$median\nrmse_rec &lt;- sqrt(mean((data_rec$preds - data_rec$stem)^2, na.rm = TRUE))\ng_rec &lt;- data_rec %&gt;%\n  ggplot(aes(preds, stem)) +\n  geom_point(alpha = 0.25) +\n  geom_abline(col = \"red\", linetype = \"dashed\") +\n  ggtitle(\"Recovery\", paste(\"RMSE =\", round(rmse_rec, 2))) +\n  theme_bw() +\n  xlab(\"Predicted\") +\n  ylab(\"Observed\")\ndata_pre$preds &lt;- fit_stp$summary(c(\"mu_pre\"), median)$median\nrmse_pre &lt;- sqrt(mean((data_pre$preds - data_pre$stem)^2, na.rm = TRUE))\ng_pre &lt;- data_pre %&gt;%\n  ggplot(aes(preds, stem, col = site)) +\n  geom_point(alpha = 0.25) +\n  geom_abline(col = \"red\", linetype = \"dashed\") +\n  ggtitle(\"Prelogging\", paste(\"RMSE =\", round(rmse_pre, 2))) +\n  theme_bw() +\n  scale_color_discrete(\"\") +\n  theme(legend.position = \"bottom\") +\n  xlab(\"Predicted\") +\n  ylab(\"Observed\")\ng_pre + g_rec\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nbind_rows(data_pre, data_rec, data_old) %&gt;%\n  ggplot(aes(rel_year, group = paste(site, plot), col = plot)) +\n  geom_point(aes(y = stem), alpha = .5) +\n  geom_line(aes(y = preds)) +\n  facet_wrap(~site, scales = \"free\") +\n  theme_bw() +\n  xlab(\"\") +\n  theme(legend.position = \"bottom\") +\n  ylab(lab) +\n  scale_color_discrete(guide = \"none\")\n\n\n\n\n\nPredicted trajectories.\n\n\n\n\n\n\nCode\nfit_stp$draws(\"dist_p\") %&gt;%\n  mcmc_intervals() +\n  geom_vline(xintercept = 1)\n\n\n\n\n\nPosteriors delta_p."
  },
  {
    "objectID": "32_wd.html#comparison",
    "href": "32_wd.html#comparison",
    "title": "WD",
    "section": "Comparison",
    "text": "Comparison\n\n\nCode\nloo_compare(\n  list(\n    ltp = fit_ltp$loo(),\n    stp = fit_stp$loo()\n  )\n) %&gt;%\n  kable()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nelpd_diff\nse_diff\nelpd_loo\nse_elpd_loo\np_loo\nse_p_loo\nlooic\nse_looic\n\n\n\n\nltp\n0.000000\n0.000000\n393.6158\n6.432857\n16.27011\n0.4245128\n-787.2315\n12.86571\n\n\nstp\n-4.202396\n4.877829\n389.4134\n5.100913\n25.95963\n0.7490335\n-778.8267\n10.20183"
  },
  {
    "objectID": "33_agb.html#data",
    "href": "33_agb.html#data",
    "title": "AGB",
    "section": "Data",
    "text": "Data\n\nWe removed Kibale for now.\n\n\n\nCode\nvar &lt;- \"agb\"\nif (!exists(file.path(\"chains\", var))) {\n  dir.create(file.path(\"chains\", var))\n}\nlab &lt;- expression(\"AGB [ t\" ~ ha^{\n  -1\n} ~ \"]\")\ndata &lt;- read_tsv(\"data/derived_data/data.tsv\") %&gt;%\n  filter(variable == var, site != \"Kibale\") %&gt;%\n  unique() %&gt;%\n  rename(stem = value) %&gt;%\n  select(-env, -env_value, -variable) %&gt;%\n  unique() %&gt;%\n  filter(!is.infinite(harvest_year_min)) %&gt;%\n  mutate(sitenum = as.numeric(as.factor(site)))\ndata_rec &lt;- data %&gt;%\n  filter(treatment == \"logged\", rel_year &gt; 2) %&gt;%\n  mutate(plotnum = as.numeric(as.factor(paste0(site, \"_\", plot))))\ndata_old &lt;- data %&gt;%\n  filter(treatment == \"control\") %&gt;%\n  mutate(plotoldnum = as.numeric(as.factor(paste0(site, \"_\", plot))))\ndata_pre &lt;- data %&gt;% filter(rel_year &lt;= 0)\nind_rec &lt;- data_rec %&gt;%\n  select(site, plot, sitenum, plotnum) %&gt;%\n  unique() %&gt;%\n  arrange(plotnum)\nmdata &lt;- list(\n  n_rec = nrow(data_rec),\n  n_old = nrow(data_old),\n  n_pre = nrow(data_pre),\n  n_site = max(data_rec$sitenum),\n  n_plot_rec = max(data_rec$plotnum),\n  stem_rec = data_rec$stem,\n  stem_old = data_old$stem,\n  stem_pre = data_pre$stem,\n  time = data_rec$rel_year - 3,\n  site_rec = data_rec$sitenum,\n  site_old = data_old$sitenum,\n  site_pre = data_pre$sitenum,\n  plot_rec = data_rec$plotnum,\n  site_plot_rec = ind_rec$sitenum,\n  dist_bounds = c(0.1, 1),\n  delta_bounds = c(0, 5),\n  mu_thetaInf_bounds = c(100, 500),\n  thetaInf_s_bounds = c(50, 1000)\n)\n\n\n\n\nCode\nggplot(data, aes(rel_year, stem, group = paste(site, plot), col = treatment)) +\n  geom_line() +\n  facet_wrap(~site) +\n  theme_bw() +\n  xlab(\"\") +\n  ylab(lab) +\n  theme(legend.position = \"bottom\") +\n  scale_color_discrete(\"\")\n\n\n\n\n\nModelled trajectories."
  },
  {
    "objectID": "33_agb.html#ltp",
    "href": "33_agb.html#ltp",
    "title": "AGB",
    "section": "LTP",
    "text": "LTP\n\n\nCode\nltp &lt;- cmdstan_model(\"models/ltp.stan\")\npath &lt;- file.path(\"chains\", var, \"ltp\")\nunlink(path, recursive = TRUE)\ndir.create(path)\nfit_ltp &lt;- ltp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = path\n)\n\n\n\n\nCode\npath &lt;- file.path(\"chains\", var, \"ltp\")\nfit_ltp &lt;- as_cmdstan_fit(list.files(path, full.names = TRUE))\nfit_ltp\n\n\n   variable    mean  median    sd   mad      q5     q95 rhat ess_bulk ess_tail\n lp__       2440.26 2440.77 12.63 12.56 2419.05 2460.63 1.00      892     1715\n mu_dist       0.52    0.52  0.02  0.02    0.48    0.55 1.00     2891     2947\n sigma_dist    0.12    0.12  0.02  0.02    0.09    0.15 1.00     4537     3257\n dist_p[1]     0.51    0.51  0.02  0.02    0.47    0.55 1.00     3543     3374\n dist_p[2]     0.71    0.71  0.02  0.03    0.67    0.75 1.00     1803     2410\n dist_p[3]     0.69    0.70  0.04  0.04    0.62    0.76 1.00     3802     1901\n dist_p[4]     0.69    0.69  0.06  0.06    0.57    0.78 1.00     3864     3072\n dist_p[5]     0.67    0.67  0.02  0.02    0.63    0.71 1.00     1888     2589\n dist_p[6]     0.82    0.83  0.05  0.05    0.74    0.90 1.00     3807     2048\n dist_p[7]     0.82    0.82  0.05  0.05    0.74    0.90 1.00     3360     2197\n\n # showing 10 of 3043 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\ndata_old &lt;- data_old %&gt;%\n  group_by(site) %&gt;%\n  mutate(rel_year = max(rel_year + 2))\ndata_rec$preds &lt;- fit_ltp$summary(c(\"mu_rec\"), median)$median\nrmse_rec &lt;- sqrt(mean((data_rec$preds - data_rec$stem)^2, na.rm = TRUE))\ng_rec &lt;- data_rec %&gt;%\n  ggplot(aes(preds, stem)) +\n  geom_point(alpha = 0.25) +\n  geom_abline(col = \"red\", linetype = \"dashed\") +\n  ggtitle(\"Recovery\", paste(\"RMSE =\", round(rmse_rec, 2))) +\n  theme_bw() +\n  xlab(\"Predicted\") +\n  ylab(\"Observed\")\ndata_pre$preds &lt;- fit_ltp$summary(c(\"mu_pre\"), median)$median\nrmse_pre &lt;- sqrt(mean((data_pre$preds - data_pre$stem)^2, na.rm = TRUE))\ng_pre &lt;- data_pre %&gt;%\n  ggplot(aes(preds, stem, col = site)) +\n  geom_point(alpha = 0.25) +\n  geom_abline(col = \"red\", linetype = \"dashed\") +\n  ggtitle(\"Prelogging\", paste(\"RMSE =\", round(rmse_pre, 2))) +\n  theme_bw() +\n  scale_color_discrete(\"\") +\n  theme(legend.position = \"bottom\") +\n  xlab(\"Predicted\") +\n  ylab(\"Observed\")\ng_pre + g_rec\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nbind_rows(data_pre, data_rec, data_old) %&gt;%\n  ggplot(aes(rel_year, group = paste(site, plot), col = plot)) +\n  geom_point(aes(y = stem), alpha = .5) +\n  geom_line(aes(y = preds)) +\n  facet_wrap(~site, scales = \"free\") +\n  theme_bw() +\n  xlab(\"\") +\n  theme(legend.position = \"bottom\") +\n  ylab(lab) +\n  scale_color_discrete(guide = \"none\")\n\n\n\n\n\nPredicted trajectories."
  },
  {
    "objectID": "33_agb.html#stp",
    "href": "33_agb.html#stp",
    "title": "AGB",
    "section": "STP",
    "text": "STP\n\n\nCode\nstp &lt;- cmdstan_model(\"models/stp.stan\")\npath &lt;- file.path(\"chains\", var, \"stp\")\nunlink(path, recursive = TRUE)\ndir.create(path)\nfit_stp &lt;- stp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = path\n)\n\n\n\n\nCode\npath &lt;- file.path(\"chains\", var, \"stp\")\nfit_stp &lt;- as_cmdstan_fit(list.files(path, full.names = TRUE))\nfit_stp\n\n\n   variable    mean  median    sd   mad      q5     q95 rhat ess_bulk ess_tail\n lp__       2528.30 2527.59 24.30 23.49 2489.11 2568.81 1.01      214      425\n mu_dist       0.52    0.52  0.03  0.03    0.47    0.57 1.10       25     1221\n sigma_dist    0.12    0.12  0.02  0.02    0.09    0.16 1.04       65     1897\n dist_p[1]     0.50    0.49  0.02  0.02    0.46    0.53 1.00     2159     2742\n dist_p[2]     0.58    0.59  0.09  0.09    0.43    0.71 1.02      228      818\n dist_p[3]     0.68    0.69  0.04  0.04    0.62    0.74 1.00     1388      827\n dist_p[4]     0.57    0.58  0.11  0.12    0.38    0.72 1.05       69      687\n dist_p[5]     0.66    0.66  0.02  0.02    0.62    0.70 1.00     1101     1333\n dist_p[6]     0.81    0.81  0.04  0.04    0.74    0.88 1.00     3608     2343\n dist_p[7]     0.81    0.80  0.04  0.04    0.74    0.88 1.00     3289     2168\n\n # showing 10 of 3909 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\ndata_old &lt;- data_old %&gt;%\n  group_by(site) %&gt;%\n  mutate(rel_year = max(rel_year + 2))\ndata_rec$preds &lt;- fit_stp$summary(c(\"mu_rec\"), median)$median\nrmse_rec &lt;- sqrt(mean((data_rec$preds - data_rec$stem)^2, na.rm = TRUE))\ng_rec &lt;- data_rec %&gt;%\n  ggplot(aes(preds, stem)) +\n  geom_point(alpha = 0.25) +\n  geom_abline(col = \"red\", linetype = \"dashed\") +\n  ggtitle(\"Recovery\", paste(\"RMSE =\", round(rmse_rec, 2))) +\n  theme_bw() +\n  xlab(\"Predicted\") +\n  ylab(\"Observed\")\ndata_pre$preds &lt;- fit_stp$summary(c(\"mu_pre\"), median)$median\nrmse_pre &lt;- sqrt(mean((data_pre$preds - data_pre$stem)^2, na.rm = TRUE))\ng_pre &lt;- data_pre %&gt;%\n  ggplot(aes(preds, stem, col = site)) +\n  geom_point(alpha = 0.25) +\n  geom_abline(col = \"red\", linetype = \"dashed\") +\n  ggtitle(\"Prelogging\", paste(\"RMSE =\", round(rmse_pre, 2))) +\n  theme_bw() +\n  scale_color_discrete(\"\") +\n  theme(legend.position = \"bottom\") +\n  xlab(\"Predicted\") +\n  ylab(\"Observed\")\ng_pre + g_rec\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nbind_rows(data_pre, data_rec, data_old) %&gt;%\n  ggplot(aes(rel_year, group = paste(site, plot), col = plot)) +\n  geom_point(aes(y = stem), alpha = .5) +\n  geom_line(aes(y = preds)) +\n  facet_wrap(~site, scales = \"free\") +\n  theme_bw() +\n  xlab(\"\") +\n  theme(legend.position = \"bottom\") +\n  ylab(lab) +\n  scale_color_discrete(guide = \"none\")\n\n\n\n\n\nPredicted trajectories.\n\n\n\n\n\n\nCode\nt &lt;- fit_stp$summary(\n  c(\n    \"mu_dist\", \"dist_p\", \"sigma_dist\",\n    \"mu_lambda\", \"sigma_lambda\", \"lambda_p\",\n    \"mu_thetaInf\", \"sigma_thetaInf\", \"thetaInf_s\",\n    \"mu_delta\", \"delta_p\", \"sigma_delta\",\n    \"mu_tau\", \"tau_s\", \"sigma_tau\",\n    \"sigma_old\", \"sigma_pre\", \"sigma_rec\"\n  ),\n  \"rhat\"\n) %&gt;%\n  filter(rhat &gt; 1.1)\nt$variable\n\n\n [1] \"mu_dist\"       \"dist_p[45]\"    \"dist_p[48]\"    \"dist_p[52]\"   \n [5] \"dist_p[55]\"    \"dist_p[56]\"    \"dist_p[57]\"    \"dist_p[59]\"   \n [9] \"dist_p[60]\"    \"dist_p[64]\"    \"dist_p[67]\"    \"dist_p[68]\"   \n[13] \"dist_p[70]\"    \"dist_p[71]\"    \"dist_p[72]\"    \"dist_p[74]\"   \n[17] \"lambda_p[67]\"  \"lambda_p[68]\"  \"lambda_p[69]\"  \"lambda_p[70]\" \n[21] \"lambda_p[71]\"  \"lambda_p[72]\"  \"lambda_p[73]\"  \"lambda_p[74]\" \n[25] \"lambda_p[83]\"  \"lambda_p[85]\"  \"lambda_p[87]\"  \"thetaInf_s[6]\"\n[29] \"mu_delta\"      \"delta_p[10]\"   \"delta_p[15]\"   \"delta_p[25]\"  \n[33] \"delta_p[26]\"   \"delta_p[30]\"   \"delta_p[32]\"   \"delta_p[35]\"  \n[37] \"delta_p[36]\"   \"delta_p[43]\"   \"delta_p[44]\"   \"delta_p[45]\"  \n[41] \"delta_p[46]\"   \"delta_p[47]\"   \"delta_p[51]\"   \"delta_p[53]\"  \n[45] \"delta_p[54]\"   \"delta_p[55]\"   \"delta_p[57]\"   \"delta_p[58]\"  \n[49] \"delta_p[60]\"   \"delta_p[61]\"   \"delta_p[62]\"   \"delta_p[65]\"  \n[53] \"delta_p[67]\"   \"delta_p[68]\"   \"delta_p[69]\"   \"delta_p[70]\"  \n[57] \"delta_p[71]\"   \"delta_p[72]\"   \"delta_p[73]\"   \"delta_p[74]\"  \n[61] \"delta_p[76]\"   \"delta_p[78]\"   \"delta_p[79]\"   \"delta_p[83]\"  \n[65] \"delta_p[86]\"   \"delta_p[87]\"   \"sigma_delta\"   \"mu_tau\"       \n[69] \"tau_s[2]\"      \"tau_s[6]\"      \"tau_s[7]\"      \"tau_s[8]\"     \n[73] \"tau_s[9]\"     \n\n\n\n\nCode\npars &lt;- c(\n  \"mu_dist\", \"sigma_dist\", \"mu_lambda\", \"sigma_lambda\", \"mu_thetaInf\",\n  \"sigma_thetaInf\", \"sigma_old\", \"sigma_pre\", \"sigma_rec\", \"mu_delta\",\n  \"sigma_delta\", \"mu_tau\", \"sigma_tau\"\n)\nfit_stp$draws(pars) %&gt;%\n  mcmc_dens()\n\n\n\n\n\nPosteriors generals pars.\n\n\n\n\n\n\nCode\nfit_stp$summary(\"lambda_p\", \"mean\") %&gt;%\n  mutate(t95 = log(20) / mean) %&gt;%\n  ggplot(aes(t95)) +\n  geom_histogram() +\n  theme_bw() +\n  scale_x_log10()\n\n\n\n\n\n95% recovery time."
  },
  {
    "objectID": "33_agb.html#comparison",
    "href": "33_agb.html#comparison",
    "title": "AGB",
    "section": "Comparison",
    "text": "Comparison\n\n\nCode\nloo_compare(\n  list(\n    ltp = fit_ltp$loo(),\n    stp = fit_stp$loo()\n  )\n) %&gt;%\n  kable()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nelpd_diff\nse_diff\nelpd_loo\nse_elpd_loo\np_loo\nse_p_loo\nlooic\nse_looic\n\n\n\n\nltp\n0.000000\n0.000000\n377.6155\n6.695038\n13.48932\n0.4600291\n-755.2309\n13.39008\n\n\nstp\n-5.406274\n3.057948\n372.2092\n6.590006\n16.29198\n0.5381737\n-744.4184\n13.18001"
  },
  {
    "objectID": "34_fdiv.html#data",
    "href": "34_fdiv.html#data",
    "title": "FDiv",
    "section": "Data",
    "text": "Data\n\n\nCode\nvar &lt;- \"FDiv\"\nif (!exists(file.path(\"chains\", var))) {\n  dir.create(file.path(\"chains\", var))\n}\nlab &lt;- expression(\"FDiv\")\ndata &lt;- read_tsv(\"data/derived_data/data.tsv\") %&gt;%\n  filter(variable == var) %&gt;%\n  unique() %&gt;%\n  rename(stem = value) %&gt;%\n  select(-env, -env_value, -variable) %&gt;%\n  unique() %&gt;%\n  filter(!is.infinite(harvest_year_min)) %&gt;%\n  mutate(sitenum = as.numeric(as.factor(site)))\ndata_rec &lt;- data %&gt;%\n  filter(treatment == \"logged\", rel_year &gt; 2) %&gt;%\n  mutate(plotnum = as.numeric(as.factor(paste0(site, \"_\", plot))))\ndata_old &lt;- data %&gt;%\n  filter(treatment == \"control\") %&gt;%\n  mutate(plotoldnum = as.numeric(as.factor(paste0(site, \"_\", plot))))\ndata_pre &lt;- data %&gt;% filter(rel_year &lt;= 0)\nind_rec &lt;- data_rec %&gt;%\n  select(site, plot, sitenum, plotnum) %&gt;%\n  unique() %&gt;%\n  arrange(plotnum)\nmdata &lt;- list(\n  n_rec = nrow(data_rec),\n  n_old = nrow(data_old),\n  n_pre = nrow(data_pre),\n  n_site = max(data_rec$sitenum),\n  n_plot_rec = max(data_rec$plotnum),\n  stem_rec = data_rec$stem,\n  stem_old = data_old$stem,\n  stem_pre = data_pre$stem,\n  time = data_rec$rel_year - 3,\n  site_rec = data_rec$sitenum,\n  site_old = data_old$sitenum,\n  site_pre = data_pre$sitenum,\n  plot_rec = data_rec$plotnum,\n  site_plot_rec = ind_rec$sitenum,\n  dist_bounds = c(0.1, 1.5),\n  delta_bounds = c(0, 2),\n  mu_thetaInf_bounds = c(0, 1),\n  thetaInf_s_bounds = c(0, 1)\n)\n\n\n\n\nCode\nggplot(data, aes(rel_year, stem, group = paste(site, plot), col = treatment)) +\n  geom_line() +\n  facet_wrap(~site) +\n  theme_bw() +\n  xlab(\"\") +\n  ylab(lab) +\n  theme(legend.position = \"bottom\") +\n  scale_color_discrete(\"\")\n\n\n\n\n\nModelled trajectories."
  },
  {
    "objectID": "34_fdiv.html#ltp",
    "href": "34_fdiv.html#ltp",
    "title": "FDiv",
    "section": "LTP",
    "text": "LTP\n\n\nCode\nltp &lt;- cmdstan_model(\"models/ltp.stan\")\npath &lt;- file.path(\"chains\", var, \"ltp\")\nunlink(path, recursive = TRUE)\ndir.create(path)\nfit_ltp &lt;- ltp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = path\n)\n\n\n\n\nCode\npath &lt;- file.path(\"chains\", var, \"ltp\")\nfit_ltp &lt;- as_cmdstan_fit(list.files(path, full.names = TRUE))\nfit_ltp\n\n\n   variable    mean  median    sd   mad      q5     q95 rhat ess_bulk ess_tail\n lp__       2849.09 2847.82 34.48 34.23 2796.17 2909.64 1.02       98      179\n mu_dist       1.02    1.02  0.02  0.02    0.99    1.05 1.00     1072     1629\n sigma_dist    0.09    0.09  0.01  0.01    0.07    0.12 1.00     1614     1080\n dist_p[1]     1.18    1.18  0.06  0.06    1.09    1.28 1.00      996     1440\n dist_p[2]     1.31    1.32  0.10  0.10    1.12    1.47 1.01      743      466\n dist_p[3]     0.93    0.93  0.05  0.05    0.85    1.00 1.00     1077     2098\n dist_p[4]     0.79    0.79  0.04  0.04    0.73    0.85 1.00     1059     2019\n dist_p[5]     0.91    0.91  0.04  0.04    0.84    0.98 1.00     1065     1922\n dist_p[6]     0.83    0.83  0.04  0.04    0.77    0.91 1.00     1023     1805\n dist_p[7]     0.89    0.89  0.06  0.05    0.80    0.98 1.01      810     1506\n\n # showing 10 of 3425 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\ndata_old &lt;- data_old %&gt;%\n  group_by(site) %&gt;%\n  mutate(rel_year = max(rel_year + 2))\ndata_rec$preds &lt;- fit_ltp$summary(c(\"mu_rec\"), median)$median\nrmse_rec &lt;- sqrt(mean((data_rec$preds - data_rec$stem)^2, na.rm = TRUE))\ng_rec &lt;- data_rec %&gt;%\n  ggplot(aes(preds, stem)) +\n  geom_point(alpha = 0.25) +\n  geom_abline(col = \"red\", linetype = \"dashed\") +\n  ggtitle(\"Recovery\", paste(\"RMSE =\", round(rmse_rec, 2))) +\n  theme_bw() +\n  xlab(\"Predicted\") +\n  ylab(\"Observed\")\ndata_pre$preds &lt;- fit_ltp$summary(c(\"mu_pre\"), median)$median\nrmse_pre &lt;- sqrt(mean((data_pre$preds - data_pre$stem)^2, na.rm = TRUE))\ng_pre &lt;- data_pre %&gt;%\n  ggplot(aes(preds, stem, col = site)) +\n  geom_point(alpha = 0.25) +\n  geom_abline(col = \"red\", linetype = \"dashed\") +\n  ggtitle(\"Prelogging\", paste(\"RMSE =\", round(rmse_pre, 2))) +\n  theme_bw() +\n  scale_color_discrete(\"\") +\n  theme(legend.position = \"bottom\") +\n  xlab(\"Predicted\") +\n  ylab(\"Observed\")\ng_pre + g_rec\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nbind_rows(data_pre, data_rec, data_old) %&gt;%\n  ggplot(aes(rel_year, group = paste(site, plot), col = plot)) +\n  geom_point(aes(y = stem), alpha = .5) +\n  geom_line(aes(y = preds)) +\n  facet_wrap(~site, scales = \"free\") +\n  theme_bw() +\n  xlab(\"\") +\n  theme(legend.position = \"bottom\") +\n  ylab(lab) +\n  scale_color_discrete(guide = \"none\")\n\n\n\n\n\nPredicted trajectories."
  },
  {
    "objectID": "34_fdiv.html#stp",
    "href": "34_fdiv.html#stp",
    "title": "FDiv",
    "section": "STP",
    "text": "STP\n\n\nCode\nstp &lt;- cmdstan_model(\"models/stp.stan\")\npath &lt;- file.path(\"chains\", var, \"stp\")\nunlink(path, recursive = TRUE)\ndir.create(path)\nfit_stp &lt;- stp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = path\n)\n\n\n\n\nCode\npath &lt;- file.path(\"chains\", var, \"stp\")\nfit_stp &lt;- as_cmdstan_fit(list.files(path, full.names = TRUE))\nfit_stp\n\n\n   variable    mean  median    sd   mad      q5     q95 rhat ess_bulk ess_tail\n lp__       2704.22 2707.98 60.77 77.84 2606.66 2792.20 2.07        5       18\n mu_dist       0.99    0.99  0.04  0.04    0.93    1.05 1.47        7      110\n sigma_dist    0.14    0.14  0.02  0.02    0.11    0.18 1.11       22      474\n dist_p[1]     1.10    1.04  0.24  0.31    0.82    1.46 1.96        5       31\n dist_p[2]     1.33    1.33  0.10  0.12    1.18    1.48 1.48        7      134\n dist_p[3]     0.90    0.88  0.08  0.07    0.79    1.05 1.55        7       33\n dist_p[4]     1.08    1.20  0.25  0.04    0.62    1.27 1.58        7       29\n dist_p[5]     0.89    0.85  0.11  0.07    0.77    1.11 1.45        8       63\n dist_p[6]     0.79    0.78  0.08  0.06    0.69    0.93 1.51        7       28\n dist_p[7]     0.83    0.79  0.17  0.08    0.68    1.30 1.30       10       11\n\n # showing 10 of 4397 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\ndata_old &lt;- data_old %&gt;%\n  group_by(site) %&gt;%\n  mutate(rel_year = max(rel_year + 2))\ndata_rec$preds &lt;- fit_stp$summary(c(\"mu_rec\"), median)$median\nrmse_rec &lt;- sqrt(mean((data_rec$preds - data_rec$stem)^2, na.rm = TRUE))\ng_rec &lt;- data_rec %&gt;%\n  ggplot(aes(preds, stem)) +\n  geom_point(alpha = 0.25) +\n  geom_abline(col = \"red\", linetype = \"dashed\") +\n  ggtitle(\"Recovery\", paste(\"RMSE =\", round(rmse_rec, 2))) +\n  theme_bw() +\n  xlab(\"Predicted\") +\n  ylab(\"Observed\")\ndata_pre$preds &lt;- fit_stp$summary(c(\"mu_pre\"), median)$median\nrmse_pre &lt;- sqrt(mean((data_pre$preds - data_pre$stem)^2, na.rm = TRUE))\ng_pre &lt;- data_pre %&gt;%\n  ggplot(aes(preds, stem, col = site)) +\n  geom_point(alpha = 0.25) +\n  geom_abline(col = \"red\", linetype = \"dashed\") +\n  ggtitle(\"Prelogging\", paste(\"RMSE =\", round(rmse_pre, 2))) +\n  theme_bw() +\n  scale_color_discrete(\"\") +\n  theme(legend.position = \"bottom\") +\n  xlab(\"Predicted\") +\n  ylab(\"Observed\")\ng_pre + g_rec\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nbind_rows(data_pre, data_rec, data_old) %&gt;%\n  ggplot(aes(rel_year, group = paste(site, plot), col = plot)) +\n  geom_point(aes(y = stem), alpha = .5) +\n  geom_line(aes(y = preds)) +\n  facet_wrap(~site, scales = \"free\") +\n  theme_bw() +\n  xlab(\"\") +\n  theme(legend.position = \"bottom\") +\n  ylab(lab) +\n  scale_color_discrete(guide = \"none\")\n\n\n\n\n\nPredicted trajectories."
  },
  {
    "objectID": "34_fdiv.html#comparison",
    "href": "34_fdiv.html#comparison",
    "title": "FDiv",
    "section": "Comparison",
    "text": "Comparison\n\n\nCode\nloo_compare(\n  list(\n    ltp = fit_ltp$loo(),\n    stp = fit_stp$loo()\n  )\n) %&gt;%\n  kable()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nelpd_diff\nse_diff\nelpd_loo\nse_elpd_loo\np_loo\nse_p_loo\nlooic\nse_looic\n\n\n\n\nstp\n0.0000000\n0.000000\n425.6170\n5.984138\n19.79007\n0.6802605\n-851.2340\n11.96828\n\n\nltp\n-0.4277317\n3.680769\n425.1893\n6.748148\n10.38612\n0.3242453\n-850.3786\n13.49630"
  },
  {
    "objectID": "35_div_q1_gen.html#data",
    "href": "35_div_q1_gen.html#data",
    "title": "Genus diversity 1",
    "section": "Data",
    "text": "Data\n\n\nCode\nvar &lt;- \"diversity_q1_gen\"\nif (!exists(file.path(\"chains\", var))) {\n  dir.create(file.path(\"chains\", var))\n}\nlab &lt;- expression(\"Genus diversity q=1\")\ndata &lt;- read_tsv(\"data/derived_data/data.tsv\") %&gt;%\n  filter(variable == var) %&gt;%\n  unique() %&gt;%\n  rename(stem = value) %&gt;%\n  select(-env, -env_value, -variable) %&gt;%\n  unique() %&gt;%\n  filter(!is.infinite(harvest_year_min)) %&gt;%\n  mutate(sitenum = as.numeric(as.factor(site)))\ndata_rec &lt;- data %&gt;%\n  filter(treatment == \"logged\", rel_year &gt; 2) %&gt;%\n  mutate(plotnum = as.numeric(as.factor(paste0(site, \"_\", plot))))\ndata_old &lt;- data %&gt;%\n  filter(treatment == \"control\") %&gt;%\n  mutate(plotoldnum = as.numeric(as.factor(paste0(site, \"_\", plot))))\ndata_pre &lt;- data %&gt;% filter(rel_year &lt;= 0)\nind_rec &lt;- data_rec %&gt;%\n  select(site, plot, sitenum, plotnum) %&gt;%\n  unique() %&gt;%\n  arrange(plotnum)\nmdata &lt;- list(\n  n_rec = nrow(data_rec),\n  n_old = nrow(data_old),\n  n_pre = nrow(data_pre),\n  n_site = max(data_rec$sitenum),\n  n_plot_rec = max(data_rec$plotnum),\n  stem_rec = data_rec$stem,\n  stem_old = data_old$stem,\n  stem_pre = data_pre$stem,\n  time = data_rec$rel_year - 3,\n  site_rec = data_rec$sitenum,\n  site_old = data_old$sitenum,\n  site_pre = data_pre$sitenum,\n  plot_rec = data_rec$plotnum,\n  site_plot_rec = ind_rec$sitenum,\n  dist_bounds = c(0.1, 1.5),\n  delta_bounds = c(0, 2),\n  mu_thetaInf_bounds = c(10, 100),\n  thetaInf_s_bounds = c(10, 100)\n)\n\n\n\n\nCode\nggplot(data, aes(rel_year, stem, group = paste(site, plot), col = treatment)) +\n  geom_line() +\n  facet_wrap(~site) +\n  theme_bw() +\n  xlab(\"\") +\n  ylab(lab) +\n  theme(legend.position = \"bottom\") +\n  scale_color_discrete(\"\")\n\n\n\n\n\nModelled trajectories."
  },
  {
    "objectID": "35_div_q1_gen.html#ltp",
    "href": "35_div_q1_gen.html#ltp",
    "title": "Genus diversity 1",
    "section": "LTP",
    "text": "LTP\n\n\nCode\nltp &lt;- cmdstan_model(\"models/ltp.stan\")\npath &lt;- file.path(\"chains\", var, \"ltp\")\nunlink(path, recursive = TRUE)\ndir.create(path)\nfit_ltp &lt;- ltp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = path\n)\n\n\n\n\nCode\npath &lt;- file.path(\"chains\", var, \"ltp\")\nfit_ltp &lt;- as_cmdstan_fit(list.files(path, full.names = TRUE))\nfit_ltp\n\n\n   variable    mean  median    sd   mad      q5     q95 rhat ess_bulk ess_tail\n lp__       2259.28 2257.61 26.89 25.41 2218.09 2304.94 1.07       42       73\n mu_dist       0.99    1.00  0.03  0.03    0.94    1.04 1.06       55      513\n sigma_dist    0.14    0.14  0.02  0.02    0.11    0.18 1.01     1528     2091\n dist_p[1]     1.08    1.08  0.08  0.08    0.96    1.22 1.00     1050     1078\n dist_p[2]     0.76    0.76  0.06  0.06    0.67    0.87 1.00     1130     1405\n dist_p[3]     1.25    1.24  0.09  0.09    1.10    1.41 1.00     1004     1044\n dist_p[4]     0.83    0.83  0.06  0.06    0.74    0.94 1.00     1083     1689\n dist_p[5]     1.08    1.07  0.08  0.07    0.96    1.22 1.00     1148     1462\n dist_p[6]     0.91    0.91  0.07  0.07    0.81    1.03 1.00     1068     1343\n dist_p[7]     0.68    0.68  0.06  0.07    0.57    0.78 1.02      893     1244\n\n # showing 10 of 3425 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\ndata_old &lt;- data_old %&gt;%\n  group_by(site) %&gt;%\n  mutate(rel_year = max(rel_year + 2))\ndata_rec$preds &lt;- fit_ltp$summary(c(\"mu_rec\"), median)$median\nrmse_rec &lt;- sqrt(mean((data_rec$preds - data_rec$stem)^2, na.rm = TRUE))\ng_rec &lt;- data_rec %&gt;%\n  ggplot(aes(preds, stem)) +\n  geom_point(alpha = 0.25) +\n  geom_abline(col = \"red\", linetype = \"dashed\") +\n  ggtitle(\"Recovery\", paste(\"RMSE =\", round(rmse_rec, 2))) +\n  theme_bw() +\n  xlab(\"Predicted\") +\n  ylab(\"Observed\")\ndata_pre$preds &lt;- fit_ltp$summary(c(\"mu_pre\"), median)$median\nrmse_pre &lt;- sqrt(mean((data_pre$preds - data_pre$stem)^2, na.rm = TRUE))\ng_pre &lt;- data_pre %&gt;%\n  ggplot(aes(preds, stem, col = site)) +\n  geom_point(alpha = 0.25) +\n  geom_abline(col = \"red\", linetype = \"dashed\") +\n  ggtitle(\"Prelogging\", paste(\"RMSE =\", round(rmse_pre, 2))) +\n  theme_bw() +\n  scale_color_discrete(\"\") +\n  theme(legend.position = \"bottom\") +\n  xlab(\"Predicted\") +\n  ylab(\"Observed\")\ng_pre + g_rec\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nbind_rows(data_pre, data_rec, data_old) %&gt;%\n  ggplot(aes(rel_year, group = paste(site, plot), col = plot)) +\n  geom_point(aes(y = stem), alpha = .5) +\n  geom_line(aes(y = preds)) +\n  facet_wrap(~site, scales = \"free\") +\n  theme_bw() +\n  xlab(\"\") +\n  theme(legend.position = \"bottom\") +\n  ylab(lab) +\n  scale_color_discrete(guide = \"none\")\n\n\n\n\n\nPredicted trajectories."
  },
  {
    "objectID": "35_div_q1_gen.html#stp",
    "href": "35_div_q1_gen.html#stp",
    "title": "Genus diversity 1",
    "section": "STP",
    "text": "STP\n\n\nCode\nstp &lt;- cmdstan_model(\"models/stp.stan\")\npath &lt;- file.path(\"chains\", var, \"stp\")\nunlink(path, recursive = TRUE)\ndir.create(path)\nfit_stp &lt;- stp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = path\n)\n\n\n\n\nCode\npath &lt;- file.path(\"chains\", var, \"stp\")\nfit_stp &lt;- as_cmdstan_fit(list.files(path, full.names = TRUE))\nfit_stp\n\n\n   variable    mean  median     sd   mad      q5     q95 rhat ess_bulk ess_tail\n lp__       1922.53 1862.30 131.73 54.28 1799.66 2173.04 1.87        5       36\n mu_dist       1.01    1.03   0.07  0.07    0.89    1.11 1.80        5       30\n sigma_dist    0.16    0.16   0.03  0.02    0.12    0.20 1.08       31      516\n dist_p[1]     1.15    1.14   0.11  0.10    0.99    1.34 1.01     1218      934\n dist_p[2]     0.77    0.77   0.08  0.08    0.64    0.90 1.01      782     1889\n dist_p[3]     1.30    1.30   0.10  0.11    1.13    1.47 1.01      862     1230\n dist_p[4]     0.86    0.86   0.08  0.08    0.73    1.00 1.01      908     2272\n dist_p[5]     1.13    1.12   0.10  0.10    0.97    1.30 1.02     1610     1429\n dist_p[6]     0.94    0.94   0.09  0.08    0.80    1.08 1.02      279     2247\n dist_p[7]     0.66    0.66   0.09  0.08    0.51    0.79 1.08       36      143\n\n # showing 10 of 4397 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\ndata_old &lt;- data_old %&gt;%\n  group_by(site) %&gt;%\n  mutate(rel_year = max(rel_year + 2))\ndata_rec$preds &lt;- fit_stp$summary(c(\"mu_rec\"), median)$median\nrmse_rec &lt;- sqrt(mean((data_rec$preds - data_rec$stem)^2, na.rm = TRUE))\ng_rec &lt;- data_rec %&gt;%\n  ggplot(aes(preds, stem)) +\n  geom_point(alpha = 0.25) +\n  geom_abline(col = \"red\", linetype = \"dashed\") +\n  ggtitle(\"Recovery\", paste(\"RMSE =\", round(rmse_rec, 2))) +\n  theme_bw() +\n  xlab(\"Predicted\") +\n  ylab(\"Observed\")\ndata_pre$preds &lt;- fit_stp$summary(c(\"mu_pre\"), median)$median\nrmse_pre &lt;- sqrt(mean((data_pre$preds - data_pre$stem)^2, na.rm = TRUE))\ng_pre &lt;- data_pre %&gt;%\n  ggplot(aes(preds, stem, col = site)) +\n  geom_point(alpha = 0.25) +\n  geom_abline(col = \"red\", linetype = \"dashed\") +\n  ggtitle(\"Prelogging\", paste(\"RMSE =\", round(rmse_pre, 2))) +\n  theme_bw() +\n  scale_color_discrete(\"\") +\n  theme(legend.position = \"bottom\") +\n  xlab(\"Predicted\") +\n  ylab(\"Observed\")\ng_pre + g_rec\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nbind_rows(data_pre, data_rec, data_old) %&gt;%\n  ggplot(aes(rel_year, group = paste(site, plot), col = plot)) +\n  geom_point(aes(y = stem), alpha = .5) +\n  geom_line(aes(y = preds)) +\n  facet_wrap(~site, scales = \"free\") +\n  theme_bw() +\n  xlab(\"\") +\n  theme(legend.position = \"bottom\") +\n  ylab(lab) +\n  scale_color_discrete(guide = \"none\")\n\n\n\n\n\nPredicted trajectories."
  },
  {
    "objectID": "35_div_q1_gen.html#comparison",
    "href": "35_div_q1_gen.html#comparison",
    "title": "Genus diversity 1",
    "section": "Comparison",
    "text": "Comparison\n\n\nCode\nloo_compare(\n  list(\n    ltp = fit_ltp$loo(),\n    stp = fit_stp$loo()\n  )\n) %&gt;%\n  kable()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nelpd_diff\nse_diff\nelpd_loo\nse_elpd_loo\np_loo\nse_p_loo\nlooic\nse_looic\n\n\n\n\nltp\n0.000000\n0.000000\n434.7305\n6.806855\n11.57686\n0.3631973\n-869.4610\n13.61371\n\n\nstp\n-8.649223\n3.621125\n426.0813\n5.880643\n19.52708\n0.6992297\n-852.1625\n11.76129"
  },
  {
    "objectID": "36_agb_mort.html#data",
    "href": "36_agb_mort.html#data",
    "title": "AGB mortality",
    "section": "Data",
    "text": "Data\n\nWe removed Uppangala for now.\n\n\n\nCode\nvar &lt;- \"agb_mort\"\nif (!exists(file.path(\"chains\", var))) {\n  dir.create(file.path(\"chains\", var))\n}\nlab &lt;- expression(\"AGB mort [ t\" ~ ha^{\n  -1\n} ~ \"]\")\ndata &lt;- read_tsv(\"data/derived_data/data.tsv\") %&gt;%\n  filter(variable == var, site != \"Uppangala\") %&gt;%\n  unique() %&gt;%\n  mutate(value = value + 1) %&gt;%\n  rename(stem = value) %&gt;%\n  select(-env, -env_value, -variable) %&gt;%\n  unique() %&gt;%\n  filter(!is.infinite(harvest_year_min)) %&gt;%\n  mutate(sitenum = as.numeric(as.factor(site)))\ndata_rec &lt;- data %&gt;%\n  filter(treatment == \"logged\", rel_year &gt; 2) %&gt;%\n  mutate(plotnum = as.numeric(as.factor(paste0(site, \"_\", plot))))\ndata_old &lt;- data %&gt;%\n  filter(treatment == \"control\") %&gt;%\n  mutate(plotoldnum = as.numeric(as.factor(paste0(site, \"_\", plot))))\ndata_pre &lt;- data %&gt;% filter(rel_year &lt;= 0)\nind_rec &lt;- data_rec %&gt;%\n  select(site, plot, sitenum, plotnum) %&gt;%\n  unique() %&gt;%\n  arrange(plotnum)\nmdata &lt;- list(\n  n_rec = nrow(data_rec),\n  n_old = nrow(data_old),\n  n_pre = nrow(data_pre),\n  n_site = max(data_rec$sitenum),\n  n_plot_rec = max(data_rec$plotnum),\n  stem_rec = data_rec$stem,\n  stem_old = data_old$stem,\n  stem_pre = data_pre$stem,\n  time = data_rec$rel_year - 3,\n  site_rec = data_rec$sitenum,\n  site_old = data_old$sitenum,\n  site_pre = data_pre$sitenum,\n  plot_rec = data_rec$plotnum,\n  site_plot_rec = ind_rec$sitenum,\n  dist_bounds = c(0.1, 1.5),\n  delta_bounds = c(0, 2),\n  mu_thetaInf_bounds = c(1, 250),\n  thetaInf_s_bounds = c(1, 250)\n)\n\n\n\n\nCode\nggplot(data, aes(rel_year, stem, group = paste(site, plot), col = treatment)) +\n  geom_line() +\n  facet_wrap(~site) +\n  theme_bw() +\n  xlab(\"\") +\n  ylab(lab) +\n  theme(legend.position = \"bottom\") +\n  scale_color_discrete(\"\") +\n  scale_y_log10()\n\n\n\n\n\nModelled trajectories."
  },
  {
    "objectID": "36_agb_mort.html#ltp",
    "href": "36_agb_mort.html#ltp",
    "title": "AGB mortality",
    "section": "LTP",
    "text": "LTP\n\n\nCode\nltp &lt;- cmdstan_model(\"models/ltp.stan\")\npath &lt;- file.path(\"chains\", var, \"ltp\")\nunlink(path, recursive = TRUE)\ndir.create(path)\nfit_ltp &lt;- ltp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = path\n)\n\n\n\n\nCode\npath &lt;- file.path(\"chains\", var, \"ltp\")\nfit_ltp &lt;- as_cmdstan_fit(list.files(path, full.names = TRUE))\nfit_ltp\n\n\n   variable   mean median     sd    mad     q5    q95 rhat ess_bulk ess_tail\n lp__       423.30 383.71 142.56 143.33 223.84 686.76 1.89        5       24\n mu_dist      1.35   1.34   0.07   0.06   1.21   1.47 1.45        7       13\n sigma_dist   0.00   0.00   0.00   0.00   0.00   0.01 1.46        7       21\n dist_p[1]    1.35   1.34   0.08   0.06   1.21   1.47 1.42        8       13\n dist_p[2]    1.35   1.34   0.08   0.07   1.21   1.47 1.43        8       13\n dist_p[3]    1.35   1.34   0.07   0.06   1.22   1.47 1.43        8       13\n dist_p[4]    1.35   1.34   0.08   0.06   1.21   1.47 1.39        8       14\n dist_p[5]    1.35   1.34   0.07   0.07   1.21   1.47 1.42        8       13\n dist_p[6]    1.35   1.34   0.07   0.07   1.21   1.47 1.42        8       13\n dist_p[7]    1.35   1.34   0.07   0.06   1.21   1.47 1.43        8       13\n\n # showing 10 of 3163 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\ndata_old &lt;- data_old %&gt;%\n  group_by(site) %&gt;%\n  mutate(rel_year = max(rel_year + 2))\ndata_rec$preds &lt;- fit_ltp$summary(c(\"mu_rec\"), median)$median\nrmse_rec &lt;- sqrt(mean((data_rec$preds - data_rec$stem)^2, na.rm = TRUE))\ng_rec &lt;- data_rec %&gt;%\n  ggplot(aes(preds, stem)) +\n  geom_point(alpha = 0.25) +\n  geom_abline(col = \"red\", linetype = \"dashed\") +\n  ggtitle(\"Recovery\", paste(\"RMSE =\", round(rmse_rec, 2))) +\n  theme_bw() +\n  xlab(\"Predicted\") +\n  ylab(\"Observed\") +\n  scale_y_log10() +\n  scale_x_log10()\ndata_pre$preds &lt;- fit_ltp$summary(c(\"mu_pre\"), median)$median\nrmse_pre &lt;- sqrt(mean((data_pre$preds - data_pre$stem)^2, na.rm = TRUE))\ng_pre &lt;- data_pre %&gt;%\n  ggplot(aes(preds, stem, col = site)) +\n  geom_point(alpha = 0.25) +\n  geom_abline(col = \"red\", linetype = \"dashed\") +\n  ggtitle(\"Prelogging\", paste(\"RMSE =\", round(rmse_pre, 2))) +\n  theme_bw() +\n  scale_color_discrete(\"\") +\n  theme(legend.position = \"bottom\") +\n  xlab(\"Predicted\") +\n  ylab(\"Observed\") +\n  scale_y_log10() +\n  scale_x_log10()\ng_pre + g_rec\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nbind_rows(data_pre, data_rec, data_old) %&gt;%\n  ggplot(aes(rel_year, group = paste(site, plot), col = plot)) +\n  geom_point(aes(y = stem), alpha = .5) +\n  geom_line(aes(y = preds)) +\n  facet_wrap(~site, scales = \"free\") +\n  theme_bw() +\n  xlab(\"\") +\n  theme(legend.position = \"bottom\") +\n  ylab(lab) +\n  scale_color_discrete(guide = \"none\") +\n  scale_y_log10()\n\n\n\n\n\nPredicted trajectories."
  },
  {
    "objectID": "36_agb_mort.html#stp",
    "href": "36_agb_mort.html#stp",
    "title": "AGB mortality",
    "section": "STP",
    "text": "STP\n\n\nCode\nstp &lt;- cmdstan_model(\"models/stp.stan\")\npath &lt;- file.path(\"chains\", var, \"stp\")\nunlink(path, recursive = TRUE)\ndir.create(path)\nfit_stp &lt;- stp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = path\n)\n\n\n\n\nCode\npath &lt;- file.path(\"chains\", var, \"stp\")\nfit_stp &lt;- as_cmdstan_fit(list.files(path, full.names = TRUE))\nfit_stp\n\n\n   variable   mean median     sd    mad     q5    q95 rhat ess_bulk ess_tail\n lp__       519.56 522.08 126.40 127.70 308.04 733.65 1.60        7       12\n mu_dist      1.15   1.15   0.03   0.04   1.09   1.20 1.46        8       44\n sigma_dist   0.05   0.05   0.02   0.02   0.03   0.08 1.23       13       68\n dist_p[1]    1.32   1.34   0.11   0.12   1.13   1.47 1.05       96      131\n dist_p[2]    1.43   1.45   0.07   0.04   1.26   1.50 1.05       83       72\n dist_p[3]    1.44   1.47   0.07   0.03   1.31   1.49 1.02      147      132\n dist_p[4]    1.23   1.22   0.10   0.12   1.09   1.40 1.17       19      109\n dist_p[5]    1.48   1.49   0.02   0.01   1.44   1.50 1.05       62      176\n dist_p[6]    1.45   1.47   0.05   0.03   1.37   1.50 1.02      132      274\n dist_p[7]    1.19   1.18   0.08   0.08   1.07   1.34 1.06       49      273\n\n # showing 10 of 4084 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\ndata_old &lt;- data_old %&gt;%\n  group_by(site) %&gt;%\n  mutate(rel_year = max(rel_year + 2))\ndata_rec$preds &lt;- fit_stp$summary(c(\"mu_rec\"), median)$median\nrmse_rec &lt;- sqrt(mean((data_rec$preds - data_rec$stem)^2, na.rm = TRUE))\ng_rec &lt;- data_rec %&gt;%\n  ggplot(aes(preds, stem)) +\n  geom_point(alpha = 0.25) +\n  geom_abline(col = \"red\", linetype = \"dashed\") +\n  ggtitle(\"Recovery\", paste(\"RMSE =\", round(rmse_rec, 2))) +\n  theme_bw() +\n  xlab(\"Predicted\") +\n  ylab(\"Observed\") +\n  scale_y_log10() +\n  scale_x_log10()\ndata_pre$preds &lt;- fit_stp$summary(c(\"mu_pre\"), median)$median\nrmse_pre &lt;- sqrt(mean((data_pre$preds - data_pre$stem)^2, na.rm = TRUE))\ng_pre &lt;- data_pre %&gt;%\n  ggplot(aes(preds, stem, col = site)) +\n  geom_point(alpha = 0.25) +\n  geom_abline(col = \"red\", linetype = \"dashed\") +\n  ggtitle(\"Prelogging\", paste(\"RMSE =\", round(rmse_pre, 2))) +\n  theme_bw() +\n  scale_color_discrete(\"\") +\n  theme(legend.position = \"bottom\") +\n  xlab(\"Predicted\") +\n  ylab(\"Observed\") +\n  scale_y_log10() +\n  scale_x_log10()\ng_pre + g_rec\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nbind_rows(data_pre, data_rec, data_old) %&gt;%\n  ggplot(aes(rel_year, group = paste(site, plot), col = plot)) +\n  geom_point(aes(y = stem), alpha = .5) +\n  geom_line(aes(y = preds)) +\n  facet_wrap(~site, scales = \"free\") +\n  theme_bw() +\n  xlab(\"\") +\n  theme(legend.position = \"bottom\") +\n  ylab(lab) +\n  scale_color_discrete(guide = \"none\") +\n  scale_y_log10()\n\n\n\n\n\nPredicted trajectories."
  },
  {
    "objectID": "36_agb_mort.html#comparison",
    "href": "36_agb_mort.html#comparison",
    "title": "AGB mortality",
    "section": "Comparison",
    "text": "Comparison\n\n\nCode\nloo_compare(\n  list(\n    ltp = fit_ltp$loo(),\n    stp = fit_stp$loo()\n  )\n) %&gt;%\n  kable()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nelpd_diff\nse_diff\nelpd_loo\nse_elpd_loo\np_loo\nse_p_loo\nlooic\nse_looic\n\n\n\n\nstp\n0.00000\n0.00000\n396.0339\n7.494420\n4.6439148\n0.1814111\n-792.0679\n14.98884\n\n\nltp\n-17.81613\n1.62791\n378.2178\n7.514056\n0.7680642\n0.0272031\n-756.4356\n15.02811"
  },
  {
    "objectID": "91_stp_negative.html",
    "href": "91_stp_negative.html",
    "title": "STP negatives",
    "section": "",
    "text": "Using long term and short term processes model based on initial value \\(\\theta_0\\) we had issue with negatives values of \\(\\mu_{rec}\\) resulting in impossible log-values:\n\\[\n\\begin{align}\n\\mu_{rec} = \\theta_{0,p} + (\\theta_{\\infty,s} - \\theta_{0,p}) \\times (LTP+STP) \\\\\nLTP = 1 - e^{-\\lambda_p \\times time} \\\\\nSTP = \\delta_p \\times (\\frac{time}{\\tau_s} \\times e^{1-\\frac{time}{\\tau_s}})^2\n\\end{align}\n\\]\nNegatives values happen when the trajectory is negative and the difference of \\(\\theta\\) and the bump fall below 0, so when \\(time=\\tau\\):\n\\[\n\\begin{align}\n\\theta_{0,p} + (\\theta_{\\infty,s} - \\theta_{0,p}) \\times (1 - e^{-\\lambda_p \\times \\tau_s}+\\delta_p) \\leq 0\\\\\n\\end{align}\n\\]\nEn \\(\\lambda_p=0.5\\) et \\(\\tau_s=30\\) , \\(LTP = 1-e^{-0.5*30} \\approx 1\\), thus:\n\\[\n\\begin{align}\n\\theta_{0,p} + (\\theta_{\\infty,s} - \\theta_{0,p}) \\times (1+\\delta_p) \\leq 0\\\\\n\\theta_{\\infty,s} + (\\theta_{\\infty,s} - \\theta_{0,p}) \\times \\delta_p \\leq 0\\\\\n\\delta_p \\geq \\frac{-\\theta_{\\infty,s}}  {\\theta_{\\infty,s} - \\theta_{0,p}} ~|~ \\theta_{\\infty,s} - \\theta_{0,p} &lt; 0 \\\\\n\\delta_p \\geq \\frac{-1}  {1 - dist_p} ~|~\\theta_{0,p}=dist_p\\times\\theta_{\\infty,s} \\\\\n\\delta_p \\geq \\frac{1}  {dist_p-1}\n\\end{align}\n\\]\nWe could thus use this inequality to constrain \\(\\delta_p\\) on \\(dist_p\\) knowing that stan now accepts parameters bounds to depend on another parameter. However, this is complicated as it depends on the sign in the division above, \\(dist=1\\) is no possible, and near 1 values results in positive or negative infinite values. Thus we simply bounded \\(dist_p\\) to 1.5 for now (50% gain of attribute post-disturbance).\n\n\nCode\nmodel &lt;- function(time, dist, thetainf, lambda, tau, delta) {\n  theta0 &lt;- thetainf * dist\n  ltp &lt;- 1 - exp(-lambda * time)\n  stp &lt;- delta * (time / tau * exp(1 - time / tau))^2\n  return(theta0 + (thetainf - theta0) * (ltp + stp))\n}\ndata.frame(time = 1:50) %&gt;%\n  mutate(y = model(time,\n    dist = 2, thetainf = 20,\n    lambda = 0.5, tau = 30, delta = 0.5\n  )) %&gt;%\n  mutate(y2 = model(time,\n    dist = 2, thetainf = 20,\n    lambda = 0.5, tau = 30, delta = 2\n  )) %&gt;%\n  mutate(y3 = model(time,\n    dist = 2, thetainf = 20,\n    lambda = 0.5, tau = 30, delta = 1\n  )) %&gt;%\n  ggplot(aes(time)) +\n  geom_line(aes(y = y, col = \"dist=2, delta=.5\")) +\n  geom_line(aes(y = y2, col = \"dist=2, delta=2\")) +\n  geom_line(aes(y = y3, col = \"dist=2, delta=1\")) +\n  theme_bw()\n\n\n\n\n\nNegative STR examples with delta-dist link.\n\n\n\n\n\n\nCode\ndata.frame(dist = seq(.5, 2, length.out = 100)) %&gt;%\n  mutate(delta_max = 2 - (1 / (dist - 1))) %&gt;%\n  ggplot(aes(dist, delta_max)) +\n  geom_line() +\n  theme_bw()\n\n\n\n\n\ndelta_max with dist."
  }
]