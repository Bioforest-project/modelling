[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "modelling",
    "section": "",
    "text": "Introduction\nmodelling is a sub-project of the BioForest project aimed at species related data (correct names, functional traits, phylogeny) as part of the data preparation for data preparation within the project."
  },
  {
    "objectID": "index.html#usage",
    "href": "index.html#usage",
    "title": "modelling",
    "section": "Usage",
    "text": "Usage\nAll modelling analyses rely on the quarto documents (files.qmd) that can be run with R and associated environment defined with renv."
  },
  {
    "objectID": "index.html#project",
    "href": "index.html#project",
    "title": "modelling",
    "section": "Project",
    "text": "Project\nmodelling includes:\n\nAnalyse of the data with associated documentation and figures:\n\nReproductive analyses in files.qmd\nResulting pages in docs/\nDocument structure definition in _quarto.yml\n\nData in data/ with:\n\nAll raw data in raw_data/\nAll derived data in derived_sata/\n\nStan Bayesian models in models/\nR scripts with funtions in r/\nIntermediary files in outputs/\nFigures in figures/\nR environment definition with renv in renv/ and renv/lock\nR files (.Rbuildignore , .Rdata , .Rprofile , .Rhistory, .lintr)\nGit and GitHub files (.gitignore , .github/)\nProject documentation (README.qmd , README.md , NEWS.md, LICENSE )"
  },
  {
    "objectID": "index.html#contribution",
    "href": "index.html#contribution",
    "title": "modelling",
    "section": "Contribution",
    "text": "Contribution\nYou can contribute to the project by forking the repository on github and cloning the fork to your machine using several options, including GitHub desktop GUI. Further informations on contribution are detailed in the online document: https://bioforest-project.github.io/data_preparation/98_contributing.html."
  },
  {
    "objectID": "index.html#help",
    "href": "index.html#help",
    "title": "modelling",
    "section": "Help",
    "text": "Help\nPlease preferentially create an issue on GitHub for any questions, bugs or help needed regarding modelling: https://github.com/Bioforest-project/modelling/issues . You may however reach us by mail with people from the core group (see below)."
  },
  {
    "objectID": "index.html#core-group",
    "href": "index.html#core-group",
    "title": "modelling",
    "section": "Core group",
    "text": "Core group\n\nSylvain Schmitt (sylvain.schmitt@cirad.fr)\nCamille Piponiot-Laroche (camille.piponiot-laroche@cirad.fr)\nBruno HÃ©rault (bruno.herault@cirad.fr)\n\nThe whole group consist of participants to the Bioforest project."
  },
  {
    "objectID": "11_observations.html",
    "href": "11_observations.html",
    "title": "Observations",
    "section": "",
    "text": "Data exploration.\n\n\nCode\nmetadata &lt;- read_sheet(\"https://docs.google.com/spreadsheets/d/1fq2owxMBLBwwibcdw2uQQFxnIhsMbaH4Qcj_xUwVvSQ/edit?gid=0#gid=0\", col_types = \"c\") %&gt;% # nolint\n  rename_all(tolower) %&gt;%\n  select(site, plot, treatment, year_of_harvest) %&gt;%\n  separate(year_of_harvest, \"year_of_harvest\") %&gt;%\n  mutate(year_of_harvest = as.numeric(year_of_harvest)) %&gt;%\n  rename(harvest_year = year_of_harvest) %&gt;%\n  mutate(treatment = ifelse(\n    treatment %in% c(\"control\", \"Control\", \"Natural_Forest\"),\n    \"control\", \"logged\"\n  )) %&gt;%\n  group_by(site) %&gt;%\n  mutate(harvest_year_min = min(harvest_year, na.rm = TRUE)) %&gt;%\n  mutate(harvest_year = ifelse(site == \"Paracou\", 1986, harvest_year)) %&gt;%\n  mutate(harvest_year_min = ifelse(site == \"Paracou\", 1986, harvest_year_min))\ndata &lt;- read_csv(\"data/raw_data/aggregated_data.csv\") %&gt;%\n  rename_all(tolower) %&gt;%\n  left_join(metadata) %&gt;%\n  filter(!(site %in% c(\"Peteco\", \"Bafog\", \"Tene\", \"Montagne_Tortue\", \"Manare\"))) %&gt;%\n  filter(!(site == \"Kabo\" & year &lt; 1980)) %&gt;%\n  mutate(rel_year = ifelse(treatment == \"control\",\n    year - harvest_year_min,\n    year - harvest_year\n  )) %&gt;% \n  mutate(sitenum = as.numeric(as.factor(site))) %&gt;%\n  group_by(site) %&gt;% \n  mutate(y = ifelse(variable == \"agb\" & site == \"Kibale\", \n                    300, value)) %&gt;% \n  ungroup()\ndata_rec &lt;- data %&gt;%\n  filter(treatment == \"logged\", rel_year &gt; 2) %&gt;%\n  mutate(plotnum_rec = as.numeric(as.factor(paste0(site, \"_\", plot))))\ndata_pre &lt;- data %&gt;% \n  filter(rel_year &lt;= 0) %&gt;%\n  mutate(plotnum_pre = as.numeric(as.factor(paste0(site, \"_\", plot))))\ndata_old &lt;- data %&gt;% filter(treatment == \"control\") %&gt;%\n  mutate(plotnum_old = as.numeric(as.factor(paste0(site, \"_\", plot))))\nwrite_tsv(data, \"data/derived_data/data.tsv\")\nwrite_tsv(data_rec, \"data/derived_data/data_rec.tsv\")\nwrite_tsv(data_pre, \"data/derived_data/data_pre.tsv\")\nwrite_tsv(data_old, \"data/derived_data/data_old.tsv\")\n\n\n\n\nCode\nread_tsv(\"data/derived_data/data.tsv\") %&gt;%\n  ggplot(aes(year, value, group = paste(site, plot))) +\n  geom_line() +\n  theme_bw() +\n  facet_wrap(~variable, scales = \"free_y\") +\n  theme(\n    axis.title = element_blank(),\n    strip.text = element_text(size = 6)\n  )\n\n\n\n\n\nAll attributes trajectories.\n\n\n\n\n\n\nCode\nmake_fig &lt;- function(var) {\n  g &lt;- read_tsv(\"data/derived_data/data.tsv\") %&gt;%\n    filter(variable == var) %&gt;%\n    ggplot(aes(year, value, group = paste(site, plot), col = treatment)) +\n    geom_line() +\n    theme_bw() +\n    xlab(\"\") +\n    ylab(\"\") +\n    facet_wrap(~site, scales = \"free\") +\n    geom_vline(aes(xintercept = harvest_year)) +\n    theme(legend.position = \"bottom\") +\n    ggtitle(var)\n  ggsave(plot = g, filename = paste0(\"figures/obs/\", var, \".png\"))\n}\nunique(read_tsv(\"data/derived_data/data.tsv\")$variable) %&gt;%\n  lapply(make_fig)\n\n\n\n\nCode\nread_tsv(\"data/derived_data/data.tsv\") %&gt;%\n  filter(variable == \"agb\") %&gt;%\n  ggplot(aes(year, value, group = paste(site, plot), col = treatment)) +\n  geom_line() +\n  theme_bw() +\n  xlab(\"\") +\n  ylab(expression(\"AGB [\" ~ Mg ~ ha^{\n    -1\n  } ~ \"]\")) +\n  facet_wrap(~site, scales = \"free\") +\n  geom_vline(aes(xintercept = harvest_year)) +\n  theme(legend.position = \"bottom\")\n\n\n\n\n\nAGB trajectories across sites and treatments."
  },
  {
    "objectID": "21_models.html#ltp",
    "href": "21_models.html#ltp",
    "title": "Models",
    "section": "LTP",
    "text": "LTP\nLong term process only model:\n\\[\n\\begin{align}\n\\mu_{rec} = \\theta_{0,p} + (\\theta_{\\infty,s} - \\theta_{0,p}) \\times LTP \\\\\nLTP = 1 - e^{-\\lambda_p \\times time}\n\\end{align}\n\\]\n\n\nCode\nltp &lt;- function(time, dist, thetainf, lambda) {\n  theta0 &lt;- thetainf * dist\n  ltp &lt;- 1 - exp(-lambda * time)\n  return(theta0 + (thetainf - theta0) * (ltp))\n}\ndata.frame(time = seq(0.1, 50, length.out = 100)) %&gt;%\n  mutate(y_ltp = ltp(time, dist = 0.5, thetainf = 20, lambda = 0.05)) %&gt;%\n  bind_rows(data.frame(time = 0, y_stp = 20, y_ltp = 20)) %&gt;%\n  ggplot(aes(time)) +\n  geom_line(aes(y = y_ltp)) +\n  theme_bw() +\n  annotate(\"text\",\n    x = 52, y = 19.5, label = \"theta[Inf]\",\n    col = \"#9ea1d4\", parse = TRUE, size = 5\n  ) +\n  annotate(\"text\",\n    x = 20, y = 15, label = \"lambda\",\n    col = \"#a8d2d1\", parse = TRUE, size = 5\n  ) +\n  annotate(\"text\",\n    x = -4, y = 15, label = \"dist\",\n    col = \"#fc8a8a\", parse = TRUE, size = 5\n  ) +\n  theme(axis.title = element_blank()) +\n  geom_segment(aes(x = -2, y = 10, xend = -2, yend = 20),\n    arrow = arrow(length = unit(0.2, \"cm\")), col = \"#fc8a8a\"\n  ) +\n  geom_segment(aes(x = -2, y = 20, xend = -2, yend = 10),\n    arrow = arrow(length = unit(0.2, \"cm\")), col = \"#fc8a8a\"\n  )\n\n\n\n\n\nLTP proj with pars."
  },
  {
    "objectID": "21_models.html#stp",
    "href": "21_models.html#stp",
    "title": "Models",
    "section": "STP",
    "text": "STP\nLong term and short term processes model based on disturbance index \\(dist\\):\n\\[\n\\begin{align}\n\\mu_{rec} = \\theta_{0,p} + (\\theta_{\\infty,s} - \\theta_{0,p}) \\times (LTP+STP) \\\\\nLTP = 1 - e^{-\\lambda_p \\times time} \\\\\nSTP = \\delta_p \\times (\\frac{time}{\\tau_s} \\times e^{1-\\frac{time}{\\tau_s}})^2 \\\\\n\\theta_{0,p} = \\theta_{\\infty,s} \\times dist_p\n\\end{align}\n\\]\n\n\nCode\nstp &lt;- function(time, dist, thetainf, lambda, tau, delta) {\n  theta0 &lt;- thetainf * dist\n  ltp &lt;- 1 - exp(-lambda * time)\n  stp &lt;- delta * (time / tau * exp(1 - time / tau))^2\n  return(theta0 + (thetainf - theta0) * (ltp + stp))\n}\ndata.frame(time = seq(0.1, 50, length.out = 100)) %&gt;%\n  mutate(y_stp = stp(time,\n    dist = 0.5, thetainf = 20, lambda = 0.05,\n    tau = 5, delta = 1\n  )) %&gt;%\n  mutate(y_ltp = ltp(time, dist = 0.5, thetainf = 20, lambda = 0.05)) %&gt;%\n  bind_rows(data.frame(time = 0, y_stp = 20, y_ltp = 20)) %&gt;%\n  ggplot(aes(time)) +\n  geom_line(aes(y = y_ltp), col = \"grey\") +\n  geom_line(aes(y = y_stp)) +\n  theme_bw() +\n  annotate(\"text\",\n    x = 52, y = 19.5, label = \"theta[Inf]\",\n    col = \"#9ea1d4\", parse = TRUE, size = 5\n  ) +\n  annotate(\"text\",\n    x = 20, y = 15, label = \"lambda\",\n    col = \"#a8d2d1\", parse = TRUE, size = 5\n  ) +\n  annotate(\"text\",\n    x = -4, y = 15, label = \"dist\",\n    col = \"#fc8a8a\", parse = TRUE, size = 5\n  ) +\n  theme(axis.title = element_blank()) +\n  geom_segment(aes(x = -2, y = 10, xend = -2, yend = 20),\n    arrow = arrow(length = unit(0.2, \"cm\")), col = \"#fc8a8a\"\n  ) +\n  geom_segment(aes(x = -2, y = 20, xend = -2, yend = 10),\n    arrow = arrow(length = unit(0.2, \"cm\")), col = \"#fc8a8a\"\n  ) +\n  annotate(\"text\",\n    x = 6, y = 11.3, label = \"tau\",\n    col = \"#f2e5a9\", parse = TRUE, size = 5\n  ) +\n  annotate(\"text\",\n    x = 5, y = 17.5, label = \"delta\",\n    col = \"#a7d6ac\", parse = TRUE, size = 5\n  ) +\n  geom_segment(aes(x = 6, y = 13, xend = 6, yend = 22),\n    arrow = arrow(length = unit(0.2, \"cm\")), col = \"#a7d6ac\"\n  ) +\n  geom_segment(aes(x = 6, y = 22, xend = 6, yend = 13),\n    arrow = arrow(length = unit(0.2, \"cm\")), col = \"#a7d6ac\"\n  ) +\n  geom_segment(aes(x = 6, y = 11, xend = 6, yend = 10),\n    arrow = arrow(length = unit(0.2, \"cm\")), col = \"#f2e5a9\"\n  ) +\n  theme(axis.title = element_blank())\n\n\n\n\n\nSTP proj with pars.\n\n\n\n\nChoices:\n\nUsing the log of y and a normal distribution centred on log(mu)\nCauchy hyperdist\nForced dist_p&lt;1\nBounds of theta\nFree tau\nFree delta\n\nâ ï¸ Hump is mathematically opposed to the sign of dist_p-1."
  },
  {
    "objectID": "30_trajectories.html",
    "href": "30_trajectories.html",
    "title": "Trajectories",
    "section": "",
    "text": "This section develop trajectories per attributes."
  },
  {
    "objectID": "31_stem.html#data",
    "href": "31_stem.html#data",
    "title": "Stem",
    "section": "Data",
    "text": "Data\n\n\nCode\nvar &lt;- \"nstem\"\nif (!exists(file.path(\"chains\", var))) {\n  dir.create(file.path(\"chains\", var))\n}\nlab &lt;- expression(\"Stem [ trees\" ~ ha^{\n  -1\n} ~ \"]\")\ndata_rec &lt;- read_tsv(\"data/derived_data/data_rec.tsv\") %&gt;%\n  filter(variable == var)\ndata_pre &lt;- read_tsv(\"data/derived_data/data_pre.tsv\") %&gt;%\n  filter(variable == var)\ndata_old &lt;- read_tsv(\"data/derived_data/data_old.tsv\") %&gt;%\n  filter(variable == var)\nmdata &lt;- prep_mdata(\n  data_rec, data_pre, data_old,\n  dist_bounds = c(0.1, 1),\n  delta_bounds = c(0, 5),\n  mu_thetaInf_bounds = c(100, 1000),\n  thetaInf_s_bounds = c(50, 2000)\n)\n\n\n\n\nCode\nbind_rows(data_rec, data_pre, data_old) %&gt;% \n  ggplot(aes(rel_year, y, group = paste(site, plot), col = treatment)) +\n  geom_line() +\n  facet_wrap(~site) +\n  theme_bw() +\n  xlab(\"\") +\n  ylab(lab) +\n  theme(legend.position = \"bottom\") +\n  scale_color_discrete(\"\")\n\n\n\n\n\nModelled trajectories."
  },
  {
    "objectID": "31_stem.html#ltp",
    "href": "31_stem.html#ltp",
    "title": "Stem",
    "section": "LTP",
    "text": "LTP\n\n\nCode\nltp &lt;- cmdstan_model(\"models/ltp.stan\")\npath &lt;- file.path(\"chains\", var, \"ltp\")\nunlink(path, recursive = TRUE)\ndir.create(path)\nfit_ltp &lt;- ltp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = path\n)\n\n\n\n\nCode\npath &lt;- file.path(\"chains\", var, \"ltp\")\nfit_ltp &lt;- as_cmdstan_fit(list.files(path, full.names = TRUE))\nfit_ltp\n\n\n   variable    mean  median    sd   mad      q5     q95 rhat ess_bulk ess_tail\n lp__       2276.91 2276.18 18.48 18.29 2247.58 2307.73 1.00      389      812\n mu_dist       0.80    0.80  0.02  0.02    0.76    0.83 1.00      580     1492\n sigma_dist    0.09    0.08  0.01  0.01    0.07    0.11 1.00     2178     2881\n dist_p[1]     0.79    0.80  0.07  0.06    0.68    0.89 1.00     1363     1781\n dist_p[2]     0.87    0.87  0.06  0.06    0.77    0.97 1.00     1679     1201\n dist_p[3]     0.78    0.78  0.05  0.05    0.69    0.86 1.00     2284     2086\n dist_p[4]     0.81    0.81  0.07  0.06    0.69    0.91 1.00     1868     1496\n dist_p[5]     0.78    0.79  0.05  0.05    0.69    0.87 1.00     2400     2280\n dist_p[6]     0.83    0.83  0.05  0.05    0.74    0.91 1.00     2680     1742\n dist_p[7]     0.83    0.83  0.06  0.06    0.73    0.93 1.00     1701     1573\n\n # showing 10 of 9054 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\npvo_fig(data_rec, data_pre, fit_ltp)\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nproj_fig(data_rec, data_pre, data_old, fit_ltp, lab)\n\n\n\n\n\nPredicted trajectories."
  },
  {
    "objectID": "31_stem.html#stp",
    "href": "31_stem.html#stp",
    "title": "Stem",
    "section": "STP",
    "text": "STP\n\n\nCode\nstp &lt;- cmdstan_model(\"models/stp.stan\")\npath &lt;- file.path(\"chains\", var, \"stp\")\nunlink(path, recursive = TRUE)\ndir.create(path)\nfit_stp &lt;- stp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = path\n)\n\n\n\n\nCode\npath &lt;- file.path(\"chains\", var, \"stp\")\nfit_stp &lt;- as_cmdstan_fit(list.files(path, full.names = TRUE))\nfit_stp\n\n\n   variable    mean  median    sd   mad      q5     q95 rhat ess_bulk ess_tail\n lp__       2688.34 2687.84 23.74 22.88 2650.17 2727.42 1.02      377      599\n mu_dist       0.74    0.74  0.02  0.02    0.71    0.78 1.00     1190     2396\n sigma_dist    0.10    0.09  0.01  0.01    0.07    0.12 1.00     3072     2621\n dist_p[1]     0.71    0.71  0.04  0.04    0.63    0.78 1.00     4420     3046\n dist_p[2]     0.87    0.87  0.06  0.06    0.77    0.97 1.00     2197     1603\n dist_p[3]     0.73    0.73  0.04  0.04    0.66    0.80 1.00     3742     2766\n dist_p[4]     0.73    0.73  0.04  0.04    0.66    0.81 1.00     4724     2851\n dist_p[5]     0.74    0.74  0.04  0.04    0.67    0.81 1.00     3950     2891\n dist_p[6]     0.81    0.81  0.05  0.05    0.74    0.89 1.00     3208     1882\n dist_p[7]     0.77    0.77  0.05  0.05    0.70    0.85 1.00     3335     1816\n\n # showing 10 of 10026 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\npvo_fig(data_rec, data_pre, fit_stp)\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nproj_fig(data_rec, data_pre, data_old, fit_stp, lab)\n\n\n\n\n\nPredicted trajectories."
  },
  {
    "objectID": "31_stem.html#comparison",
    "href": "31_stem.html#comparison",
    "title": "Stem",
    "section": "Comparison",
    "text": "Comparison\n\n\nCode\ncomp_lambda_fig(data_rec, fit_ltp, fit_stp)\n\n\n\n\n\nlambda comparison across models."
  },
  {
    "objectID": "32_wd.html#data",
    "href": "32_wd.html#data",
    "title": "WD",
    "section": "Data",
    "text": "Data\n\n\nCode\nvar &lt;- \"WD_cwm_ba\"\nif (!exists(file.path(\"chains\", var))) {\n  dir.create(file.path(\"chains\", var))\n}\nlab &lt;- expression(\"WD [ g\" ~ cm^{\n  -3\n} ~ \"]\")\ndata_rec &lt;- read_tsv(\"data/derived_data/data_rec.tsv\") %&gt;%\n  filter(variable == var)\ndata_pre &lt;- read_tsv(\"data/derived_data/data_pre.tsv\") %&gt;%\n  filter(variable == var)\ndata_old &lt;- read_tsv(\"data/derived_data/data_old.tsv\") %&gt;%\n  filter(variable == var)\nmdata &lt;- prep_mdata(\n  data_rec, data_pre, data_old,\n  dist_bounds = c(0.1, 1.5),\n  delta_bounds = c(0, 2),\n  mu_thetaInf_bounds = c(0.5, 1.3),\n  thetaInf_s_bounds = c(0.5, 1.3)\n)\n\n\n\n\nCode\nbind_rows(data_rec, data_pre, data_old) %&gt;% \n  ggplot(aes(rel_year, y, group = paste(site, plot), col = treatment)) +\n  geom_line() +\n  facet_wrap(~site) +\n  theme_bw() +\n  xlab(\"\") +\n  ylab(lab) +\n  theme(legend.position = \"bottom\") +\n  scale_color_discrete(\"\")\n\n\n\n\n\nModelled trajectories."
  },
  {
    "objectID": "32_wd.html#ltp",
    "href": "32_wd.html#ltp",
    "title": "WD",
    "section": "LTP",
    "text": "LTP\n\n\nCode\nltp &lt;- cmdstan_model(\"models/ltp.stan\")\npath &lt;- file.path(\"chains\", var, \"ltp\")\nunlink(path, recursive = TRUE)\ndir.create(path)\nfit_ltp &lt;- ltp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = path\n)\n\n\n\n\nCode\npath &lt;- file.path(\"chains\", var, \"ltp\")\nfit_ltp &lt;- as_cmdstan_fit(list.files(path, full.names = TRUE))\nfit_ltp\n\n\n   variable    mean  median    sd   mad      q5     q95 rhat ess_bulk ess_tail\n lp__       4888.80 4885.31 46.81 48.50 4815.99 4960.30 1.10       30       34\n mu_dist       0.97    0.97  0.00  0.00    0.96    0.98 1.01      452     1801\n sigma_dist    0.03    0.03  0.00  0.00    0.02    0.03 1.02      192      138\n dist_p[1]     1.00    1.00  0.01  0.02    0.98    1.03 1.01      435     2068\n dist_p[2]     0.96    0.96  0.01  0.01    0.94    0.98 1.03      178       75\n dist_p[3]     1.01    1.01  0.02  0.01    0.99    1.04 1.01     1027     1107\n dist_p[4]     0.98    0.98  0.01  0.01    0.96    1.00 1.03      136      134\n dist_p[5]     0.98    0.98  0.01  0.01    0.96    1.00 1.02      220     1214\n dist_p[6]     0.99    0.98  0.01  0.01    0.97    1.01 1.02      407     1424\n dist_p[7]     0.99    0.98  0.01  0.01    0.97    1.01 1.02      805     1839\n\n # showing 10 of 9054 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\npvo_fig(data_rec, data_pre, fit_ltp)\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nproj_fig(data_rec, data_pre, data_old, fit_ltp, lab)\n\n\n\n\n\nPredicted trajectories."
  },
  {
    "objectID": "32_wd.html#stp",
    "href": "32_wd.html#stp",
    "title": "WD",
    "section": "STP",
    "text": "STP\n\n\nCode\nstp &lt;- cmdstan_model(\"models/stp.stan\")\npath &lt;- file.path(\"chains\", var, \"stp\")\nunlink(path, recursive = TRUE)\ndir.create(path)\nfit_stp &lt;- stp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = path\n)\n\n\n\n\nCode\npath &lt;- file.path(\"chains\", var, \"stp\")\nfit_stp &lt;- as_cmdstan_fit(list.files(path, full.names = TRUE))\nfit_stp\n\n\n   variable    mean  median    sd   mad      q5     q95 rhat ess_bulk ess_tail\n lp__       4644.80 4654.27 87.70 83.99 4509.20 4800.74 2.89        4       11\n mu_dist       1.03    1.03  0.01  0.01    1.02    1.05 1.20       13       63\n sigma_dist    0.04    0.04  0.01  0.01    0.03    0.05 1.11       23      241\n dist_p[1]     1.08    1.07  0.02  0.02    1.04    1.11 1.01      468     1961\n dist_p[2]     0.99    0.99  0.02  0.02    0.96    1.02 1.02      334     2582\n dist_p[3]     1.07    1.06  0.02  0.02    1.04    1.10 1.01     1699     1841\n dist_p[4]     1.05    1.04  0.02  0.02    1.01    1.08 1.01     2209     2314\n dist_p[5]     1.02    1.02  0.02  0.02    0.99    1.05 1.02      367     2275\n dist_p[6]     1.03    1.03  0.02  0.02    1.00    1.06 1.02      545     1948\n dist_p[7]     1.05    1.04  0.02  0.02    1.02    1.08 1.01      671     2238\n\n # showing 10 of 10026 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\npvo_fig(data_rec, data_pre, fit_stp)\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nproj_fig(data_rec, data_pre, data_old, fit_stp, lab)\n\n\n\n\n\nPredicted trajectories.\n\n\n\n\n\n\nCode\nfit_stp$draws(\"dist_p\") %&gt;%\n  mcmc_intervals() +\n  geom_vline(xintercept = 1)\n\n\n\n\n\ndelta posteriors."
  },
  {
    "objectID": "32_wd.html#comparison",
    "href": "32_wd.html#comparison",
    "title": "WD",
    "section": "Comparison",
    "text": "Comparison\n\n\nCode\ncomp_lambda_fig(data_rec, fit_ltp, fit_stp)\n\n\n\n\n\nlambda comparison across models."
  },
  {
    "objectID": "33_agb.html#data",
    "href": "33_agb.html#data",
    "title": "AGB",
    "section": "Data",
    "text": "Data\n\nWe removed Kibale by setting all its AGB vales to 300.\n\n\n\nCode\nvar &lt;- \"agb\"\nif (!exists(file.path(\"chains\", var))) {\n  dir.create(file.path(\"chains\", var))\n}\nlab &lt;- expression(\"AGB [ t\" ~ ha^{\n  -1\n} ~ \"]\")\ndata_rec &lt;- read_tsv(\"data/derived_data/data_rec.tsv\") %&gt;%\n  filter(variable == var)\ndata_pre &lt;- read_tsv(\"data/derived_data/data_pre.tsv\") %&gt;%\n  filter(variable == var)\ndata_old &lt;- read_tsv(\"data/derived_data/data_old.tsv\") %&gt;%\n  filter(variable == var)\nmdata &lt;- prep_mdata(\n  data_rec, data_pre, data_old,\n  dist_bounds = c(0.1, 1),\n  delta_bounds = c(0, 5),\n  mu_thetaInf_bounds = c(100, 500),\n  thetaInf_s_bounds = c(50, 1000)\n)\n\n\n\n\nCode\nbind_rows(data_rec, data_pre, data_old) %&gt;% \n  ggplot(aes(rel_year, y, group = paste(site, plot), col = treatment)) +\n  geom_line() +\n  facet_wrap(~site) +\n  theme_bw() +\n  xlab(\"\") +\n  ylab(lab) +\n  theme(legend.position = \"bottom\") +\n  scale_color_discrete(\"\")\n\n\n\n\n\nModelled trajectories."
  },
  {
    "objectID": "33_agb.html#ltp",
    "href": "33_agb.html#ltp",
    "title": "AGB",
    "section": "LTP",
    "text": "LTP\n\n\nCode\nltp &lt;- cmdstan_model(\"models/ltp.stan\")\npath &lt;- file.path(\"chains\", var, \"ltp\")\nunlink(path, recursive = TRUE)\ndir.create(path)\nfit_ltp &lt;- ltp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = path\n)\n\n\n\n\nCode\npath &lt;- file.path(\"chains\", var, \"ltp\")\nfit_ltp &lt;- as_cmdstan_fit(list.files(path, full.names = TRUE))\nfit_ltp\n\n\n   variable    mean  median    sd   mad      q5     q95 rhat ess_bulk ess_tail\n lp__       2867.18 2867.32 13.99 14.25 2843.57 2889.48 1.00      895     1781\n mu_dist       0.57    0.57  0.02  0.02    0.53    0.61 1.00     4012     3481\n sigma_dist    0.13    0.13  0.02  0.02    0.10    0.16 1.00     3522     3129\n dist_p[1]     0.51    0.51  0.03  0.03    0.47    0.56 1.00     4693     3351\n dist_p[2]     0.72    0.72  0.03  0.03    0.67    0.76 1.00     2757     3464\n dist_p[3]     0.70    0.70  0.05  0.04    0.61    0.77 1.00     4588     2127\n dist_p[4]     0.69    0.70  0.06  0.06    0.59    0.79 1.00     6372     2916\n dist_p[5]     0.68    0.68  0.03  0.02    0.64    0.72 1.00     3030     3215\n dist_p[6]     0.83    0.83  0.06  0.05    0.73    0.92 1.00     3919     2332\n dist_p[7]     0.82    0.83  0.06  0.06    0.73    0.92 1.00     3554     2229\n\n # showing 10 of 9054 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\npvo_fig(data_rec, data_pre, fit_ltp)\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nproj_fig(data_rec, data_pre, data_old, fit_ltp, lab)\n\n\n\n\n\nPredicted trajectories."
  },
  {
    "objectID": "33_agb.html#stp",
    "href": "33_agb.html#stp",
    "title": "AGB",
    "section": "STP",
    "text": "STP\n\n\nCode\nstp &lt;- cmdstan_model(\"models/stp.stan\")\npath &lt;- file.path(\"chains\", var, \"stp\")\nunlink(path, recursive = TRUE)\ndir.create(path)\nfit_stp &lt;- stp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = path\n)\n\n\n\n\nCode\npath &lt;- file.path(\"chains\", var, \"stp\")\nfit_stp &lt;- as_cmdstan_fit(list.files(path, full.names = TRUE))\nfit_stp\n\n\n   variable    mean  median    sd   mad      q5     q95 rhat ess_bulk ess_tail\n lp__       3018.27 3027.76 39.64 34.14 2938.61 3069.00 1.53        7       48\n mu_dist       0.63    0.63  0.03  0.03    0.57    0.68 1.12       21      165\n sigma_dist    0.14    0.14  0.02  0.02    0.11    0.18 1.00     2740     3177\n dist_p[1]     0.51    0.51  0.03  0.03    0.46    0.55 1.01     1861     2098\n dist_p[2]     0.64    0.65  0.08  0.07    0.49    0.75 1.02      364      991\n dist_p[3]     0.70    0.70  0.04  0.04    0.63    0.76 1.00     3369     2279\n dist_p[4]     0.66    0.67  0.08  0.07    0.50    0.77 1.03      149     1807\n dist_p[5]     0.68    0.68  0.03  0.02    0.64    0.72 1.01     1257     1232\n dist_p[6]     0.82    0.83  0.05  0.05    0.74    0.90 1.00     3222     2734\n dist_p[7]     0.82    0.82  0.05  0.04    0.75    0.90 1.00     3488     2287\n\n # showing 10 of 10026 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\npvo_fig(data_rec, data_pre, fit_stp)\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nproj_fig(data_rec, data_pre, data_old, fit_stp, lab)\n\n\n\n\n\nPredicted trajectories.\n\n\n\n\n\n\nCode\nfit_stp$summary(\"lambda_p\", \"mean\") %&gt;%\n  mutate(t95 = log(20) / mean) %&gt;%\n  ggplot(aes(t95)) +\n  geom_histogram() +\n  theme_bw() +\n  scale_x_log10()\n\n\n\n\n\n95% recovery time."
  },
  {
    "objectID": "33_agb.html#comparison",
    "href": "33_agb.html#comparison",
    "title": "AGB",
    "section": "Comparison",
    "text": "Comparison\n\n\nCode\ncomp_lambda_fig(data_rec, fit_ltp, fit_stp)\n\n\n\n\n\nlambda comparison across models."
  },
  {
    "objectID": "34_fdiv.html#data",
    "href": "34_fdiv.html#data",
    "title": "FDiv",
    "section": "Data",
    "text": "Data\n\n\nCode\nvar &lt;- \"FDiv\"\nif (!exists(file.path(\"chains\", var))) {\n  dir.create(file.path(\"chains\", var))\n}\nlab &lt;- expression(\"FDiv\")\ndata_rec &lt;- read_tsv(\"data/derived_data/data_rec.tsv\") %&gt;%\n  filter(variable == var)\ndata_pre &lt;- read_tsv(\"data/derived_data/data_pre.tsv\") %&gt;%\n  filter(variable == var)\ndata_old &lt;- read_tsv(\"data/derived_data/data_old.tsv\") %&gt;%\n  filter(variable == var)\nmdata &lt;- prep_mdata(\n  data_rec, data_pre, data_old,\n  dist_bounds = c(0.1, 1.5),\n  delta_bounds = c(0, 2),\n  mu_thetaInf_bounds = c(0, 1),\n  thetaInf_s_bounds = c(0, 1)\n)\n\n\n\n\nCode\nbind_rows(data_rec, data_pre, data_old) %&gt;% \n  ggplot(aes(rel_year, y, group = paste(site, plot), col = treatment)) +\n  geom_line() +\n  facet_wrap(~site) +\n  theme_bw() +\n  xlab(\"\") +\n  ylab(lab) +\n  theme(legend.position = \"bottom\") +\n  scale_color_discrete(\"\")\n\n\n\n\n\nModelled trajectories."
  },
  {
    "objectID": "34_fdiv.html#ltp",
    "href": "34_fdiv.html#ltp",
    "title": "FDiv",
    "section": "LTP",
    "text": "LTP\n\n\nCode\nltp &lt;- cmdstan_model(\"models/ltp.stan\")\npath &lt;- file.path(\"chains\", var, \"ltp\")\nunlink(path, recursive = TRUE)\ndir.create(path)\nfit_ltp &lt;- ltp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = path\n)\n\n\n\n\nCode\npath &lt;- file.path(\"chains\", var, \"ltp\")\nfit_ltp &lt;- as_cmdstan_fit(list.files(path, full.names = TRUE))\nfit_ltp\n\n\n   variable    mean  median    sd   mad      q5     q95 rhat ess_bulk ess_tail\n lp__       3087.51 3083.85 35.60 34.12 3033.50 3151.89 1.05       84      203\n mu_dist       1.02    1.02  0.02  0.02    1.00    1.05 1.00     1505     2083\n sigma_dist    0.09    0.09  0.01  0.01    0.07    0.12 1.00     1651     2383\n dist_p[1]     1.18    1.18  0.06  0.06    1.09    1.27 1.00      998     1936\n dist_p[2]     1.30    1.31  0.11  0.12    1.09    1.47 1.01      313      344\n dist_p[3]     0.93    0.92  0.04  0.04    0.86    1.00 1.00     1027     1854\n dist_p[4]     0.79    0.79  0.04  0.04    0.73    0.85 1.00      769     1265\n dist_p[5]     0.91    0.91  0.05  0.04    0.84    0.98 1.00      910     1905\n dist_p[6]     0.83    0.83  0.04  0.04    0.77    0.90 1.00      981     1831\n dist_p[7]     0.89    0.90  0.05  0.05    0.81    0.97 1.00     1088     1548\n\n # showing 10 of 9054 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\npvo_fig(data_rec, data_pre, fit_ltp)\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nproj_fig(data_rec, data_pre, data_old, fit_ltp, lab)\n\n\n\n\n\nPredicted trajectories."
  },
  {
    "objectID": "34_fdiv.html#stp",
    "href": "34_fdiv.html#stp",
    "title": "FDiv",
    "section": "STP",
    "text": "STP\n\n\nCode\nstp &lt;- cmdstan_model(\"models/stp.stan\")\npath &lt;- file.path(\"chains\", var, \"stp\")\nunlink(path, recursive = TRUE)\ndir.create(path)\nfit_stp &lt;- stp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = path\n)\n\n\n\n\nCode\npath &lt;- file.path(\"chains\", var, \"stp\")\nfit_stp &lt;- as_cmdstan_fit(list.files(path, full.names = TRUE))\nfit_stp\n\n\n   variable    mean  median    sd   mad      q5     q95 rhat ess_bulk ess_tail\n lp__       2908.60 2912.92 36.41 35.99 2842.82 2962.15 1.86        5       31\n mu_dist       1.00    1.00  0.03  0.03    0.95    1.05 1.13       20       58\n sigma_dist    0.15    0.15  0.02  0.02    0.11    0.18 1.06       44      130\n dist_p[1]     0.99    0.88  0.23  0.05    0.81    1.46 1.53        7       31\n dist_p[2]     1.29    1.28  0.09  0.09    1.16    1.46 1.32        9       30\n dist_p[3]     0.86    0.85  0.04  0.04    0.79    0.93 1.06       43       96\n dist_p[4]     1.07    1.20  0.25  0.03    0.62    1.25 1.53        7       28\n dist_p[5]     0.84    0.84  0.06  0.04    0.76    0.91 1.04      248       58\n dist_p[6]     0.76    0.76  0.04  0.04    0.69    0.82 1.06     1691       50\n dist_p[7]     0.76    0.76  0.06  0.05    0.67    0.84 1.08     1960       38\n\n # showing 10 of 10026 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\npvo_fig(data_rec, data_pre, fit_stp)\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nproj_fig(data_rec, data_pre, data_old, fit_stp, lab)\n\n\n\n\n\nPredicted trajectories."
  },
  {
    "objectID": "34_fdiv.html#comparison",
    "href": "34_fdiv.html#comparison",
    "title": "FDiv",
    "section": "Comparison",
    "text": "Comparison\n\n\nCode\ncomp_lambda_fig(data_rec, fit_ltp, fit_stp)\n\n\n\n\n\nlambda comparison across models."
  },
  {
    "objectID": "35_div_q1_gen.html#data",
    "href": "35_div_q1_gen.html#data",
    "title": "Genus diversity 1",
    "section": "Data",
    "text": "Data\n\n\nCode\nvar &lt;- \"diversity_q1_gen\"\nif (!exists(file.path(\"chains\", var))) {\n  dir.create(file.path(\"chains\", var))\n}\nlab &lt;- expression(\"Genus diversity\"~q==1)\ndata_rec &lt;- read_tsv(\"data/derived_data/data_rec.tsv\") %&gt;%\n  filter(variable == var)\ndata_pre &lt;- read_tsv(\"data/derived_data/data_pre.tsv\") %&gt;%\n  filter(variable == var)\ndata_old &lt;- read_tsv(\"data/derived_data/data_old.tsv\") %&gt;%\n  filter(variable == var)\nmdata &lt;- prep_mdata(\n  data_rec, data_pre, data_old,\n  dist_bounds = c(0.1, 1.5),\n  delta_bounds = c(0, 2),\n  mu_thetaInf_bounds = c(10, 100),\n  thetaInf_s_bounds = c(10, 100)\n)\n\n\n\n\nCode\nbind_rows(data_rec, data_pre, data_old) %&gt;% \n  ggplot(aes(rel_year, y, group = paste(site, plot), col = treatment)) +\n  geom_line() +\n  facet_wrap(~site) +\n  theme_bw() +\n  xlab(\"\") +\n  ylab(lab) +\n  theme(legend.position = \"bottom\") +\n  scale_color_discrete(\"\")\n\n\n\n\n\nModelled trajectories."
  },
  {
    "objectID": "35_div_q1_gen.html#ltp",
    "href": "35_div_q1_gen.html#ltp",
    "title": "Genus diversity 1",
    "section": "LTP",
    "text": "LTP\n\n\nCode\nltp &lt;- cmdstan_model(\"models/ltp.stan\")\npath &lt;- file.path(\"chains\", var, \"ltp\")\nunlink(path, recursive = TRUE)\ndir.create(path)\nfit_ltp &lt;- ltp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = path\n)\n\n\n\n\nCode\npath &lt;- file.path(\"chains\", var, \"ltp\")\nfit_ltp &lt;- as_cmdstan_fit(list.files(path, full.names = TRUE))\nfit_ltp\n\n\n   variable    mean  median    sd   mad      q5     q95 rhat ess_bulk ess_tail\n lp__       2478.44 2475.52 34.65 33.53 2426.28 2541.79 1.07       62      180\n mu_dist       1.02    1.02  0.03  0.02    0.98    1.06 1.01      784     2089\n sigma_dist    0.14    0.14  0.02  0.02    0.11    0.17 1.00     1929     1929\n dist_p[1]     1.07    1.07  0.07  0.07    0.96    1.20 1.00     1171     1355\n dist_p[2]     0.76    0.76  0.06  0.06    0.67    0.86 1.00     1266     1771\n dist_p[3]     1.23    1.23  0.09  0.09    1.10    1.40 1.01      481      163\n dist_p[4]     0.83    0.83  0.06  0.06    0.73    0.93 1.00     1244     1886\n dist_p[5]     1.07    1.07  0.07  0.07    0.96    1.19 1.00     1058     1289\n dist_p[6]     0.91    0.91  0.06  0.06    0.81    1.02 1.00      799      606\n dist_p[7]     0.69    0.69  0.06  0.06    0.58    0.79 1.01      608     1138\n\n # showing 10 of 9054 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\npvo_fig(data_rec, data_pre, fit_ltp)\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nproj_fig(data_rec, data_pre, data_old, fit_ltp, lab)\n\n\n\n\n\nPredicted trajectories."
  },
  {
    "objectID": "35_div_q1_gen.html#stp",
    "href": "35_div_q1_gen.html#stp",
    "title": "Genus diversity 1",
    "section": "STP",
    "text": "STP\n\n\nCode\nstp &lt;- cmdstan_model(\"models/stp.stan\")\npath &lt;- file.path(\"chains\", var, \"stp\")\nunlink(path, recursive = TRUE)\ndir.create(path)\nfit_stp &lt;- stp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = path\n)\n\n\n\n\nCode\npath &lt;- file.path(\"chains\", var, \"stp\")\nfit_stp &lt;- as_cmdstan_fit(list.files(path, full.names = TRUE))\nfit_stp\n\n\n   variable    mean  median    sd   mad      q5     q95 rhat ess_bulk ess_tail\n lp__       2074.07 2079.86 70.79 73.25 1955.30 2183.08 2.32        5       37\n mu_dist       0.98    0.98  0.06  0.07    0.89    1.07 1.56        6      110\n sigma_dist    0.17    0.17  0.03  0.03    0.13    0.21 1.07       35      231\n dist_p[1]     1.12    1.11  0.11  0.10    0.96    1.30 1.01     1647     1820\n dist_p[2]     0.74    0.74  0.08  0.08    0.62    0.87 1.01     1308     2184\n dist_p[3]     1.28    1.28  0.11  0.11    1.10    1.46 1.01     1072     1441\n dist_p[4]     0.83    0.83  0.08  0.08    0.70    0.98 1.01      729     2470\n dist_p[5]     1.10    1.09  0.10  0.10    0.94    1.28 1.02     1590     1516\n dist_p[6]     0.91    0.91  0.09  0.09    0.77    1.05 1.01     1122      779\n dist_p[7]     0.63    0.63  0.08  0.08    0.51    0.76 1.02      402      883\n\n # showing 10 of 10026 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\npvo_fig(data_rec, data_pre, fit_stp)\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nproj_fig(data_rec, data_pre, data_old, fit_stp, lab)\n\n\n\n\n\nPredicted trajectories."
  },
  {
    "objectID": "35_div_q1_gen.html#comparison",
    "href": "35_div_q1_gen.html#comparison",
    "title": "Genus diversity 1",
    "section": "Comparison",
    "text": "Comparison\n\n\nCode\ncomp_lambda_fig(data_rec, fit_ltp, fit_stp)\n\n\n\n\n\nlambda comparison across models."
  },
  {
    "objectID": "37_gini.html#data",
    "href": "37_gini.html#data",
    "title": "Gini",
    "section": "Data",
    "text": "Data\n\n\nCode\nvar &lt;- \"gini\"\nif (!exists(file.path(\"chains\", var))) {\n  dir.create(file.path(\"chains\", var))\n}\nlab &lt;- \"Gini index\"\ndata_rec &lt;- read_tsv(\"data/derived_data/data_rec.tsv\") %&gt;%\n  filter(variable == var)\ndata_pre &lt;- read_tsv(\"data/derived_data/data_pre.tsv\") %&gt;%\n  filter(variable == var)\ndata_old &lt;- read_tsv(\"data/derived_data/data_old.tsv\") %&gt;%\n  filter(variable == var)\nmdata &lt;- prep_mdata(\n  data_rec, data_pre, data_old,\n  dist_bounds = c(0.1, 1.5),\n  delta_bounds = c(0, 2),\n  mu_thetaInf_bounds = c(0, 2),\n  thetaInf_s_bounds = c(0, 2)\n)\n\n\n\n\nCode\nbind_rows(data_rec, data_pre, data_old) %&gt;% \n  ggplot(aes(rel_year, y, group = paste(site, plot), col = treatment)) +\n  geom_line() +\n  facet_wrap(~site) +\n  theme_bw() +\n  xlab(\"\") +\n  ylab(lab) +\n  theme(legend.position = \"bottom\") +\n  scale_color_discrete(\"\")\n\n\n\n\n\nModelled trajectories."
  },
  {
    "objectID": "37_gini.html#ltp",
    "href": "37_gini.html#ltp",
    "title": "Gini",
    "section": "LTP",
    "text": "LTP\n\n\nCode\nltp &lt;- cmdstan_model(\"models/ltp.stan\")\npath &lt;- file.path(\"chains\", var, \"ltp\")\nunlink(path, recursive = TRUE)\ndir.create(path)\nfit_ltp &lt;- ltp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = path\n)\n\n\n\n\nCode\npath &lt;- file.path(\"chains\", var, \"ltp\")\nfit_ltp &lt;- as_cmdstan_fit(list.files(path, full.names = TRUE))\nfit_ltp\n\n\n   variable    mean  median    sd   mad      q5     q95 rhat ess_bulk ess_tail\n lp__       4093.14 4093.72 15.16 15.12 4067.57 4117.11 1.01      663     1486\n mu_dist       0.89    0.89  0.01  0.01    0.87    0.91 1.00     1976     2465\n sigma_dist    0.06    0.06  0.01  0.01    0.05    0.07 1.00     4067     2989\n dist_p[1]     0.85    0.85  0.03  0.03    0.80    0.89 1.00     1421     2231\n dist_p[2]     0.92    0.92  0.03  0.02    0.88    0.96 1.01     1030     1611\n dist_p[3]     0.95    0.95  0.03  0.03    0.90    1.01 1.00     1405     2161\n dist_p[4]     1.00    1.00  0.04  0.03    0.94    1.06 1.01     1044     2021\n dist_p[5]     0.97    0.96  0.05  0.03    0.92    1.07 1.01      604     1060\n dist_p[6]     1.02    1.02  0.04  0.04    0.95    1.08 1.01      856     1510\n dist_p[7]     0.98    0.98  0.04  0.04    0.91    1.04 1.01     1085     1657\n\n # showing 10 of 9054 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\npvo_fig(data_rec, data_pre, fit_ltp)\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nproj_fig(data_rec, data_pre, data_old, fit_ltp, lab)\n\n\n\n\n\nPredicted trajectories."
  },
  {
    "objectID": "37_gini.html#stp",
    "href": "37_gini.html#stp",
    "title": "Gini",
    "section": "STP",
    "text": "STP\n\n\nCode\nstp &lt;- cmdstan_model(\"models/stp.stan\")\npath &lt;- file.path(\"chains\", var, \"stp\")\nunlink(path, recursive = TRUE)\ndir.create(path)\nfit_stp &lt;- stp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = path\n)\n\n\n\n\nCode\npath &lt;- file.path(\"chains\", var, \"stp\")\nfit_stp &lt;- as_cmdstan_fit(list.files(path, full.names = TRUE))\nfit_stp\n\n\n   variable    mean  median     sd    mad      q5     q95 rhat ess_bulk\n lp__       3777.44 3797.98 123.17 103.11 3568.15 3952.41 2.42        4\n mu_dist       0.91    0.91   0.02   0.02    0.88    0.93 1.37        8\n sigma_dist    0.06    0.06   0.01   0.01    0.04    0.07 1.04       83\n dist_p[1]     0.84    0.84   0.04   0.04    0.78    0.90 1.05       58\n dist_p[2]     0.91    0.91   0.03   0.03    0.86    0.97 1.05       52\n dist_p[3]     0.95    0.95   0.04   0.04    0.89    1.01 1.02      625\n dist_p[4]     1.00    1.00   0.04   0.04    0.93    1.07 1.01     1548\n dist_p[5]     0.96    0.96   0.07   0.05    0.87    1.09 1.09       41\n dist_p[6]     1.01    1.01   0.05   0.05    0.93    1.09 1.01     1006\n dist_p[7]     0.97    0.97   0.04   0.04    0.91    1.04 1.02      316\n ess_tail\n       36\n       84\n     2072\n      226\n     1602\n     2605\n     2212\n       84\n     2361\n     1658\n\n # showing 10 of 10026 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\npvo_fig(data_rec, data_pre, fit_stp)\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nproj_fig(data_rec, data_pre, data_old, fit_stp, lab)\n\n\n\n\n\nPredicted trajectories."
  },
  {
    "objectID": "37_gini.html#comparison",
    "href": "37_gini.html#comparison",
    "title": "Gini",
    "section": "Comparison",
    "text": "Comparison\n\n\nCode\ncomp_lambda_fig(data_rec, fit_ltp, fit_stp)\n\n\n\n\n\nlambda comparison across models."
  },
  {
    "objectID": "38_ba.html#data",
    "href": "38_ba.html#data",
    "title": "BA",
    "section": "Data",
    "text": "Data\n\n\nCode\nvar &lt;- \"ba\"\nif (!exists(file.path(\"chains\", var))) {\n  dir.create(file.path(\"chains\", var))\n}\nlab &lt;- expression(\"BA [\" ~ m^2 ~ m^{\n  -2\n} ~ \"]\")\ndata_rec &lt;- read_tsv(\"data/derived_data/data_rec.tsv\") %&gt;%\n  filter(variable == var)\ndata_pre &lt;- read_tsv(\"data/derived_data/data_pre.tsv\") %&gt;%\n  filter(variable == var)\ndata_old &lt;- read_tsv(\"data/derived_data/data_old.tsv\") %&gt;%\n  filter(variable == var)\nmdata &lt;- prep_mdata(\n  data_rec, data_pre, data_old,\n  dist_bounds = c(0.1, 1.5),\n  delta_bounds = c(0, 2),\n  mu_thetaInf_bounds = c(1, 100),\n  thetaInf_s_bounds = c(1, 100)\n)\n\n\n\n\nCode\nbind_rows(data_rec, data_pre, data_old) %&gt;% \n  ggplot(aes(rel_year, y, group = paste(site, plot), col = treatment)) +\n  geom_line() +\n  facet_wrap(~site) +\n  theme_bw() +\n  xlab(\"\") +\n  ylab(lab) +\n  theme(legend.position = \"bottom\") +\n  scale_color_discrete(\"\")\n\n\n\n\n\nModelled trajectories."
  },
  {
    "objectID": "38_ba.html#ltp",
    "href": "38_ba.html#ltp",
    "title": "BA",
    "section": "LTP",
    "text": "LTP\n\n\nCode\nltp &lt;- cmdstan_model(\"models/ltp.stan\")\npath &lt;- file.path(\"chains\", var, \"ltp\")\nunlink(path, recursive = TRUE)\ndir.create(path)\nfit_ltp &lt;- ltp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = path\n)\n\n\n\n\nCode\npath &lt;- file.path(\"chains\", var, \"ltp\")\nfit_ltp &lt;- as_cmdstan_fit(list.files(path, full.names = TRUE))\nfit_ltp\n\n\n   variable    mean  median    sd   mad      q5     q95 rhat ess_bulk ess_tail\n lp__       2630.30 2630.47 14.89 14.74 2605.61 2655.16 1.00      815     1743\n mu_dist       0.61    0.61  0.03  0.03    0.57    0.66 1.00     5335     3261\n sigma_dist    0.15    0.15  0.02  0.02    0.12    0.19 1.00     4410     2856\n dist_p[1]     0.56    0.56  0.04  0.04    0.49    0.63 1.00     6689     2974\n dist_p[2]     0.77    0.77  0.04  0.04    0.70    0.84 1.00     4473     3509\n dist_p[3]     0.72    0.72  0.06  0.06    0.62    0.81 1.00     4816     2290\n dist_p[4]     0.70    0.70  0.07  0.07    0.58    0.81 1.00     6173     2445\n dist_p[5]     0.70    0.70  0.04  0.04    0.64    0.76 1.00     4388     3348\n dist_p[6]     0.84    0.84  0.06  0.06    0.74    0.94 1.00     4809     3072\n dist_p[7]     0.79    0.79  0.07  0.07    0.68    0.90 1.00     5220     3036\n\n # showing 10 of 9054 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\npvo_fig(data_rec, data_pre, fit_ltp)\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nproj_fig(data_rec, data_pre, data_old, fit_ltp, lab)\n\n\n\n\n\nPredicted trajectories."
  },
  {
    "objectID": "38_ba.html#stp",
    "href": "38_ba.html#stp",
    "title": "BA",
    "section": "STP",
    "text": "STP\n\n\nCode\nstp &lt;- cmdstan_model(\"models/stp.stan\")\npath &lt;- file.path(\"chains\", var, \"stp\")\nunlink(path, recursive = TRUE)\ndir.create(path)\nfit_stp &lt;- stp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = path\n)\n\n\n\n\nCode\npath &lt;- file.path(\"chains\", var, \"stp\")\nfit_stp &lt;- as_cmdstan_fit(list.files(path, full.names = TRUE))\nfit_stp\n\n\n   variable    mean  median     sd    mad      q5     q95 rhat ess_bulk\n lp__       2525.76 2594.70 255.51 243.22 2132.39 2786.92 2.24        5\n mu_dist       0.69    0.69   0.04   0.05    0.62    0.76 1.50        7\n sigma_dist    0.17    0.17   0.02   0.02    0.13    0.21 1.03      106\n dist_p[1]     0.58    0.57   0.05   0.05    0.50    0.67 1.13       20\n dist_p[2]     0.78    0.78   0.05   0.05    0.71    0.87 1.05       53\n dist_p[3]     0.75    0.74   0.06   0.06    0.66    0.86 1.07       35\n dist_p[4]     0.75    0.74   0.08   0.07    0.63    0.88 1.14       18\n dist_p[5]     0.71    0.71   0.04   0.04    0.65    0.79 1.04       66\n dist_p[6]     0.87    0.87   0.07   0.06    0.77    0.99 1.03      150\n dist_p[7]     0.82    0.81   0.07   0.07    0.71    0.94 1.05       48\n ess_tail\n       13\n       71\n     1785\n       67\n      116\n      155\n       68\n      143\n      177\n      159\n\n # showing 10 of 10026 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\npvo_fig(data_rec, data_pre, fit_stp)\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nproj_fig(data_rec, data_pre, data_old, fit_stp, lab)\n\n\n\n\n\nPredicted trajectories."
  },
  {
    "objectID": "38_ba.html#comparison",
    "href": "38_ba.html#comparison",
    "title": "BA",
    "section": "Comparison",
    "text": "Comparison\n\n\nCode\ncomp_lambda_fig(data_rec, fit_ltp, fit_stp)\n\n\n\n\n\nlambda comparison across models."
  },
  {
    "objectID": "39_feve.html#data",
    "href": "39_feve.html#data",
    "title": "FEve",
    "section": "Data",
    "text": "Data\n\n\nCode\nvar &lt;- \"FEve\"\nif (!exists(file.path(\"chains\", var))) {\n  dir.create(file.path(\"chains\", var))\n}\nlab &lt;- \"FEve\"\ndata_rec &lt;- read_tsv(\"data/derived_data/data_rec.tsv\") %&gt;%\n  filter(variable == var)\ndata_pre &lt;- read_tsv(\"data/derived_data/data_pre.tsv\") %&gt;%\n  filter(variable == var)\ndata_old &lt;- read_tsv(\"data/derived_data/data_old.tsv\") %&gt;%\n  filter(variable == var)\nmdata &lt;- prep_mdata(\n  data_rec, data_pre, data_old,\n  dist_bounds = c(0.1, 1.5),\n  delta_bounds = c(0, 2),\n  mu_thetaInf_bounds = c(0, 2),\n  thetaInf_s_bounds = c(0, 2)\n)\n\n\n\n\nCode\nbind_rows(data_rec, data_pre, data_old) %&gt;% \n  ggplot(aes(rel_year, y, group = paste(site, plot), col = treatment)) +\n  geom_line() +\n  facet_wrap(~site) +\n  theme_bw() +\n  xlab(\"\") +\n  ylab(lab) +\n  theme(legend.position = \"bottom\") +\n  scale_color_discrete(\"\")\n\n\n\n\n\nModelled trajectories."
  },
  {
    "objectID": "39_feve.html#ltp",
    "href": "39_feve.html#ltp",
    "title": "FEve",
    "section": "LTP",
    "text": "LTP\n\n\nCode\nltp &lt;- cmdstan_model(\"models/ltp.stan\")\npath &lt;- file.path(\"chains\", var, \"ltp\")\nunlink(path, recursive = TRUE)\ndir.create(path)\nfit_ltp &lt;- ltp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = path\n)\n\n\n\n\nCode\npath &lt;- file.path(\"chains\", var, \"ltp\")\nfit_ltp &lt;- as_cmdstan_fit(list.files(path, full.names = TRUE))\nfit_ltp\n\n\n   variable    mean  median    sd   mad      q5     q95 rhat ess_bulk ess_tail\n lp__       1984.24 1983.22 27.19 26.82 1941.56 2032.30 1.02      152      221\n mu_dist       1.03    1.03  0.03  0.03    0.98    1.07 1.00      879      823\n sigma_dist    0.13    0.12  0.02  0.02    0.10    0.16 1.00     2131     2536\n dist_p[1]     1.06    1.06  0.09  0.08    0.93    1.21 1.00     1500     1356\n dist_p[2]     1.09    1.08  0.09  0.08    0.96    1.26 1.00     1832     1432\n dist_p[3]     1.10    1.10  0.08  0.08    0.97    1.25 1.00     2269     2379\n dist_p[4]     0.46    0.45  0.07  0.07    0.36    0.59 1.00     2206      994\n dist_p[5]     0.77    0.76  0.08  0.08    0.65    0.90 1.00     1969     2489\n dist_p[6]     1.00    0.99  0.08  0.07    0.87    1.12 1.00     2188     1898\n dist_p[7]     1.09    1.09  0.09  0.08    0.96    1.24 1.00     2070     2247\n\n # showing 10 of 9054 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\npvo_fig(data_rec, data_pre, fit_ltp)\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nproj_fig(data_rec, data_pre, data_old, fit_ltp, lab)\n\n\n\n\n\nPredicted trajectories."
  },
  {
    "objectID": "39_feve.html#stp",
    "href": "39_feve.html#stp",
    "title": "FEve",
    "section": "STP",
    "text": "STP\n\n\nCode\nstp &lt;- cmdstan_model(\"models/stp.stan\")\npath &lt;- file.path(\"chains\", var, \"stp\")\nunlink(path, recursive = TRUE)\ndir.create(path)\nfit_stp &lt;- stp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = path\n)\n\n\n\n\nCode\npath &lt;- file.path(\"chains\", var, \"stp\")\nfit_stp &lt;- as_cmdstan_fit(list.files(path, full.names = TRUE))\nfit_stp\n\n\n   variable    mean  median     sd    mad      q5     q95 rhat ess_bulk\n lp__       1848.67 1819.55 199.03 266.13 1621.28 2140.38 1.83        5\n mu_dist       1.02    1.03   0.05   0.06    0.93    1.10 1.53        7\n sigma_dist    0.14    0.14   0.03   0.03    0.10    0.19 1.24       12\n dist_p[1]     0.99    1.00   0.13   0.13    0.76    1.19 1.16       17\n dist_p[2]     1.12    1.11   0.12   0.10    0.95    1.34 1.03      690\n dist_p[3]     1.07    1.07   0.11   0.10    0.88    1.26 1.07       42\n dist_p[4]     0.44    0.43   0.08   0.07    0.32    0.58 1.05       56\n dist_p[5]     0.75    0.74   0.11   0.10    0.58    0.93 1.06       53\n dist_p[6]     1.01    1.01   0.10   0.09    0.85    1.17 1.02      932\n dist_p[7]     1.04    1.04   0.13   0.13    0.82    1.25 1.15       18\n ess_tail\n       17\n       79\n       35\n      561\n      947\n      235\n      157\n      171\n     1736\n      209\n\n # showing 10 of 10026 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\npvo_fig(data_rec, data_pre, fit_stp)\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nproj_fig(data_rec, data_pre, data_old, fit_stp, lab)\n\n\n\n\n\nPredicted trajectories."
  },
  {
    "objectID": "39_feve.html#comparison",
    "href": "39_feve.html#comparison",
    "title": "FEve",
    "section": "Comparison",
    "text": "Comparison\n\n\nCode\ncomp_lambda_fig(data_rec, fit_ltp, fit_stp)\n\n\n\n\n\nlambda comparison across models."
  },
  {
    "objectID": "40_sla.html#data",
    "href": "40_sla.html#data",
    "title": "SLA",
    "section": "Data",
    "text": "Data\n\n\nCode\nvar &lt;- \"SLA_cwm_ba\"\nif (!exists(file.path(\"chains\", var))) {\n  dir.create(file.path(\"chains\", var))\n}\nlab &lt;- expression(\"SLA [\" ~ mm^2 ~ mg^{\n  -1\n} ~ \"]\")\ndata_rec &lt;- read_tsv(\"data/derived_data/data_rec.tsv\") %&gt;%\n  filter(variable == var)\ndata_pre &lt;- read_tsv(\"data/derived_data/data_pre.tsv\") %&gt;%\n  filter(variable == var)\ndata_old &lt;- read_tsv(\"data/derived_data/data_old.tsv\") %&gt;%\n  filter(variable == var)\nmdata &lt;- prep_mdata(\n  data_rec, data_pre, data_old,\n  dist_bounds = c(0.1, 1.5),\n  delta_bounds = c(0, 2),\n  mu_thetaInf_bounds = c(1, 50),\n  thetaInf_s_bounds = c(1, 50)\n)\n\n\n\n\nCode\nbind_rows(data_rec, data_pre, data_old) %&gt;% \n  ggplot(aes(rel_year, y, group = paste(site, plot), col = treatment)) +\n  geom_line() +\n  facet_wrap(~site) +\n  theme_bw() +\n  xlab(\"\") +\n  ylab(lab) +\n  theme(legend.position = \"bottom\") +\n  scale_color_discrete(\"\")\n\n\n\n\n\nModelled trajectories."
  },
  {
    "objectID": "40_sla.html#ltp",
    "href": "40_sla.html#ltp",
    "title": "SLA",
    "section": "LTP",
    "text": "LTP\n\n\nCode\nltp &lt;- cmdstan_model(\"models/ltp.stan\")\npath &lt;- file.path(\"chains\", var, \"ltp\")\nunlink(path, recursive = TRUE)\ndir.create(path)\nfit_ltp &lt;- ltp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = path\n)\n\n\n\n\nCode\npath &lt;- file.path(\"chains\", var, \"ltp\")\nfit_ltp &lt;- as_cmdstan_fit(list.files(path, full.names = TRUE))\nfit_ltp\n\n\n   variable    mean  median    sd   mad      q5     q95 rhat ess_bulk ess_tail\n lp__       3957.86 3958.22 13.97 14.30 3934.38 3980.01 1.00     1065     1680\n mu_dist       0.96    0.96  0.02  0.02    0.94    0.99 1.00     1645     2330\n sigma_dist    0.08    0.08  0.01  0.01    0.07    0.10 1.00     4018     2757\n dist_p[1]     0.94    0.94  0.03  0.03    0.89    0.98 1.00      830     2575\n dist_p[2]     1.04    1.04  0.06  0.08    0.95    1.13 1.00      628     2438\n dist_p[3]     0.98    0.98  0.03  0.03    0.93    1.04 1.00      773     2271\n dist_p[4]     0.97    0.97  0.03  0.03    0.92    1.01 1.00      803     2536\n dist_p[5]     1.06    1.06  0.03  0.03    1.00    1.11 1.00      792     2263\n dist_p[6]     1.13    1.14  0.03  0.03    1.08    1.19 1.00      804     1972\n dist_p[7]     1.07    1.07  0.03  0.03    1.01    1.12 1.00      859     2212\n\n # showing 10 of 9054 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\npvo_fig(data_rec, data_pre, fit_ltp)\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nproj_fig(data_rec, data_pre, data_old, fit_ltp, lab)\n\n\n\n\n\nPredicted trajectories."
  },
  {
    "objectID": "40_sla.html#stp",
    "href": "40_sla.html#stp",
    "title": "SLA",
    "section": "STP",
    "text": "STP\n\n\nCode\nstp &lt;- cmdstan_model(\"models/stp.stan\")\npath &lt;- file.path(\"chains\", var, \"stp\")\nunlink(path, recursive = TRUE)\ndir.create(path)\nfit_stp &lt;- stp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = path\n)\n\n\n\n\nCode\npath &lt;- file.path(\"chains\", var, \"stp\")\nfit_stp &lt;- as_cmdstan_fit(list.files(path, full.names = TRUE))\nfit_stp\n\n\n   variable    mean  median     sd    mad      q5     q95 rhat ess_bulk\n lp__       3645.70 3687.17 166.90 180.34 3382.56 3864.14 2.39        4\n mu_dist       0.99    0.99   0.02   0.02    0.96    1.02 1.45        7\n sigma_dist    0.08    0.08   0.01   0.01    0.06    0.10 1.12       31\n dist_p[1]     0.94    0.94   0.04   0.04    0.89    1.00 1.22       12\n dist_p[2]     1.00    1.01   0.04   0.03    0.94    1.07 1.06      536\n dist_p[3]     0.97    0.98   0.03   0.03    0.93    1.02 1.04       96\n dist_p[4]     0.97    0.97   0.04   0.04    0.92    1.03 1.22       13\n dist_p[5]     1.05    1.05   0.04   0.04    0.99    1.10 1.11       25\n dist_p[6]     1.13    1.13   0.04   0.03    1.07    1.20 1.18      180\n dist_p[7]     1.06    1.06   0.04   0.04    1.01    1.12 1.16       17\n ess_tail\n       22\n       34\n       47\n       61\n     1430\n     1660\n       48\n     1720\n       51\n      430\n\n # showing 10 of 10026 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\npvo_fig(data_rec, data_pre, fit_stp)\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nproj_fig(data_rec, data_pre, data_old, fit_stp, lab)\n\n\n\n\n\nPredicted trajectories."
  },
  {
    "objectID": "40_sla.html#comparison",
    "href": "40_sla.html#comparison",
    "title": "SLA",
    "section": "Comparison",
    "text": "Comparison\n\n\nCode\ncomp_lambda_fig(data_rec, fit_ltp, fit_stp)\n\n\n\n\n\nlambda comparison across models."
  },
  {
    "objectID": "41_n.html#data",
    "href": "41_n.html#data",
    "title": "N",
    "section": "Data",
    "text": "Data\n\n\nCode\nvar &lt;- \"N_cwm_ba\"\nif (!exists(file.path(\"chains\", var))) {\n  dir.create(file.path(\"chains\", var))\n}\nlab &lt;- expression(\"N [\" ~ mg ~ g^{\n  -1\n} ~ \"]\")\ndata_rec &lt;- read_tsv(\"data/derived_data/data_rec.tsv\") %&gt;%\n  filter(variable == var)\ndata_pre &lt;- read_tsv(\"data/derived_data/data_pre.tsv\") %&gt;%\n  filter(variable == var)\ndata_old &lt;- read_tsv(\"data/derived_data/data_old.tsv\") %&gt;%\n  filter(variable == var)\nmdata &lt;- prep_mdata(\n  data_rec, data_pre, data_old,\n  dist_bounds = c(0.1, 1.5),\n  delta_bounds = c(0, 2),\n  mu_thetaInf_bounds = c(10, 50),\n  thetaInf_s_bounds = c(10, 50)\n)\n\n\n\n\nCode\nbind_rows(data_rec, data_pre, data_old) %&gt;% \n  ggplot(aes(rel_year, y, group = paste(site, plot), col = treatment)) +\n  geom_line() +\n  facet_wrap(~site) +\n  theme_bw() +\n  xlab(\"\") +\n  ylab(lab) +\n  theme(legend.position = \"bottom\") +\n  scale_color_discrete(\"\")\n\n\n\n\n\nModelled trajectories."
  },
  {
    "objectID": "41_n.html#ltp",
    "href": "41_n.html#ltp",
    "title": "N",
    "section": "LTP",
    "text": "LTP\n\n\nCode\nltp &lt;- cmdstan_model(\"models/ltp.stan\")\npath &lt;- file.path(\"chains\", var, \"ltp\")\nunlink(path, recursive = TRUE)\ndir.create(path)\nfit_ltp &lt;- ltp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = path\n)\n\n\n\n\nCode\npath &lt;- file.path(\"chains\", var, \"ltp\")\nfit_ltp &lt;- as_cmdstan_fit(list.files(path, full.names = TRUE))\nfit_ltp\n\n\n   variable    mean  median    sd   mad      q5     q95 rhat ess_bulk ess_tail\n lp__       4585.59 4583.52 27.14 26.85 4544.37 4633.61 1.04      106      236\n mu_dist       0.99    0.99  0.01  0.01    0.97    1.00 1.00     2012     2344\n sigma_dist    0.05    0.05  0.01  0.01    0.04    0.06 1.00     3362     2707\n dist_p[1]     0.98    0.98  0.02  0.02    0.95    1.01 1.00     1492     2376\n dist_p[2]     1.03    1.03  0.02  0.02    1.00    1.06 1.00     1613     2043\n dist_p[3]     0.97    0.97  0.02  0.02    0.94    1.00 1.00     1671     2137\n dist_p[4]     0.95    0.95  0.02  0.02    0.92    0.98 1.00     1737     2688\n dist_p[5]     1.04    1.05  0.02  0.02    1.01    1.08 1.00     1785     2480\n dist_p[6]     0.97    0.97  0.02  0.02    0.94    0.99 1.00     1708     2337\n dist_p[7]     0.95    0.95  0.02  0.02    0.92    0.98 1.00     1739     2787\n\n # showing 10 of 9054 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\npvo_fig(data_rec, data_pre, fit_ltp)\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nproj_fig(data_rec, data_pre, data_old, fit_ltp, lab)\n\n\n\n\n\nPredicted trajectories."
  },
  {
    "objectID": "41_n.html#stp",
    "href": "41_n.html#stp",
    "title": "N",
    "section": "STP",
    "text": "STP\n\n\nCode\nstp &lt;- cmdstan_model(\"models/stp.stan\")\npath &lt;- file.path(\"chains\", var, \"stp\")\nunlink(path, recursive = TRUE)\ndir.create(path)\nfit_stp &lt;- stp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = path\n)\n\n\n\n\nCode\npath &lt;- file.path(\"chains\", var, \"stp\")\nfit_stp &lt;- as_cmdstan_fit(list.files(path, full.names = TRUE))\nfit_stp\n\n\n   variable    mean  median     sd    mad      q5     q95 rhat ess_bulk\n lp__       4550.39 4574.74 128.16 161.21 4359.34 4744.60 2.37        4\n mu_dist       0.99    0.99   0.02   0.02    0.96    1.01 1.71        6\n sigma_dist    0.05    0.05   0.01   0.01    0.04    0.06 1.03       86\n dist_p[1]     0.98    0.98   0.02   0.02    0.95    1.02 1.08       32\n dist_p[2]     1.03    1.03   0.02   0.02    1.00    1.07 1.06       43\n dist_p[3]     0.97    0.97   0.02   0.02    0.94    1.00 1.07       39\n dist_p[4]     0.95    0.95   0.02   0.02    0.92    0.99 1.05       54\n dist_p[5]     1.05    1.05   0.02   0.02    1.01    1.09 1.06       49\n dist_p[6]     0.97    0.97   0.02   0.02    0.94    1.00 1.05       54\n dist_p[7]     0.95    0.95   0.02   0.02    0.92    0.99 1.05       58\n ess_tail\n       27\n       29\n     2324\n      947\n     1118\n      273\n     1463\n      600\n      612\n      687\n\n # showing 10 of 10026 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\npvo_fig(data_rec, data_pre, fit_stp)\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nproj_fig(data_rec, data_pre, data_old, fit_stp, lab)\n\n\n\n\n\nPredicted trajectories."
  },
  {
    "objectID": "41_n.html#comparison",
    "href": "41_n.html#comparison",
    "title": "N",
    "section": "Comparison",
    "text": "Comparison\n\n\nCode\ncomp_lambda_fig(data_rec, fit_ltp, fit_stp)\n\n\n\n\n\nlambda comparison across models."
  },
  {
    "objectID": "42_hmax.html#data",
    "href": "42_hmax.html#data",
    "title": "hmax",
    "section": "Data",
    "text": "Data\n\n\nCode\nvar &lt;- \"hmax_cwm_ba\"\nif (!exists(file.path(\"chains\", var))) {\n  dir.create(file.path(\"chains\", var))\n}\nlab &lt;- expression(\"hmax [\" ~ m ~ \"]\")\ndata_rec &lt;- read_tsv(\"data/derived_data/data_rec.tsv\") %&gt;%\n  filter(variable == var)\ndata_pre &lt;- read_tsv(\"data/derived_data/data_pre.tsv\") %&gt;%\n  filter(variable == var)\ndata_old &lt;- read_tsv(\"data/derived_data/data_old.tsv\") %&gt;%\n  filter(variable == var)\nmdata &lt;- prep_mdata(\n  data_rec, data_pre, data_old,\n  dist_bounds = c(0.1, 1.5),\n  delta_bounds = c(0, 2),\n  mu_thetaInf_bounds = c(30, 60),\n  thetaInf_s_bounds = c(30, 60)\n)\n\n\n\n\nCode\nbind_rows(data_rec, data_pre, data_old) %&gt;% \n  ggplot(aes(rel_year, y, group = paste(site, plot), col = treatment)) +\n  geom_line() +\n  facet_wrap(~site) +\n  theme_bw() +\n  xlab(\"\") +\n  ylab(lab) +\n  theme(legend.position = \"bottom\") +\n  scale_color_discrete(\"\")\n\n\n\n\n\nModelled trajectories."
  },
  {
    "objectID": "42_hmax.html#ltp",
    "href": "42_hmax.html#ltp",
    "title": "hmax",
    "section": "LTP",
    "text": "LTP\n\n\nCode\nltp &lt;- cmdstan_model(\"models/ltp.stan\")\npath &lt;- file.path(\"chains\", var, \"ltp\")\nunlink(path, recursive = TRUE)\ndir.create(path)\nfit_ltp &lt;- ltp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = path\n)\n\n\n\n\nCode\npath &lt;- file.path(\"chains\", var, \"ltp\")\nfit_ltp &lt;- as_cmdstan_fit(list.files(path, full.names = TRUE))\nfit_ltp\n\n\n   variable    mean  median    sd   mad      q5     q95 rhat ess_bulk ess_tail\n lp__       4955.18 4954.63 19.58 19.83 4923.35 4987.92 1.00      467      868\n mu_dist       0.99    0.99  0.01  0.00    0.98    1.00 1.00     2765     2702\n sigma_dist    0.03    0.03  0.01  0.00    0.02    0.04 1.00     3465     2829\n dist_p[1]     1.02    1.02  0.01  0.01    1.00    1.04 1.00     2043     2634\n dist_p[2]     1.02    1.02  0.01  0.01    1.00    1.05 1.00     2013     2388\n dist_p[3]     0.99    0.99  0.01  0.01    0.97    1.01 1.00     2274     2429\n dist_p[4]     0.96    0.96  0.01  0.01    0.94    0.98 1.00     2067     2233\n dist_p[5]     0.97    0.97  0.01  0.01    0.95    1.00 1.00     2107     2418\n dist_p[6]     1.00    1.00  0.01  0.01    0.98    1.02 1.00     1978     2140\n dist_p[7]     1.00    1.00  0.01  0.01    0.98    1.03 1.00     1758     1703\n\n # showing 10 of 9054 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\npvo_fig(data_rec, data_pre, fit_ltp)\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nproj_fig(data_rec, data_pre, data_old, fit_ltp, lab)\n\n\n\n\n\nPredicted trajectories."
  },
  {
    "objectID": "42_hmax.html#stp",
    "href": "42_hmax.html#stp",
    "title": "hmax",
    "section": "STP",
    "text": "STP\n\n\nCode\nstp &lt;- cmdstan_model(\"models/stp.stan\")\npath &lt;- file.path(\"chains\", var, \"stp\")\nunlink(path, recursive = TRUE)\ndir.create(path)\nfit_stp &lt;- stp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = path\n)\n\n\n\n\nCode\npath &lt;- file.path(\"chains\", var, \"stp\")\nfit_stp &lt;- as_cmdstan_fit(list.files(path, full.names = TRUE))\nfit_stp\n\n\n   variable    mean  median    sd   mad      q5     q95 rhat ess_bulk ess_tail\n lp__       4801.64 4818.56 72.33 58.60 4673.52 4898.65 2.10        5       30\n mu_dist       1.00    1.00  0.01  0.01    0.99    1.02 1.31        9       58\n sigma_dist    0.04    0.04  0.01  0.01    0.03    0.05 1.14       19      156\n dist_p[1]     1.03    1.03  0.02  0.02    1.00    1.06 1.03      207     2444\n dist_p[2]     1.03    1.03  0.02  0.02    1.00    1.06 1.04       99      852\n dist_p[3]     0.99    0.99  0.02  0.02    0.97    1.02 1.01     2163     2435\n dist_p[4]     0.96    0.96  0.02  0.02    0.93    0.98 1.01     2146     2147\n dist_p[5]     0.98    0.98  0.02  0.02    0.95    1.00 1.00     2098     2630\n dist_p[6]     1.01    1.01  0.02  0.02    0.98    1.04 1.03      174     1948\n dist_p[7]     1.01    1.01  0.02  0.02    0.98    1.04 1.03      121     2116\n\n # showing 10 of 10026 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\npvo_fig(data_rec, data_pre, fit_stp)\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nproj_fig(data_rec, data_pre, data_old, fit_stp, lab)\n\n\n\n\n\nPredicted trajectories."
  },
  {
    "objectID": "42_hmax.html#comparison",
    "href": "42_hmax.html#comparison",
    "title": "hmax",
    "section": "Comparison",
    "text": "Comparison\n\n\nCode\ncomp_lambda_fig(data_rec, fit_ltp, fit_stp)\n\n\n\n\n\nlambda comparison across models."
  },
  {
    "objectID": "91_stp_negative.html",
    "href": "91_stp_negative.html",
    "title": "STP negatives",
    "section": "",
    "text": "Using long term and short term processes model based on initial value \\(\\theta_0\\) we had issue with negatives values of \\(\\mu_{rec}\\) resulting in impossible log-values:\n\\[\n\\begin{align}\n\\mu_{rec} = \\theta_{0,p} + (\\theta_{\\infty,s} - \\theta_{0,p}) \\times (LTP+STP) \\\\\nLTP = 1 - e^{-\\lambda_p \\times time} \\\\\nSTP = \\delta_p \\times (\\frac{time}{\\tau_s} \\times e^{1-\\frac{time}{\\tau_s}})^2\n\\end{align}\n\\]\nNegatives values happen when the trajectory is negative and the difference of \\(\\theta\\) and the bump fall below 0, so when \\(time=\\tau\\):\n\\[\n\\begin{align}\n\\theta_{0,p} + (\\theta_{\\infty,s} - \\theta_{0,p}) \\times (1 - e^{-\\lambda_p \\times \\tau_s}+\\delta_p) \\leq 0\\\\\n\\end{align}\n\\]\nEn \\(\\lambda_p=0.5\\) et \\(\\tau_s=30\\) , \\(LTP = 1-e^{-0.5*30} \\approx 1\\), thus:\n\\[\n\\begin{align}\n\\theta_{0,p} + (\\theta_{\\infty,s} - \\theta_{0,p}) \\times (1+\\delta_p) \\leq 0\\\\\n\\theta_{\\infty,s} + (\\theta_{\\infty,s} - \\theta_{0,p}) \\times \\delta_p \\leq 0\\\\\n\\delta_p \\geq \\frac{-\\theta_{\\infty,s}}  {\\theta_{\\infty,s} - \\theta_{0,p}} ~|~ \\theta_{\\infty,s} - \\theta_{0,p} &lt; 0 \\\\\n\\delta_p \\geq \\frac{-1}  {1 - dist_p} ~|~\\theta_{0,p}=dist_p\\times\\theta_{\\infty,s} \\\\\n\\delta_p \\geq \\frac{1}  {dist_p-1}\n\\end{align}\n\\]\nWe could thus use this inequality to constrain \\(\\delta_p\\) on \\(dist_p\\) knowing that stan now accepts parameters bounds to depend on another parameter. However, this is complicated as it depends on the sign in the division above, \\(dist=1\\) is no possible, and near 1 values results in positive or negative infinite values. Thus we simply bounded \\(dist_p\\) to 1.5 for now (50% gain of attribute post-disturbance).\n\n\nCode\nmodel &lt;- function(time, dist, thetainf, lambda, tau, delta) {\n  theta0 &lt;- thetainf * dist\n  ltp &lt;- 1 - exp(-lambda * time)\n  stp &lt;- delta * (time / tau * exp(1 - time / tau))^2\n  return(theta0 + (thetainf - theta0) * (ltp + stp))\n}\ndata.frame(time = 1:50) %&gt;%\n  mutate(y = model(time,\n    dist = 2, thetainf = 20,\n    lambda = 0.5, tau = 30, delta = 0.5\n  )) %&gt;%\n  mutate(y2 = model(time,\n    dist = 2, thetainf = 20,\n    lambda = 0.5, tau = 30, delta = 2\n  )) %&gt;%\n  mutate(y3 = model(time,\n    dist = 2, thetainf = 20,\n    lambda = 0.5, tau = 30, delta = 1\n  )) %&gt;%\n  ggplot(aes(time)) +\n  geom_line(aes(y = y, col = \"dist=2, delta=.5\")) +\n  geom_line(aes(y = y2, col = \"dist=2, delta=2\")) +\n  geom_line(aes(y = y3, col = \"dist=2, delta=1\")) +\n  theme_bw()\n\n\n\n\n\nNegative STR examples with delta-dist link.\n\n\n\n\n\n\nCode\ndata.frame(dist = seq(.5, 2, length.out = 100)) %&gt;%\n  mutate(delta_max = 2 - (1 / (dist - 1))) %&gt;%\n  ggplot(aes(dist, delta_max)) +\n  geom_line() +\n  theme_bw()\n\n\n\n\n\ndelta_max with dist."
  },
  {
    "objectID": "92_model_devs.html#stp-sum",
    "href": "92_model_devs.html#stp-sum",
    "title": "Models devs",
    "section": "STP sum",
    "text": "STP sum\nmodels/stp_sum.stan\n\\[\n\\begin{align}\n\\mu_{rec} = \\theta_{0,p} + (\\theta_{\\infty,s} - \\theta_{0,p}) \\times (LTP+STP) \\\\\nLTP = 1 - e^{-\\lambda_p \\times time} \\\\\nSTP = \\delta_p \\times (\\frac{time}{\\tau_s} \\times e^{1-\\frac{time}{\\tau_s}})^2 \\\\\n\\theta_{0,p} = \\theta_{\\infty,s} \\times dist_p\n\\end{align}\n\\]"
  },
  {
    "objectID": "92_model_devs.html#stp-lognormal",
    "href": "92_model_devs.html#stp-lognormal",
    "title": "Models devs",
    "section": "STP lognormal",
    "text": "STP lognormal\nmodels/stp.stan\n\\[\n\\begin{align}\n\\mu_{rec} = \\theta_{0,p} + (\\theta_{\\infty,s} - \\theta_{0,p}) \\times (LTP+STP) \\\\\nLTP = 1 - e^{-\\lambda_p \\times time} \\\\\nSTP = \\delta_p \\times (\\frac{time}{\\tau_s} \\times e^{1-\\frac{time}{\\tau_s}})^2 \\\\\n\\theta_{0,p} = \\theta_{\\infty,s} \\times dist_p\n\\end{align}\n\\]"
  },
  {
    "objectID": "92_model_devs.html#stp-correlated",
    "href": "92_model_devs.html#stp-correlated",
    "title": "Models devs",
    "section": "STP correlated",
    "text": "STP correlated\nmodels/stp_cor.stan\nImposed variance-covariance matrix on dist_p and delta_p.\n\\[\n\\begin{align}\n\\mu_{rec} = \\theta_{0,p} + (\\theta_{\\infty,s} - \\theta_{0,p}) \\times (LTP+STP) \\\\\nLTP = 1 - e^{-\\lambda_p \\times time} \\\\\nSTP = \\delta_p \\times (\\frac{time}{\\tau_s} \\times e^{1-\\frac{time}{\\tau_s}})^2 \\\\\n\\theta_{0,p} = \\theta_{\\infty,s} \\times dist_p\n\\end{align}\n\\]"
  },
  {
    "objectID": "92_model_devs.html#parrallel",
    "href": "92_model_devs.html#parrallel",
    "title": "Models devs",
    "section": "Parrallel",
    "text": "Parrallel\ndummy_par.stan"
  },
  {
    "objectID": "93_notes.html#section",
    "href": "93_notes.html#section",
    "title": "Notes",
    "section": "24/01/24",
    "text": "24/01/24\nSections are randomly ordered.\n\nData preparation\nSLA and LA should be logged in species functional trait preparation and SLA inverted in LMA. The N fixation and dispersal still needs to be cleaned.\n\n\nModels structure\nWe must use the random effect for control plots by adding thetaInf_p for controls and pre-inventories with only a hyperdistribution on mu_thetaInf and sigma_thetaInf_p (either concatenating or with two likelihoods) and by modifying thetaInfp in the equation (l. 43 & 44 on mu_old and mu_rec).\n\n\nTrajectories\nAdd box plots for prelogging and controls, and plot longer time series from 1 to 60 years with scale transformation for time. The diversity trajectories are not that bad, but may require better data preparation rather than tweaking the model.\n\n\nModel selection\nLOO model selection fails and does not take into account parsimony with the number of parameters. However, the results show that \\(\\lambda\\) is highly correlated between STP and LTP models (e.g.Â AGB) and the choice may not be necessary or may be made post hoc.\n\n\nDisturbance intensity\n\\(dist_p\\) can represent the intensity of disturbance for attributes where it is well modelled (to be verified with data where possible) to provide information after the HDI on diversity trajectories. Sequential inference problem (uncertainty transmission?) or joint but with influence of diversity trajectory back on \\(dist_p\\). Camille proposes to use a hyperdistribution on \\(dist_p\\), informed with harvested volumes if available.\n\n\nOnline workshop\n3-4 sessions with :\n\nGeneral session on Thursday, a quick introduction to data preparation including environment and species, model development, re-introduction to the model with a quick focus on the constrained disturbance index.\nSubgroup session on Thursday, where subgroups make a first exploration of preliminary parameters for their question of interest with associated covariates.\nGeneral session on Friday where sub-groups present their results.\nOptional subgroup session on Friday if they wish.\n\nWe need to prepare for this:\n\nTrajectory attributes: agb, gini, stem, ba, hill q1 genus index, FDiv, Feve, CWM wd, lma, n, hmax.\nAutomatic rmarkdown pdf report for PIs (no pages yet): agb, gini, stem, ba, hill q1 genus index, FDiv, CWM wd, lma, hmax.\nUpdate Mithila Monday afternoon\nPrepare subgroup data and figures for Wednesday (all parameters with fifth usual quantiles, derived parameter \\(t_{95}\\), associated environmental data with description, maybe some graphs).\n\n\n\nSubgroup 3\nMuch remains to be explored, Sylvainâs offers punctual help on theoretical development in sessions with GÃ©raldine and Camille."
  }
]