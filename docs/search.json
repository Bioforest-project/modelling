[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "modelling",
    "section": "",
    "text": "Introduction\nmodelling is a sub-project of the BioForest project aimed at species related data (correct names, functional traits, phylogeny) as part of the data preparation for data preparation within the project."
  },
  {
    "objectID": "index.html#usage",
    "href": "index.html#usage",
    "title": "modelling",
    "section": "Usage",
    "text": "Usage\nAll modelling analyses rely on the quarto documents (files.qmd) that can be run with R and associated environment defined with renv."
  },
  {
    "objectID": "index.html#project",
    "href": "index.html#project",
    "title": "modelling",
    "section": "Project",
    "text": "Project\nmodelling includes:\n\nAnalyse of the data with associated documentation and figures:\n\nReproductive analyses in files.qmd\nResulting pages in docs/\nDocument structure definition in _quarto.yml\n\nData in data/ with:\n\nAll raw data in raw_data/\nAll derived data in derived_sata/\n\nStan Bayesian models in models/\nR scripts with funtions in r/\nIntermediary files in outputs/\nFigures in figures/\nR environment definition with renv in renv/ and renv/lock\nR files (.Rbuildignore , .Rdata , .Rprofile , .Rhistory, .lintr)\nGit and GitHub files (.gitignore , .github/)\nProject documentation (README.qmd , README.md , NEWS.md, LICENSE )"
  },
  {
    "objectID": "index.html#contribution",
    "href": "index.html#contribution",
    "title": "modelling",
    "section": "Contribution",
    "text": "Contribution\nYou can contribute to the project by forking the repository on github and cloning the fork to your machine using several options, including GitHub desktop GUI. Further informations on contribution are detailed in the online document: https://bioforest-project.github.io/data_preparation/98_contributing.html."
  },
  {
    "objectID": "index.html#help",
    "href": "index.html#help",
    "title": "modelling",
    "section": "Help",
    "text": "Help\nPlease preferentially create an issue on GitHub for any questions, bugs or help needed regarding modelling: https://github.com/Bioforest-project/modelling/issues . You may however reach us by mail with people from the core group (see below)."
  },
  {
    "objectID": "index.html#core-group",
    "href": "index.html#core-group",
    "title": "modelling",
    "section": "Core group",
    "text": "Core group\n\nSylvain Schmitt (sylvain.schmitt@cirad.fr)\nCamille Piponiot-Laroche (camille.piponiot-laroche@cirad.fr)\nBruno HÃ©rault (bruno.herault@cirad.fr)\n\nThe whole group consist of participants to the Bioforest project."
  },
  {
    "objectID": "11_observations.html",
    "href": "11_observations.html",
    "title": "Observations",
    "section": "",
    "text": "Data exploration.\n\n\nCode\nmetadata &lt;- read_sheet(\"https://docs.google.com/spreadsheets/d/1fq2owxMBLBwwibcdw2uQQFxnIhsMbaH4Qcj_xUwVvSQ/edit?gid=0#gid=0\", col_types = \"c\") %&gt;% # nolint\n  rename_all(tolower) %&gt;%\n  select(site, plot, treatment, year_of_harvest) %&gt;%\n  separate(year_of_harvest, \"year_of_harvest\") %&gt;%\n  mutate(year_of_harvest = as.numeric(year_of_harvest)) %&gt;%\n  rename(harvest_year = year_of_harvest) %&gt;%\n  mutate(treatment = ifelse(\n    treatment %in% c(\"control\", \"Control\", \"Natural_Forest\"),\n    \"control\", \"logged\"\n  )) %&gt;%\n  group_by(site) %&gt;%\n  mutate(harvest_year_min = min(harvest_year, na.rm = TRUE)) %&gt;%\n  mutate(harvest_year = ifelse(site == \"Paracou\", 1986, harvest_year)) %&gt;%\n  mutate(harvest_year_min = ifelse(site == \"Paracou\", 1986, harvest_year_min))\ndata &lt;- read_csv(\"data/raw_data/aggregated_data.csv\") %&gt;%\n  rename_all(tolower) %&gt;%\n  left_join(read_tsv(\"data/raw_data/environment.tsv\") %&gt;%\n              gather(env, env_value, -site, -plot)) %&gt;%\n  left_join(read_csv(\"data/raw_data/plot_area.csv\") %&gt;%\n              rename_all(tolower) %&gt;%\n              select(site, plot, plotarea) %&gt;%\n              unique()) %&gt;%\n  left_join(metadata) %&gt;%\n  filter(!(site %in% c(\"Peteco\", \"Bafog\", \"Tene\", \"Montagne_Tortue\"))) %&gt;%\n  filter(!(site == \"Kabo\" & year &lt; 1980)) %&gt;%\n  mutate(rel_year = ifelse(treatment == \"control\",\n    year - harvest_year_min,\n    year - harvest_year\n  ))\nwrite_tsv(data, \"data/derived_data/data.tsv\")\n\n\n\n\nCode\nread_tsv(\"data/derived_data/data.tsv\") %&gt;%\n  ggplot(aes(year, value, group = paste(site, plot))) +\n  geom_line() +\n  theme_bw() +\n  facet_wrap(~variable, scales = \"free_y\") +\n  theme(\n    axis.title = element_blank(),\n    strip.text = element_text(size = 6)\n  )\n\n\n\n\n\nDummy figure 1 - traj.\n\n\n\n\n\n\nCode\nread_tsv(\"data/derived_data/data.tsv\") %&gt;%\n  filter(variable == \"agb\", env == \"cwd\") %&gt;%\n  na.omit() %&gt;%\n  ggplot(aes(year, value, group = paste(site, plot), col = env_value)) +\n  geom_line() +\n  theme_bw() +\n  scale_color_viridis_c(\"Climate\\nwater\\ndeficit\\n[ mm ]\") +\n  xlab(\"\") +\n  ylab(expression(\"AGB [\" ~ Mg ~ ha^{\n    -1\n  } ~ \"]\"))\n\n\n\n\n\nDummy figure 2 - env.\n\n\n\n\n\n\nCode\nmake_fig &lt;- function(var) {\n  g &lt;- read_tsv(\"data/derived_data/data.tsv\") %&gt;%\n    filter(variable == var) %&gt;%\n    ggplot(aes(year, value, group = paste(site, plot), col = treatment)) +\n    geom_line() +\n    theme_bw() +\n    xlab(\"\") +\n    ylab(\"\") +\n    facet_wrap(~site, scales = \"free\") +\n    geom_vline(aes(xintercept = harvest_year)) +\n    theme(legend.position = \"bottom\") +\n    ggtitle(var)\n  ggsave(plot = g, filename = paste0(\"figures/obs/\", var, \".png\"))\n}\nunique(read_tsv(\"data/derived_data/data.tsv\")$variable) %&gt;%\n  lapply(make_fig)\n\n\n\n\nCode\nread_tsv(\"data/derived_data/data.tsv\") %&gt;%\n  filter(variable == \"agb_mort\") %&gt;%\n  ggplot(aes(year, log(value), group = paste(site, plot), col = treatment)) +\n  geom_line() +\n  theme_bw() +\n  xlab(\"\") +\n  ylab(expression(\"AGB [\" ~ Mg ~ ha^{\n    -1\n  } ~ \"]\")) +\n  facet_wrap(~site, scales = \"free\") +\n  geom_vline(aes(xintercept = harvest_year)) +\n  theme(legend.position = \"bottom\")\n\n\n\n\n\nDummy figure 3 - treatment."
  },
  {
    "objectID": "21_dummy_model.html#classic",
    "href": "21_dummy_model.html#classic",
    "title": "Dummy models",
    "section": "Classic",
    "text": "Classic\n\n\nCode\ndata &lt;- read_csv(\"data/raw_data/aggregated_data.csv\") %&gt;%\n  rename_all(tolower) %&gt;%\n  filter(variable == \"agb\") %&gt;%\n  mutate(site_plot = paste0(site, \"_\", plot)) %&gt;%\n  mutate(site_plot_num = as.numeric(as.factor(site_plot)))\n\n\n\n\nCode\nmdata &lt;- list(\n  N = nrow(data),\n  P = max(data$site_plot_num),\n  y = data$value,\n  year = data$year,\n  plot = data$site_plot_num\n)\nmodel &lt;- cmdstan_model(\"models/dummy.stan\")\nfit &lt;- model$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  threads_per_chain = 1,\n  save_warmup = FALSE,\n  max_treedepth = 12\n)\ndir.create(\"data/derived_data/dummy\")\nfit$save_output_files(dir = \"data/derived_data/dummy\")\n\n\n\n\nCode\nfit &lt;- as_cmdstan_fit(list.files(\"data/derived_data/dummy\", full.names = TRUE))\n\n\n\n\nCode\nrhat(fit) %&gt;%\n  mcmc_rhat()\n\n\n\n\n\nRhat\n\n\n\n\n\n\nCode\nfit$draws(c(\"alpha\", \"beta\", \"sigma\", \"sigma_a\", \"sigma_b\")) %&gt;%\n  mcmc_trace()\n\n\n\n\n\nTrace\n\n\n\n\n\n\nCode\nfit$draws(c(\"alpha\", \"beta\", \"sigma\", \"sigma_a\", \"sigma_b\")) %&gt;%\n  mcmc_pairs()\n\n\n\n\n\nPairs\n\n\n\n\n\n\nCode\nfit$summary(c(\"alpha\", \"beta\", \"sigma\", \"sigma_a\", \"sigma_b\")) %&gt;%\n  kable(caption = \"Summary\")\n\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvariable\nmean\nmedian\nsd\nmad\nq5\nq95\nrhat\ness_bulk\ness_tail\n\n\n\n\nalpha\n-34.4175916\n-4.1867950\n48.2046484\n9.1769604\n-133.1686500\n3.5867120\n2.501936\n4.849593\n11.47456\n\n\nbeta\n0.1742818\n0.1618795\n0.0246876\n0.0136688\n0.1497618\n0.2260654\n1.701448\n6.284556\n14.25356\n\n\nsigma\n49.6296399\n49.6211000\n0.9145410\n0.9287748\n48.1783400\n51.1559400\n1.003916\n2716.132701\n2441.89347\n\n\nsigma_a\n2.9157766\n2.1319800\n2.2880955\n2.0967745\n0.6475763\n7.3413580\n2.399378\n4.917238\n29.35076\n\n\nsigma_b\n0.0601926\n0.0599634\n0.0035780\n0.0035326\n0.0547951\n0.0665531\n1.014446\n232.207924\n362.45292\n\n\n\n\n\n\n\nCode\nfit$loo()\n\n\n\nComputed from 4000 by 1569 log-likelihood matrix.\n\n         Estimate   SE\nelpd_loo    763.0  9.7\np_loo        14.8  0.3\nlooic     -1525.9 19.4\n------\nMCSE of elpd_loo is 0.1.\nMCSE and ESS estimates assume MCMC draws (r_eff in [0.3, 1.6]).\n\nAll Pareto k estimates are good (k &lt; 0.7).\nSee help('pareto-k-diagnostic') for details.\n\n\n\n\nCode\nfit$draws(c(\"alpha\", \"beta\", \"sigma\", \"sigma_a\", \"sigma_b\")) %&gt;%\n  mcmc_intervals()\n\n\n\n\n\nIntervals\n\n\n\n\n\n\nCode\npreds &lt;- fit$summary(c(\"mu\"), mean) %&gt;%\n  rename(predicted = mean) %&gt;%\n  mutate(variable = gsub(\"]\", \"\", variable)) %&gt;%\n  separate(variable, c(\"X\", \"site_plot_num\"), sep = \"mu\\\\[\", convert = TRUE) %&gt;%\n  select(-X) %&gt;%\n  left_join(data) %&gt;%\n  rename(observed = value)\nrmse &lt;- sqrt(mean((preds$predicted - preds$observed)^2, na.rm = TRUE))\npreds %&gt;%\n  ggplot(aes(predicted, observed)) +\n  geom_point(alpha = 0.25) +\n  geom_abline(col = \"red\", linetype = \"dashed\") +\n  ggtitle(paste(\"RMSE =\", round(rmse, 2))) +\n  theme_bw()\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\npreds %&gt;%\n  filter(site == \"Paracou\", plot == 1) %&gt;%\n  ggplot(aes(year)) +\n  geom_point(aes(y = observed)) +\n  geom_line(aes(y = predicted)) +\n  theme_bw() +\n  theme(axis.title = element_blank())\n\n\n\n\n\nPredicted trajectory"
  },
  {
    "objectID": "21_dummy_model.html#parallel",
    "href": "21_dummy_model.html#parallel",
    "title": "Dummy models",
    "section": "Parallel",
    "text": "Parallel\n\n\nCode\nmdata &lt;- list(\n  N = nrow(data),\n  P = max(data$site_plot_num),\n  y = data$value,\n  year = data$year,\n  plot = data$site_plot_num\n)\nmodel_par &lt;- cmdstan_model(\"models/dummy.stan\",\n  cpp_options = list(stan_threads = TRUE)\n)\nfit_par &lt;- model_par$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  threads_per_chain = 5,\n  save_warmup = FALSE,\n  max_treedepth = 12\n)\ndir.create(\"data/derived_data/dummy_par\")\nfit_par$save_output_files(dir = \"data/derived_data/dummy_par\")\n\n\n\n\nCode\nfit_par &lt;- as_cmdstan_fit(list.files(\"data/derived_data/dummy_par\",\n  full.names = TRUE\n))\n\n\n\n\nCode\nlist(\n  classic = fit$time()$chains,\n  parrallel = fit_par$time()$chains\n) %&gt;%\n  bind_rows(.id = \"model\") %&gt;%\n  ggplot(aes(model, total)) +\n  geom_boxplot() +\n  theme_bw() +\n  xlab(\"Model\") +\n  ylab(\"Total time [ seconds ]\")"
  },
  {
    "objectID": "31_stem.html#data",
    "href": "31_stem.html#data",
    "title": "Stem",
    "section": "Data",
    "text": "Data\n\n\nCode\ndata &lt;- read_tsv(\"data/derived_data/data.tsv\") %&gt;%\n  filter(variable == \"nstem\") %&gt;%\n  unique() %&gt;%\n  rename(stem = value) %&gt;%\n  select(-env, -env_value, -variable) %&gt;%\n  unique() %&gt;%\n  filter(!is.infinite(harvest_year_min)) %&gt;%\n  mutate(sitenum = as.numeric(as.factor(site)))\ndata_rec &lt;- data %&gt;%\n  filter(treatment == \"logged\", rel_year &gt; 2) %&gt;%\n  mutate(plotnum = as.numeric(as.factor(paste0(site, \"_\", plot))))\ndata_old &lt;- data %&gt;% filter(treatment == \"control\")\ndata_pre &lt;- data %&gt;% filter(rel_year &lt;= 0)\nind_rec &lt;- data_rec %&gt;%\n  select(site, plot, sitenum, plotnum) %&gt;%\n  unique() %&gt;%\n  arrange(plotnum)\nmdata &lt;- list(\n  n_rec = nrow(data_rec),\n  n_old = nrow(data_old),\n  n_pre = nrow(data_pre),\n  n_site = max(data_rec$sitenum),\n  n_plot_rec = max(data_rec$plotnum),\n  stem_rec = data_rec$stem,\n  stem_old = data_old$stem,\n  stem_pre = data_pre$stem,\n  time = data_rec$rel_year - 3,\n  site_rec = data_rec$sitenum,\n  site_old = data_old$sitenum,\n  site_pre = data_pre$sitenum,\n  plot_rec = data_rec$plotnum,\n  site_plot_rec = ind_rec$sitenum\n)\n\n\n\n\nCode\nggplot(data, aes(rel_year, stem, group = paste(site, plot), col = treatment)) +\n  geom_line() +\n  facet_wrap(~site) +\n  theme_bw() +\n  xlab(\"\") +\n  ylab(expression(\"Stems [ trees\" ~ ha^{\n    -1\n  } ~ \"]\")) +\n  theme(legend.position = \"bottom\") +\n  scale_color_discrete(\"\")\n\n\n\n\n\nModelled trajectories."
  },
  {
    "objectID": "31_stem.html#ltp",
    "href": "31_stem.html#ltp",
    "title": "Stem",
    "section": "LTP",
    "text": "LTP\nLong term process only model:\n\\[\n\\begin{align}\n\\mu_{rec} = \\theta_{0,p} + (\\theta_{\\infty,s} - \\theta_{0,p}) \\times LTP \\\\\nLTP = 1 - e^{-\\lambda_p \\times time}\n\\end{align}\n\\]\n\n\nCode\nltp &lt;- cmdstan_model(\"models/ltp.stan\")\nunlink(\"data/derived_data/ltp\", recursive = TRUE)\ndir.create(\"data/derived_data/ltp\")\nfit_ltp &lt;- ltp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = \"data/derived_data/ltp\"\n)\n\n\n\n\nCode\nfit_ltp &lt;- as_cmdstan_fit(list.files(\"data/derived_data/ltp\",\n  full.names = TRUE\n))\nfit_ltp\n\n\n     variable   mean median    sd   mad     q5    q95 rhat ess_bulk ess_tail\n lp__         785.36 785.87 15.50 15.28 758.77 810.17 1.01      827     1412\n mu_theta0    326.18 325.98 13.99 13.66 303.67 349.29 1.00     4723     3133\n sigma_theta0   0.41   0.41  0.03  0.03   0.37   0.47 1.00     5662     3109\n theta0_p[1]  213.24 213.21 28.82 31.47 165.88 259.62 1.00     4424     2925\n theta0_p[2]  269.27 271.27 22.18 19.91 228.50 302.02 1.00     4105     2924\n theta0_p[3]  224.47 226.14 18.76 18.57 191.06 252.88 1.00     4608     2925\n theta0_p[4]  222.43 222.15 29.18 30.96 174.74 269.02 1.00     5357     2968\n theta0_p[5]  222.45 224.14 21.97 21.96 183.95 255.68 1.00     4929     2830\n theta0_p[6]  250.85 250.30 16.97 15.39 223.88 278.83 1.00     6271     2742\n theta0_p[7]  238.46 241.29 26.65 28.20 192.34 277.50 1.00     4932     3336\n\n # showing 10 of 3319 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\ndata_rec$preds &lt;- fit_ltp$summary(c(\"mu_rec\"), median)$median\nrmse_rec &lt;- sqrt(mean((data_rec$preds - data_rec$stem)^2, na.rm = TRUE))\ng_rec &lt;- data_rec %&gt;%\n  ggplot(aes(preds, stem)) +\n  geom_point(alpha = 0.25) +\n  geom_abline(col = \"red\", linetype = \"dashed\") +\n  ggtitle(\"Recovery\", paste(\"RMSE =\", round(rmse_rec, 2))) +\n  theme_bw() +\n  xlab(expression(\"Predicted [ trees\" ~ ha^{\n    -1\n  } ~ \"]\")) +\n  ylab(expression(\"Observed [ trees\" ~ ha^{\n    -1\n  } ~ \"]\"))\ndata_pre$preds &lt;- fit_ltp$summary(c(\"mu_pre\"), median)$median\nrmse_pre &lt;- sqrt(mean((data_pre$preds - data_pre$stem)^2, na.rm = TRUE))\ng_pre &lt;- data_pre %&gt;%\n  ggplot(aes(preds, stem, col = site)) +\n  geom_point(alpha = 0.25) +\n  geom_abline(col = \"red\", linetype = \"dashed\") +\n  ggtitle(\"Prelogging\", paste(\"RMSE =\", round(rmse_pre, 2))) +\n  theme_bw() +\n  scale_color_discrete(\"\") +\n  theme(legend.position = \"bottom\") +\n  xlab(expression(\"Predicted [ trees\" ~ ha^{\n    -1\n  } ~ \"]\")) +\n  ylab(expression(\"Observed [ trees\" ~ ha^{\n    -1\n  } ~ \"]\"))\ng_pre + g_rec\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nbind_rows(data_pre, data_rec) %&gt;%\n  ggplot(aes(rel_year, group = paste(site, plot), col = plot)) +\n  geom_point(aes(y = stem), alpha = .5) +\n  geom_line(aes(y = preds)) +\n  facet_wrap(~site, scales = \"free\") +\n  theme_bw() +\n  xlab(\"\") +\n  theme(legend.position = \"bottom\") +\n  ylab(expression(\"Stem [ trees\" ~ ha^{\n    -1\n  } ~ \"]\")) +\n  scale_color_discrete(guide = \"none\")\n\n\n\n\n\nPredicted trajectories."
  },
  {
    "objectID": "31_stem.html#stp-sum",
    "href": "31_stem.html#stp-sum",
    "title": "Stem",
    "section": "STP sum",
    "text": "STP sum\nLong term and short term processes model based on initial value \\(\\theta_0\\):\n\\[\n\\begin{align}\n\\mu_{rec} = \\theta_{0,p} + (\\theta_{\\infty,s} - \\theta_{0,p}) \\times (LTP+STP) \\\\\nLTP = 1 - e^{-\\lambda_p \\times time} \\\\\nSTP = \\delta_p \\times (\\frac{time}{\\tau_s} \\times e^{1-\\frac{time}{\\tau_s}})^2\n\\end{align}\n\\]\n\n\nCode\nstp_sum &lt;- cmdstan_model(\"models/stp_sum.stan\")\nunlink(\"data/derived_data/stp_sum\", recursive = TRUE)\ndir.create(\"data/derived_data/stp_sum\")\nfit_stp_sum &lt;- stp_sum$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = \"data/derived_data/stp_sum\"\n)\n\n\n\n\nCode\nfit_stp_sum &lt;- as_cmdstan_fit(list.files(\"data/derived_data/stp_sum\",\n  full.names = TRUE\n))\nfit_stp_sum\n\n\n     variable   mean median    sd   mad     q5    q95 rhat ess_bulk ess_tail\n lp__         682.25 696.71 59.77 73.48 589.01 762.37 1.78        4       76\n mu_theta0    324.69 324.49 14.92 14.85 300.52 349.51 1.01     1533     2188\n sigma_theta0   0.43   0.43  0.04  0.04   0.37   0.50 1.08       25      260\n theta0_p[1]  204.78 205.21 16.39 15.51 177.96 231.33 1.00     2553     1617\n theta0_p[2]  260.92 261.40 20.09 20.31 227.56 293.27 1.00     3286     2339\n theta0_p[3]  217.64 218.09 14.92 15.11 192.58 241.79 1.00     3962     2353\n theta0_p[4]  212.20 212.17 18.24 17.22 183.23 242.12 1.00     2669     1791\n theta0_p[5]  217.91 217.77 16.42 16.55 190.96 245.16 1.00     3202     2353\n theta0_p[6]  248.43 247.22 16.36 14.91 224.03 276.59 1.01     2540     1141\n theta0_p[7]  226.10 225.80 19.28 18.33 194.50 258.03 1.00     2748     1855\n\n # showing 10 of 4291 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\ndata_rec$preds &lt;- fit_stp_sum$summary(c(\"mu_rec\"), median)$median\nrmse_rec &lt;- sqrt(mean((data_rec$preds - data_rec$stem)^2, na.rm = TRUE))\ng_rec &lt;- data_rec %&gt;%\n  ggplot(aes(preds, stem)) +\n  geom_point(alpha = 0.25) +\n  geom_abline(col = \"red\", linetype = \"dashed\") +\n  ggtitle(\"Recovery\", paste(\"RMSE =\", round(rmse_rec, 2))) +\n  theme_bw() +\n  xlab(expression(\"Predicted [ trees\" ~ ha^{\n    -1\n  } ~ \"]\")) +\n  ylab(expression(\"Observed [ trees\" ~ ha^{\n    -1\n  } ~ \"]\"))\ndata_pre$preds &lt;- fit_stp_sum$summary(c(\"mu_pre\"), median)$median\nrmse_pre &lt;- sqrt(mean((data_pre$preds - data_pre$stem)^2, na.rm = TRUE))\ng_pre &lt;- data_pre %&gt;%\n  ggplot(aes(preds, stem, col = site)) +\n  geom_point(alpha = 0.25) +\n  geom_abline(col = \"red\", linetype = \"dashed\") +\n  ggtitle(\"Prelogging\", paste(\"RMSE =\", round(rmse_pre, 2))) +\n  theme_bw() +\n  scale_color_discrete(\"\") +\n  theme(legend.position = \"bottom\") +\n  xlab(expression(\"Predicted [ trees\" ~ ha^{\n    -1\n  } ~ \"]\")) +\n  ylab(expression(\"Observed [ trees\" ~ ha^{\n    -1\n  } ~ \"]\"))\ng_pre + g_rec\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nbind_rows(data_pre, data_rec) %&gt;%\n  ggplot(aes(rel_year, group = paste(site, plot), col = plot)) +\n  geom_point(aes(y = stem), alpha = .5) +\n  geom_line(aes(y = preds)) +\n  facet_wrap(~site, scales = \"free\") +\n  theme_bw() +\n  xlab(\"\") +\n  theme(legend.position = \"bottom\") +\n  ylab(expression(\"Stem [ trees\" ~ ha^{\n    -1\n  } ~ \"]\")) +\n  scale_color_discrete(guide = \"none\")\n\n\n\n\n\nPredicted trajectories."
  },
  {
    "objectID": "31_stem.html#stp-dist",
    "href": "31_stem.html#stp-dist",
    "title": "Stem",
    "section": "STP dist",
    "text": "STP dist\nLong term and short term processes model based on disturbance index \\(dist\\):\n\\[\n\\begin{align}\n\\mu_{rec} = \\theta_{0,p} + (\\theta_{\\infty,s} - \\theta_{0,p}) \\times (LTP+STP) \\\\\nLTP = 1 - e^{-\\lambda_p \\times time} \\\\\nSTP = \\delta_p \\times (\\frac{time}{\\tau_s} \\times e^{1-\\frac{time}{\\tau_s}})^2 \\\\\n\\theta_{0,p} = \\theta_{\\infty,s} \\times dist_p\n\\end{align}\n\\]\n\n\nCode\nstp &lt;- cmdstan_model(\"models/stp.stan\")\nunlink(\"data/derived_data/stp\", recursive = TRUE)\ndir.create(\"data/derived_data/stp\")\nfit_stp &lt;- stp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = \"data/derived_data/stp\"\n)\n\n\n\n\nCode\nfit_stp &lt;- as_cmdstan_fit(list.files(\"data/derived_data/stp\",\n  full.names = TRUE\n))\nfit_stp\n\n\n   variable   mean median    sd   mad     q5    q95 rhat ess_bulk ess_tail\n lp__       441.17 444.89 52.29 68.06 357.90 513.61 1.82        3      199\n mu_dist      0.88   0.88  0.03  0.03   0.83   0.93 1.04       44     1020\n sigma_dist   0.28   0.28  0.02  0.02   0.24   0.32 1.10       14      652\n dist_p[1]    0.73   0.73  0.06  0.06   0.64   0.84 1.01     2175     1379\n dist_p[2]    0.92   0.92  0.07  0.07   0.80   1.04 1.00     1850     1325\n dist_p[3]    0.77   0.77  0.06  0.06   0.68   0.87 1.01     1682     1323\n dist_p[4]    0.76   0.76  0.06  0.06   0.66   0.87 1.00     2174     1622\n dist_p[5]    0.78   0.78  0.06  0.06   0.68   0.88 1.00     1515     1259\n dist_p[6]    0.87   0.87  0.06  0.06   0.77   0.99 1.03       56      830\n dist_p[7]    0.81   0.80  0.07  0.07   0.70   0.92 1.01     1703     1625\n\n # showing 10 of 4397 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\ndata_rec$preds &lt;- fit_stp$summary(c(\"mu_rec\"), median)$median\nrmse_rec &lt;- sqrt(mean((data_rec$preds - data_rec$stem)^2, na.rm = TRUE))\ng_rec &lt;- data_rec %&gt;%\n  ggplot(aes(preds, stem)) +\n  geom_point(alpha = 0.25) +\n  geom_abline(col = \"red\", linetype = \"dashed\") +\n  ggtitle(\"Recovery\", paste(\"RMSE =\", round(rmse_rec, 2))) +\n  theme_bw() +\n  xlab(expression(\"Predicted [ trees\" ~ ha^{\n    -1\n  } ~ \"]\")) +\n  ylab(expression(\"Observed [ trees\" ~ ha^{\n    -1\n  } ~ \"]\"))\ndata_pre$preds &lt;- fit_stp$summary(c(\"mu_pre\"), median)$median\nrmse_pre &lt;- sqrt(mean((data_pre$preds - data_pre$stem)^2, na.rm = TRUE))\ng_pre &lt;- data_pre %&gt;%\n  ggplot(aes(preds, stem, col = site)) +\n  geom_point(alpha = 0.25) +\n  geom_abline(col = \"red\", linetype = \"dashed\") +\n  ggtitle(\"Prelogging\", paste(\"RMSE =\", round(rmse_pre, 2))) +\n  theme_bw() +\n  scale_color_discrete(\"\") +\n  theme(legend.position = \"bottom\") +\n  xlab(expression(\"Predicted [ trees\" ~ ha^{\n    -1\n  } ~ \"]\")) +\n  ylab(expression(\"Observed [ trees\" ~ ha^{\n    -1\n  } ~ \"]\"))\ng_pre + g_rec\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nbind_rows(data_pre, data_rec) %&gt;%\n  ggplot(aes(rel_year, group = paste(site, plot), col = plot)) +\n  geom_point(aes(y = stem), alpha = .5) +\n  geom_line(aes(y = preds)) +\n  facet_wrap(~site, scales = \"free\") +\n  theme_bw() +\n  xlab(\"\") +\n  theme(legend.position = \"bottom\") +\n  ylab(expression(\"Stem [ trees\" ~ ha^{\n    -1\n  } ~ \"]\")) +\n  scale_color_discrete(guide = \"none\")\n\n\n\n\n\nPredicted trajectories.\n\n\n\n\n\n\nCode\nfit_stp$draws(\"dist_p\") %&gt;%\n  mcmc_intervals()\n\n\n\n\n\nDisturbance parameters posteriors."
  },
  {
    "objectID": "31_stem.html#horseshoe",
    "href": "31_stem.html#horseshoe",
    "title": "Stem",
    "section": "Horseshoe",
    "text": "Horseshoe\n\nTo be developed."
  },
  {
    "objectID": "31_stem.html#comparison",
    "href": "31_stem.html#comparison",
    "title": "Stem",
    "section": "Comparison",
    "text": "Comparison\n\n\nCode\nloo_compare(\n  fit_ltp$loo(),\n  fit_stp$loo(),\n  fit_stp_norm$loo(),\n  fit_stp_norm_false$loo(),\n  fit_stp_norm_false2$loo()\n) %&gt;%\n  kable()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nelpd_diff\nse_diff\nelpd_loo\nse_elpd_loo\np_loo\nse_p_loo\nlooic\nse_looic\n\n\n\n\nmodel1\n0.00000\n0.000000\n442.8946\n6.934509\n12.96416\n0.4308176\n-885.7892\n13.86902\n\n\nmodel5\n-23.82376\n5.155572\n419.0709\n5.820989\n22.94321\n0.6520849\n-838.1417\n11.64198\n\n\nmodel4\n-25.30076\n5.334448\n417.5939\n5.804517\n22.95866\n0.6675872\n-835.1877\n11.60903\n\n\nmodel2\n-26.23735\n5.454391\n416.6573\n5.806459\n19.56450\n0.5204955\n-833.3145\n11.61292\n\n\nmodel3\n-442.89462\n6.934509\n0.0000\n0.000000\n0.00000\n0.0000000\n0.0000\n0.00000"
  },
  {
    "objectID": "31_stem.html#stp-n",
    "href": "31_stem.html#stp-n",
    "title": "Stem",
    "section": "STP n",
    "text": "STP n\n\n\nCode\nstp &lt;- cmdstan_model(\"models/stp_norm.stan\")\nunlink(\"data/derived_data/stp_norm\", recursive = TRUE)\ndir.create(\"data/derived_data/stp_norm\")\nfit_stp_norm &lt;- stp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = \"data/derived_data/stp_norm\"\n)\n\n\n\n\nCode\nfit_stp_norm &lt;- as_cmdstan_fit(list.files(\"data/derived_data/stp_norm\",\n  full.names = TRUE\n))\nfit_stp_norm\n\n\n     variable    mean  median    sd   mad      q5     q95 rhat ess_bulk\n lp__         2258.30 2256.08 29.98 30.46 2211.10 2311.48 1.50        7\n mu_theta0       5.78    5.78  0.06  0.07    5.68    5.89 1.37        8\n sigma_theta0    0.46    0.45  0.04  0.04    0.39    0.53 1.20       13\n theta0_p[1]     5.32    5.32  0.07  0.07    5.21    5.43 1.00     4761\n theta0_p[2]     5.56    5.57  0.07  0.07    5.44    5.67 1.00     4902\n theta0_p[3]     5.38    5.39  0.06  0.06    5.28    5.48 1.00     4582\n theta0_p[4]     5.35    5.36  0.07  0.07    5.23    5.47 1.00     3996\n theta0_p[5]     5.38    5.38  0.07  0.07    5.27    5.49 1.00     5070\n theta0_p[6]     5.51    5.51  0.05  0.05    5.42    5.59 1.00     4470\n theta0_p[7]     5.42    5.42  0.07  0.07    5.30    5.54 1.00     4194\n ess_tail\n       42\n       62\n      178\n     3062\n     2934\n     2857\n     2653\n     3393\n     2095\n     2416\n\n # showing 10 of 4291 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\ndata_rec$preds &lt;- exp(fit_stp_norm$summary(c(\"mu_rec\"), median)$median)\nrmse_rec &lt;- sqrt(mean((data_rec$preds - data_rec$stem)^2, na.rm = TRUE))\ng_rec &lt;- data_rec %&gt;%\n  ggplot(aes(preds, stem)) +\n  geom_point(alpha = 0.25) +\n  geom_abline(col = \"red\", linetype = \"dashed\") +\n  ggtitle(\"Recovery\", paste(\"RMSE =\", round(rmse_rec, 2))) +\n  theme_bw() +\n  xlab(expression(\"Predicted [ trees\" ~ ha^{\n    -1\n  } ~ \"]\")) +\n  ylab(expression(\"Observed [ trees\" ~ ha^{\n    -1\n  } ~ \"]\"))\ndata_pre$preds &lt;- exp(fit_stp_norm$summary(c(\"mu_pre\"), median)$median)\nrmse_pre &lt;- sqrt(mean((data_pre$preds - data_pre$stem)^2, na.rm = TRUE))\ng_pre &lt;- data_pre %&gt;%\n  ggplot(aes(preds, stem, col = site)) +\n  geom_point(alpha = 0.25) +\n  geom_abline(col = \"red\", linetype = \"dashed\") +\n  ggtitle(\"Prelogging\", paste(\"RMSE =\", round(rmse_pre, 2))) +\n  theme_bw() +\n  scale_color_discrete(\"\") +\n  theme(legend.position = \"bottom\") +\n  xlab(expression(\"Predicted [ trees\" ~ ha^{\n    -1\n  } ~ \"]\")) +\n  ylab(expression(\"Observed [ trees\" ~ ha^{\n    -1\n  } ~ \"]\"))\ng_pre + g_rec\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nbind_rows(data_pre, data_rec) %&gt;%\n  ggplot(aes(rel_year, group = paste(site, plot), col = plot)) +\n  geom_point(aes(y = stem), alpha = .5) +\n  geom_line(aes(y = preds)) +\n  facet_wrap(~site, scales = \"free\") +\n  theme_bw() +\n  xlab(\"\") +\n  theme(legend.position = \"bottom\") +\n  ylab(expression(\"Stem [ trees\" ~ ha^{\n    -1\n  } ~ \"]\")) +\n  scale_color_discrete(guide = \"none\")\n\n\n\n\n\nPredicted trajectories.\n\n\n\n\n\n\nCode\nt &lt;- fit_stp_norm$summary(\n  c(\n    \"mu_theta0\", \"sigma_theta0\",\n    \"mu_lambda\", \"sigma_lambda\", \"lambda_p\",\n    \"mu_thetaInf\", \"sigma_thetaInf\", \"thetaInf_s\",\n    \"mu_delta\", \"delta_p\", \"sigma_delta\",\n    \"mu_tau\", \"tau_s\", \"sigma_tau\",\n    \"sigma_old\", \"sigma_pre\", \"sigma_rec\"\n  ),\n  \"rhat\"\n) %&gt;%\n  filter(rhat &gt; 1.2)\nt$variable\n\n\n [1] \"mu_theta0\"      \"lambda_p[11]\"   \"lambda_p[12]\"   \"lambda_p[14]\"  \n [5] \"lambda_p[17]\"   \"lambda_p[18]\"   \"lambda_p[20]\"   \"lambda_p[21]\"  \n [9] \"lambda_p[22]\"   \"lambda_p[23]\"   \"lambda_p[24]\"   \"lambda_p[39]\"  \n[13] \"lambda_p[40]\"   \"lambda_p[41]\"   \"lambda_p[42]\"   \"lambda_p[44]\"  \n[17] \"lambda_p[45]\"   \"lambda_p[70]\"   \"lambda_p[97]\"   \"lambda_p[98]\"  \n[21] \"lambda_p[99]\"   \"thetaInf_s[5]\"  \"thetaInf_s[10]\" \"mu_delta\"      \n[25] \"delta_p[10]\"    \"delta_p[11]\"    \"delta_p[12]\"    \"delta_p[14]\"   \n[29] \"delta_p[17]\"    \"delta_p[18]\"    \"delta_p[20]\"    \"delta_p[21]\"   \n[33] \"delta_p[22]\"    \"delta_p[23]\"    \"delta_p[24]\"    \"delta_p[40]\"   \n[37] \"delta_p[42]\"    \"delta_p[70]\"    \"delta_p[98]\"    \"delta_p[99]\"   \n[41] \"tau_s[2]\"       \"tau_s[7]\"       \"sigma_old\"      \"sigma_pre\"     \n\n\n\n\nCode\nfit_stp_norm$draws(t$variable[grepl(\"lambda\", t$variable)]) %&gt;%\n  mcmc_trace()\n\n\n\n\n\n\n\nCode\nfit_stp_norm$draws(t$variable[grepl(\"delta_p\", t$variable)]) %&gt;%\n  mcmc_trace()\n\n\n\n\n\n\n\nCode\nfit_stp_norm$draws(t$variable[!(grepl(\"lambda\", t$variable) |\n                                  grepl(\"delta_p\", t$variable))]) %&gt;%\n  mcmc_trace()"
  },
  {
    "objectID": "31_stem.html#negatives",
    "href": "31_stem.html#negatives",
    "title": "Stem",
    "section": "Negatives",
    "text": "Negatives\nNegatives values happen when the trajectory is negative and the difference of \\(\\theta\\) and the bump fall below 0, so when \\(time=\\tau\\):\n\\[\n\\begin{align}\n\\theta_{0,p} + (\\theta_{\\infty,s} - \\theta_{0,p}) \\times (1 - e^{-\\lambda_p \\times \\tau_s}+\\delta_p) \\leq 0\\\\\n\\end{align}\n\\]\nEn \\(\\lambda_p=0.5\\) et \\(\\tau_s=30\\) , LTP = 1-exp(-0.5*30) ~= 1\n\\[\n\\begin{align}\n\\theta_{0,p} + (\\theta_{\\infty,s} - \\theta_{0,p}) \\times (1+\\delta_p) \\leq 0\\\\\n\\theta_{\\infty,s} + (\\theta_{\\infty,s} - \\theta_{0,p}) \\times \\delta_p \\leq 0\\\\\n  \\delta_p \\geq \\frac{-\\theta_{\\infty,s}}  {\\theta_{\\infty,s} - \\theta_{0,p}} ~|~ \\theta_{\\infty,s} - \\theta_{0,p} &lt; 0\n\\end{align}\n\\]\n\\[\n\\begin{align}\n\\delta_p \\geq \\frac{-1}  {1 - dist} ~|~\\theta_{0,p}=dist\\times\\theta_{\\infty,s} \\\\\n\\delta_p \\geq \\frac{1}  {dist-1}\n\\end{align}\n\\]\n\\[\n\\begin{align}\n\\delta_p = \\delta_{p,0} - \\frac{1}  {dist-1}\n\\end{align}\n\\]\n\n\nCode\nmodel &lt;- function(time, dist, thetaInf, lambda, tau, delta){\n  theta0 = thetaInf*dist\n  ltp = 1 - exp(-lambda*time)\n  stp = delta*(time/tau*exp(1-time/tau))^2\n  return(theta0 + (thetaInf - theta0)*(ltp+stp))\n}\ndata.frame(time = 1:50) %&gt;% \n  mutate(y = model(time,dist=2, thetaInf=20, lambda=0.5, tau=30, delta=0.5)) %&gt;% \n  mutate(y2 = model(time,dist=2, thetaInf=20, lambda=0.5, tau=30, delta=2)) %&gt;% \n  mutate(y3 = model(time,dist=2, thetaInf=20, lambda=0.5, tau=30, delta=1)) %&gt;% \n  ggplot(aes(time)) +\n  geom_line(aes(y = y, col = \"dist=2, delta=.5\")) +\n  geom_line(aes(y = y2, col = \"delta=2, dist=2\")) +\n  geom_line(aes(y = y3, col = \"delta=1, dist=2\")) +\n  theme_bw()\n\n\n\n\n\n\n\nCode\nfit_stp$draws(c(\"delta_p[12]\", \"dist_p[12]\")) %&gt;% \n  mcmc_pairs()\n\n\n\n\n\n\n\nCode\nfit_stp$draws(c(\"tau_s[2]\", \"thetaInf_s[2]\")) %&gt;% \n  mcmc_pairs()\n\n\n\n\n\n\n\nCode\nfit_stp$draws(c(\"delta_p[12]\", \"dist_p[12]\", \"lambda_p[12]\")) %&gt;% \n  mcmc_pairs()"
  },
  {
    "objectID": "31_stem.html#stp-cor",
    "href": "31_stem.html#stp-cor",
    "title": "Stem",
    "section": "STP cor",
    "text": "STP cor\n\n\nCode\nstp &lt;- cmdstan_model(\"models/stp_cor.stan\")\nunlink(\"data/derived_data/stp_cor\", recursive = TRUE)\ndir.create(\"data/derived_data/stp_cor\")\nfit_stp_norm &lt;- stp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = \"data/derived_data/stp_cor\"\n)"
  },
  {
    "objectID": "31_stem.html#stp",
    "href": "31_stem.html#stp",
    "title": "Stem",
    "section": "STP",
    "text": "STP\nLong term and short term processes model based on disturbance index \\(dist\\):\n\\[\n\\begin{align}\n\\mu_{rec} = \\theta_{0,p} + (\\theta_{\\infty,s} - \\theta_{0,p}) \\times (LTP+STP) \\\\\nLTP = 1 - e^{-\\lambda_p \\times time} \\\\\nSTP = \\delta_p \\times (\\frac{time}{\\tau_s} \\times e^{1-\\frac{time}{\\tau_s}})^2 \\\\\n\\theta_{0,p} = \\theta_{\\infty,s} \\times dist_p\n\\end{align}\n\\]\n\n\nCode\nstp &lt;- cmdstan_model(\"models/stp.stan\")\nunlink(\"data/derived_data/stp\", recursive = TRUE)\ndir.create(\"data/derived_data/stp\")\nfit_stp &lt;- stp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = \"data/derived_data/stp\"\n)\n\n\n\n\nCode\nfit_stp &lt;- as_cmdstan_fit(list.files(\"data/derived_data/stp\",\n  full.names = TRUE\n))\nfit_stp\n\n\n   variable   mean median    sd   mad     q5    q95 rhat ess_bulk ess_tail\n lp__       448.89 443.61 82.81 68.08 299.22 580.14 2.68        4       12\n mu_dist      0.86   0.86  0.03  0.03   0.81   0.91 1.22       12       33\n sigma_dist   0.26   0.25  0.02  0.02   0.22   0.29 1.01     2200     2865\n dist_p[1]    0.74   0.74  0.06  0.06   0.64   0.84 1.01     2344     2265\n dist_p[2]    0.92   0.92  0.08  0.08   0.80   1.05 1.00     2397     2312\n dist_p[3]    0.78   0.78  0.06  0.06   0.68   0.88 1.01     2658     2560\n dist_p[4]    0.76   0.76  0.07  0.06   0.66   0.88 1.00     3239     2757\n dist_p[5]    0.78   0.78  0.06  0.06   0.68   0.88 1.00     2357     2633\n dist_p[6]    0.88   0.87  0.07  0.06   0.78   0.99 1.01     1867     1720\n dist_p[7]    0.81   0.81  0.07  0.07   0.70   0.93 1.01     2906     2510\n\n # showing 10 of 4397 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\ndata_rec$preds &lt;- fit_stp$summary(c(\"mu_rec\"), median)$median\nrmse_rec &lt;- sqrt(mean((data_rec$preds - data_rec$stem)^2, na.rm = TRUE))\ng_rec &lt;- data_rec %&gt;%\n  ggplot(aes(preds, stem)) +\n  geom_point(alpha = 0.25) +\n  geom_abline(col = \"red\", linetype = \"dashed\") +\n  ggtitle(\"Recovery\", paste(\"RMSE =\", round(rmse_rec, 2))) +\n  theme_bw() +\n  xlab(expression(\"Predicted [ trees\" ~ ha^{\n    -1\n  } ~ \"]\")) +\n  ylab(expression(\"Observed [ trees\" ~ ha^{\n    -1\n  } ~ \"]\"))\ndata_pre$preds &lt;- fit_stp$summary(c(\"mu_pre\"), median)$median\nrmse_pre &lt;- sqrt(mean((data_pre$preds - data_pre$stem)^2, na.rm = TRUE))\ng_pre &lt;- data_pre %&gt;%\n  ggplot(aes(preds, stem, col = site)) +\n  geom_point(alpha = 0.25) +\n  geom_abline(col = \"red\", linetype = \"dashed\") +\n  ggtitle(\"Prelogging\", paste(\"RMSE =\", round(rmse_pre, 2))) +\n  theme_bw() +\n  scale_color_discrete(\"\") +\n  theme(legend.position = \"bottom\") +\n  xlab(expression(\"Predicted [ trees\" ~ ha^{\n    -1\n  } ~ \"]\")) +\n  ylab(expression(\"Observed [ trees\" ~ ha^{\n    -1\n  } ~ \"]\"))\ng_pre + g_rec\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nbind_rows(data_pre, data_rec) %&gt;%\n  ggplot(aes(rel_year, group = paste(site, plot), col = plot)) +\n  geom_point(aes(y = stem), alpha = .5) +\n  geom_line(aes(y = preds)) +\n  facet_wrap(~site, scales = \"free\") +\n  theme_bw() +\n  xlab(\"\") +\n  theme(legend.position = \"bottom\") +\n  ylab(expression(\"Stem [ trees\" ~ ha^{\n    -1\n  } ~ \"]\")) +\n  scale_color_discrete(guide = \"none\")\n\n\n\n\n\nPredicted trajectories.\n\n\n\n\n\n\nCode\nfit_stp$draws(\"dist_p\") %&gt;%\n  mcmc_intervals()\n\n\n\n\n\nDisturbance parameters posteriors.\n\n\n\n\n\n\nCode\nt &lt;- fit_stp$summary(\n  c(\n    \"mu_dist\", \"dist_p\", \"sigma_dist\",\n    \"mu_lambda\", \"sigma_lambda\", \"lambda_p\",\n    \"mu_thetaInf\", \"sigma_thetaInf\", \"thetaInf_s\",\n    \"mu_delta\", \"delta_p\", \"sigma_delta\",\n    \"mu_tau\", \"tau_s\", \"sigma_tau\",\n    \"sigma_old\", \"sigma_pre\", \"sigma_rec\"\n  ),\n  \"rhat\"\n) %&gt;%\n  filter(rhat &gt; 1.2)\nt$variable\n\n\n [1] \"mu_dist\"        \"dist_p[10]\"     \"dist_p[12]\"     \"dist_p[13]\"    \n [5] \"dist_p[18]\"     \"dist_p[20]\"     \"dist_p[21]\"     \"dist_p[23]\"    \n [9] \"dist_p[24]\"     \"dist_p[40]\"     \"dist_p[70]\"     \"dist_p[91]\"    \n[13] \"dist_p[92]\"     \"dist_p[93]\"     \"dist_p[94]\"     \"dist_p[95]\"    \n[17] \"dist_p[96]\"     \"dist_p[97]\"     \"dist_p[98]\"     \"dist_p[99]\"    \n[21] \"dist_p[100]\"    \"dist_p[101]\"    \"dist_p[102]\"    \"mu_lambda\"     \n[25] \"sigma_lambda\"   \"lambda_p[12]\"   \"lambda_p[13]\"   \"lambda_p[18]\"  \n[29] \"lambda_p[20]\"   \"lambda_p[21]\"   \"lambda_p[23]\"   \"lambda_p[24]\"  \n[33] \"lambda_p[40]\"   \"lambda_p[70]\"   \"lambda_p[93]\"   \"lambda_p[96]\"  \n[37] \"lambda_p[97]\"   \"lambda_p[98]\"   \"lambda_p[100]\"  \"thetaInf_s[2]\" \n[41] \"thetaInf_s[3]\"  \"thetaInf_s[9]\"  \"thetaInf_s[10]\" \"mu_delta\"      \n[45] \"delta_p[10]\"    \"delta_p[12]\"    \"delta_p[13]\"    \"delta_p[18]\"   \n[49] \"delta_p[20]\"    \"delta_p[21]\"    \"delta_p[23]\"    \"delta_p[24]\"   \n[53] \"delta_p[40]\"    \"delta_p[91]\"    \"delta_p[96]\"    \"delta_p[97]\"   \n[57] \"delta_p[98]\"    \"delta_p[100]\"   \"delta_p[102]\"   \"sigma_delta\"   \n[61] \"tau_s[2]\"       \"tau_s[7]\"       \"tau_s[9]\"       \"sigma_old\"     \n[65] \"sigma_rec\"     \n\n\n\n\nCode\nfit_stp$draws(t$variable[grepl(\"dist_p\", t$variable)]) %&gt;%\n  mcmc_trace()\n\n\n\n\n\ndist traces.\n\n\n\n\n\n\nCode\nfit_stp$draws(t$variable[grepl(\"lambda_p\", t$variable)]) %&gt;%\n  mcmc_trace()\n\n\n\n\n\nlambda traces.\n\n\n\n\n\n\nCode\nfit_stp$draws(t$variable[grepl(\"delta_p\", t$variable)]) %&gt;%\n  mcmc_trace()\n\n\n\n\n\ndelta traces.\n\n\n\n\n\n\nCode\nfit_stp$draws(t$variable[!(grepl(\"lambda\", t$variable) |\n                             grepl(\"dist_p\", t$variable) |\n                             grepl(\"delta_p\", t$variable))]) %&gt;%\n  mcmc_trace()\n\n\n\n\n\nother traces."
  },
  {
    "objectID": "31_stem.html#stp-normal",
    "href": "31_stem.html#stp-normal",
    "title": "Stem",
    "section": "STP normal",
    "text": "STP normal\n\n\nCode\nstp_norm &lt;- cmdstan_model(\"models/stp_norm.stan\")\nunlink(\"data/derived_data/stp_norm\", recursive = TRUE)\ndir.create(\"data/derived_data/stp_norm\")\nfit_stp_norm &lt;- stp_norm$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = \"data/derived_data/stp_norm\"\n)\n\n\n\n\nCode\nfit_stp_norm &lt;- as_cmdstan_fit(list.files(\"data/derived_data/stp_norm\",\n  full.names = TRUE\n))\nfit_stp_norm\n\n\n   variable    mean  median    sd    mad      q5     q95 rhat ess_bulk ess_tail\n lp__       1793.44 1789.68 75.85 106.65 1694.14 1896.07 1.87        5       55\n mu_dist       0.85    0.84  0.04   0.04    0.79    0.91 1.53        7       58\n sigma_dist    0.26    0.26  0.02   0.02    0.22    0.29 1.02      199     2616\n dist_p[1]     0.74    0.73  0.06   0.06    0.64    0.84 1.00     3868     2170\n dist_p[2]     0.93    0.93  0.07   0.07    0.81    1.05 1.00     2931     2918\n dist_p[3]     0.78    0.78  0.06   0.06    0.69    0.88 1.00     3270     2890\n dist_p[4]     0.76    0.76  0.06   0.06    0.66    0.87 1.00     4377     2673\n dist_p[5]     0.78    0.78  0.06   0.06    0.68    0.89 1.00     3116     2471\n dist_p[6]     0.88    0.87  0.06   0.06    0.78    0.99 1.00     2928     2688\n dist_p[7]     0.81    0.81  0.07   0.07    0.70    0.93 1.00     3402     2566\n\n # showing 10 of 4397 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\ndata_rec$preds &lt;- fit_stp_norm$summary(c(\"mu_rec\"), median)$median\nrmse_rec &lt;- sqrt(mean((data_rec$preds - data_rec$stem)^2, na.rm = TRUE))\ng_rec &lt;- data_rec %&gt;%\n  ggplot(aes(preds, stem)) +\n  geom_point(alpha = 0.25) +\n  geom_abline(col = \"red\", linetype = \"dashed\") +\n  ggtitle(\"Recovery\", paste(\"RMSE =\", round(rmse_rec, 2))) +\n  theme_bw() +\n  xlab(expression(\"Predicted [ trees\" ~ ha^{\n    -1\n  } ~ \"]\")) +\n  ylab(expression(\"Observed [ trees\" ~ ha^{\n    -1\n  } ~ \"]\"))\ndata_pre$preds &lt;- fit_stp_norm$summary(c(\"mu_pre\"), median)$median\nrmse_pre &lt;- sqrt(mean((data_pre$preds - data_pre$stem)^2, na.rm = TRUE))\ng_pre &lt;- data_pre %&gt;%\n  ggplot(aes(preds, stem, col = site)) +\n  geom_point(alpha = 0.25) +\n  geom_abline(col = \"red\", linetype = \"dashed\") +\n  ggtitle(\"Prelogging\", paste(\"RMSE =\", round(rmse_pre, 2))) +\n  theme_bw() +\n  scale_color_discrete(\"\") +\n  theme(legend.position = \"bottom\") +\n  xlab(expression(\"Predicted [ trees\" ~ ha^{\n    -1\n  } ~ \"]\")) +\n  ylab(expression(\"Observed [ trees\" ~ ha^{\n    -1\n  } ~ \"]\"))\ng_pre + g_rec\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nbind_rows(data_pre, data_rec) %&gt;%\n  ggplot(aes(rel_year, group = paste(site, plot), col = plot)) +\n  geom_point(aes(y = stem), alpha = .5) +\n  geom_line(aes(y = preds)) +\n  facet_wrap(~site, scales = \"free\") +\n  theme_bw() +\n  xlab(\"\") +\n  theme(legend.position = \"bottom\") +\n  ylab(expression(\"Stem [ trees\" ~ ha^{\n    -1\n  } ~ \"]\")) +\n  scale_color_discrete(guide = \"none\")\n\n\n\n\n\nPredicted trajectories.\n\n\n\n\n\n\nCode\nt &lt;- fit_stp_norm$summary(\n  c(\n    \"mu_dist\", \"dist_p\", \"sigma_dist\",\n    \"mu_lambda\", \"sigma_lambda\", \"lambda_p\",\n    \"mu_thetaInf\", \"sigma_thetaInf\", \"thetaInf_s\",\n    \"mu_delta\", \"delta_p\", \"sigma_delta\",\n    \"mu_tau\", \"tau_s\", \"sigma_tau\",\n    \"sigma_old\", \"sigma_pre\", \"sigma_rec\"\n  ),\n  \"rhat\"\n) %&gt;%\n  filter(rhat &gt; 1.2)\nt$variable\n\n\n [1] \"mu_dist\"        \"dist_p[10]\"     \"dist_p[12]\"     \"dist_p[13]\"    \n [5] \"dist_p[15]\"     \"dist_p[21]\"     \"dist_p[23]\"     \"dist_p[40]\"    \n [9] \"dist_p[42]\"     \"dist_p[43]\"     \"dist_p[97]\"     \"dist_p[98]\"    \n[13] \"dist_p[99]\"     \"dist_p[100]\"    \"dist_p[101]\"    \"dist_p[102]\"   \n[17] \"mu_lambda\"      \"lambda_p[12]\"   \"lambda_p[13]\"   \"lambda_p[15]\"  \n[21] \"lambda_p[21]\"   \"lambda_p[23]\"   \"lambda_p[40]\"   \"lambda_p[42]\"  \n[25] \"lambda_p[97]\"   \"lambda_p[98]\"   \"lambda_p[100]\"  \"thetaInf_s[2]\" \n[29] \"thetaInf_s[3]\"  \"thetaInf_s[5]\"  \"thetaInf_s[9]\"  \"thetaInf_s[10]\"\n[33] \"mu_delta\"       \"delta_p[10]\"    \"delta_p[12]\"    \"delta_p[13]\"   \n[37] \"delta_p[15]\"    \"delta_p[21]\"    \"delta_p[23]\"    \"delta_p[40]\"   \n[41] \"delta_p[42]\"    \"delta_p[97]\"    \"delta_p[98]\"    \"delta_p[99]\"   \n[45] \"delta_p[100]\"   \"delta_p[102]\"   \"sigma_delta\"    \"tau_s[10]\"     \n[49] \"sigma_old\"      \"sigma_rec\"     \n\n\n\n\nCode\nfit_stp_norm$draws(t$variable[grepl(\"dist_p\", t$variable)]) %&gt;%\n  mcmc_trace()\n\n\n\n\n\ndist traces.\n\n\n\n\n\n\nCode\nfit_stp_norm$draws(t$variable[grepl(\"lambda_p\", t$variable)]) %&gt;%\n  mcmc_trace()\n\n\n\n\n\nlambda traces.\n\n\n\n\n\n\nCode\nfit_stp_norm$draws(t$variable[grepl(\"delta_p\", t$variable)]) %&gt;%\n  mcmc_trace()\n\n\n\n\n\ndelta traces.\n\n\n\n\n\n\nCode\nfit_stp_norm$draws(t$variable[!(grepl(\"lambda\", t$variable) |\n                                  grepl(\"dist_p\", t$variable) |\n                                  grepl(\"delta_p\", t$variable))]) %&gt;%\n  mcmc_trace()\n\n\n\n\n\nother traces."
  },
  {
    "objectID": "31_stem.html#stp-normal-false",
    "href": "31_stem.html#stp-normal-false",
    "title": "Stem",
    "section": "STP normal false",
    "text": "STP normal false\n\n\nCode\nstp_norm_false &lt;- cmdstan_model(\"models/stp_norm_false.stan\")\nunlink(\"data/derived_data/stp_norm_false\", recursive = TRUE)\ndir.create(\"data/derived_data/stp_norm_false\")\nfit_stp_norm_false &lt;- stp_norm_false$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = \"data/derived_data/stp_norm_false\"\n)\n\n\n\n\nCode\nfit_stp_norm_false &lt;- as_cmdstan_fit(list.files(\"data/derived_data/stp_norm_false\", full.names = TRUE)) #nolint\nfit_stp_norm_false\n\n\n   variable    mean  median    sd    mad      q5     q95 rhat ess_bulk ess_tail\n lp__       2097.50 2068.32 95.72 109.25 1982.39 2248.01 2.16        5       27\n mu_dist       0.97    0.97  0.01   0.01    0.95    0.99 1.54        7       27\n sigma_dist    0.06    0.06  0.01   0.01    0.05    0.07 1.14       19      235\n dist_p[1]     0.94    0.94  0.01   0.01    0.92    0.97 1.00     2787     2257\n dist_p[2]     0.99    0.99  0.01   0.01    0.96    1.01 1.00     2291     2752\n dist_p[3]     0.95    0.96  0.01   0.01    0.93    0.98 1.00     2272     2473\n dist_p[4]     0.95    0.95  0.01   0.01    0.93    0.97 1.00     2562     2673\n dist_p[5]     0.95    0.95  0.01   0.01    0.93    0.98 1.00     2028     2832\n dist_p[6]     0.98    0.98  0.01   0.01    0.96    1.00 1.00     1547     1665\n dist_p[7]     0.96    0.96  0.01   0.01    0.94    0.98 1.00     3104     3079\n\n # showing 10 of 4397 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\ndata_rec$preds &lt;- exp(fit_stp_norm_false$summary(c(\"mu_rec\"), median)$median)\nrmse_rec &lt;- sqrt(mean((data_rec$preds - data_rec$stem)^2, na.rm = TRUE))\ng_rec &lt;- data_rec %&gt;%\n  ggplot(aes(preds, stem)) +\n  geom_point(alpha = 0.25) +\n  geom_abline(col = \"red\", linetype = \"dashed\") +\n  ggtitle(\"Recovery\", paste(\"RMSE =\", round(rmse_rec, 2))) +\n  theme_bw() +\n  xlab(expression(\"Predicted [ trees\" ~ ha^{\n    -1\n  } ~ \"]\")) +\n  ylab(expression(\"Observed [ trees\" ~ ha^{\n    -1\n  } ~ \"]\"))\ndata_pre$preds &lt;- exp(fit_stp_norm_false$summary(c(\"mu_pre\"), median)$median)\nrmse_pre &lt;- sqrt(mean((data_pre$preds - data_pre$stem)^2, na.rm = TRUE))\ng_pre &lt;- data_pre %&gt;%\n  ggplot(aes(preds, stem, col = site)) +\n  geom_point(alpha = 0.25) +\n  geom_abline(col = \"red\", linetype = \"dashed\") +\n  ggtitle(\"Prelogging\", paste(\"RMSE =\", round(rmse_pre, 2))) +\n  theme_bw() +\n  scale_color_discrete(\"\") +\n  theme(legend.position = \"bottom\") +\n  xlab(expression(\"Predicted [ trees\" ~ ha^{\n    -1\n  } ~ \"]\")) +\n  ylab(expression(\"Observed [ trees\" ~ ha^{\n    -1\n  } ~ \"]\"))\ng_pre + g_rec\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nbind_rows(data_pre, data_rec) %&gt;%\n  ggplot(aes(rel_year, group = paste(site, plot), col = plot)) +\n  geom_point(aes(y = stem), alpha = .5) +\n  geom_line(aes(y = preds)) +\n  facet_wrap(~site, scales = \"free\") +\n  theme_bw() +\n  xlab(\"\") +\n  theme(legend.position = \"bottom\") +\n  ylab(expression(\"Stem [ trees\" ~ ha^{\n    -1\n  } ~ \"]\")) +\n  scale_color_discrete(guide = \"none\")\n\n\n\n\n\nPredicted trajectories."
  },
  {
    "objectID": "31_stem.html#stp-normal-false-2",
    "href": "31_stem.html#stp-normal-false-2",
    "title": "Stem",
    "section": "STP normal false 2",
    "text": "STP normal false 2\n\nLa belle trajectoire dâhier Ã©tait pour Ulu muda Ã©tait un coup de bol, cf rÃ©plicat ici.\n\n\n\nCode\nstp_norm_false2 &lt;- cmdstan_model(\"models/stp_norm_false2.stan\")\nunlink(\"data/derived_data/stp_norm_false2\", recursive = TRUE)\ndir.create(\"data/derived_data/stp_norm_false2\")\nfit_stp_norm_false2 &lt;- stp_norm_false$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = \"data/derived_data/stp_norm_false2\"\n)\n\n\n\n\nCode\nfit_stp_norm_false2 &lt;- as_cmdstan_fit(list.files(\"data/derived_data/stp_norm_false2\", full.names = TRUE)) #nolint\nfit_stp_norm_false2\n\n\n   variable    mean  median    sd    mad      q5     q95 rhat ess_bulk ess_tail\n lp__       2110.65 2106.57 88.14 119.90 1986.32 2236.32 2.64        4       30\n mu_dist       0.97    0.96  0.01   0.01    0.95    0.98 1.59        6       31\n sigma_dist    0.06    0.06  0.01   0.01    0.05    0.07 1.08       33      682\n dist_p[1]     0.94    0.94  0.01   0.01    0.92    0.96 1.01     3192     2319\n dist_p[2]     0.98    0.98  0.01   0.01    0.96    1.01 1.01     2141     2987\n dist_p[3]     0.95    0.95  0.01   0.01    0.93    0.97 1.02      332     2879\n dist_p[4]     0.95    0.95  0.01   0.01    0.93    0.97 1.01     3590     2798\n dist_p[5]     0.95    0.95  0.01   0.01    0.93    0.97 1.02      432     2614\n dist_p[6]     0.97    0.97  0.01   0.01    0.96    0.99 1.03      176     1994\n dist_p[7]     0.96    0.96  0.01   0.01    0.94    0.98 1.01     3537     2643\n\n # showing 10 of 4397 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\ndata_rec$preds &lt;- exp(fit_stp_norm_false2$summary(c(\"mu_rec\"), median)$median)\nrmse_rec &lt;- sqrt(mean((data_rec$preds - data_rec$stem)^2, na.rm = TRUE))\ng_rec &lt;- data_rec %&gt;%\n  ggplot(aes(preds, stem)) +\n  geom_point(alpha = 0.25) +\n  geom_abline(col = \"red\", linetype = \"dashed\") +\n  ggtitle(\"Recovery\", paste(\"RMSE =\", round(rmse_rec, 2))) +\n  theme_bw() +\n  xlab(expression(\"Predicted [ trees\" ~ ha^{\n    -1\n  } ~ \"]\")) +\n  ylab(expression(\"Observed [ trees\" ~ ha^{\n    -1\n  } ~ \"]\"))\ndata_pre$preds &lt;- exp(fit_stp_norm_false2$summary(c(\"mu_pre\"), median)$median)\nrmse_pre &lt;- sqrt(mean((data_pre$preds - data_pre$stem)^2, na.rm = TRUE))\ng_pre &lt;- data_pre %&gt;%\n  ggplot(aes(preds, stem, col = site)) +\n  geom_point(alpha = 0.25) +\n  geom_abline(col = \"red\", linetype = \"dashed\") +\n  ggtitle(\"Prelogging\", paste(\"RMSE =\", round(rmse_pre, 2))) +\n  theme_bw() +\n  scale_color_discrete(\"\") +\n  theme(legend.position = \"bottom\") +\n  xlab(expression(\"Predicted [ trees\" ~ ha^{\n    -1\n  } ~ \"]\")) +\n  ylab(expression(\"Observed [ trees\" ~ ha^{\n    -1\n  } ~ \"]\"))\ng_pre + g_rec\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nbind_rows(data_pre, data_rec) %&gt;%\n  ggplot(aes(rel_year, group = paste(site, plot), col = plot)) +\n  geom_point(aes(y = stem), alpha = .5) +\n  geom_line(aes(y = preds)) +\n  facet_wrap(~site, scales = \"free\") +\n  theme_bw() +\n  xlab(\"\") +\n  theme(legend.position = \"bottom\") +\n  ylab(expression(\"Stem [ trees\" ~ ha^{\n    -1\n  } ~ \"]\")) +\n  scale_color_discrete(guide = \"none\")\n\n\n\n\n\nPredicted trajectories."
  },
  {
    "objectID": "31_stem.html#ulu-muda",
    "href": "31_stem.html#ulu-muda",
    "title": "Stem",
    "section": "Ulu Muda",
    "text": "Ulu Muda\n\n\nCode\ninclude_graphics(\"figures/preds_stp_norm-1.png\")\n\n\n\n\n\n\n\nCode\ndata_rec$preds &lt;- fit_stp_norm$summary(c(\"mu_rec\"), median)$median\ndata_pre$preds &lt;- fit_stp_norm$summary(c(\"mu_pre\"), median)$median\ng_norm &lt;- bind_rows(data_pre, data_rec) %&gt;%\n  filter(site == \"Ulu Muda\") %&gt;%\n  ggplot(aes(rel_year, group = paste(site, plot), col = plot)) +\n  geom_point(aes(y = stem), alpha = .5) +\n  geom_line(aes(y = preds)) +\n  facet_wrap(~site, scales = \"free\") +\n  theme_bw() +\n  xlab(\"\") +\n  theme(legend.position = \"bottom\") +\n  ylab(expression(\"Stem [ trees\" ~ ha^{\n    -1\n  } ~ \"]\")) +\n  ggtitle(\"STP normal\")\ndata_rec$preds &lt;- exp(fit_stp_norm_false$summary(c(\"mu_rec\"), median)$median)\ndata_pre$preds &lt;- exp(fit_stp_norm_false$summary(c(\"mu_pre\"), median)$median)\ng_false &lt;- bind_rows(data_pre, data_rec) %&gt;%\n  filter(site == \"Ulu Muda\") %&gt;%\n  ggplot(aes(rel_year, group = paste(site, plot), col = plot)) +\n  geom_point(aes(y = stem), alpha = .5) +\n  geom_line(aes(y = preds)) +\n  facet_wrap(~site, scales = \"free\") +\n  theme_bw() +\n  xlab(\"\") +\n  theme(legend.position = \"bottom\") +\n  ylab(expression(\"Stem [ trees\" ~ ha^{\n    -1\n  } ~ \"]\")) +\n  ggtitle(\"STP normal false\")\ng_norm + g_false\n\n\n\n\n\nStarting point.\n\n\n\n\n\n\nCode\nsite &lt;- 10\nplot &lt;- 97:102\nplot &lt;- 100\npars_s &lt;- paste0(c(\"tau_s\", \"thetaInf_s\"), \"[\", site, \"]\")\npars_p &lt;- sapply(c(\"dist_p\", \"lambda_p\", \"delta_p\"),\n  function(x) paste0(x, \"[\", plot, \"]\"),\n  simplify = FALSE\n) %&gt;%\n  unlist() %&gt;%\n  unname()\npars &lt;- c(pars_s, pars_p)\ndata_rec %&gt;%\n  filter(site == \"Ulu Muda\") %&gt;%\n  select(site, plot, sitenum, plotnum) %&gt;%\n  unique() %&gt;%\n  kable()\n\n\n\n\n\nsite\nplot\nsitenum\nplotnum\n\n\n\n\nUlu Muda\n25\n10\n97\n\n\nUlu Muda\n26\n10\n98\n\n\nUlu Muda\n27\n10\n99\n\n\nUlu Muda\n28\n10\n100\n\n\nUlu Muda\n29\n10\n101\n\n\nUlu Muda\n30\n10\n102\n\n\n\n\n\n\n\nCode\nfit_stp_norm$draws(pars) %&gt;%\n  mcmc_trace() +\n  ggtitle(\"STP normal\")\n\n\n\n\n\n\n\nCode\nfit_stp_norm_false$draws(pars) %&gt;%\n  mcmc_trace() +\n  ggtitle(\"STP normal false\")\n\n\n\n\n\n\n\nCode\nfit_stp_norm$draws(pars) %&gt;%\n  mcmc_pairs()\n\n\n\n\n\n\n\nCode\nfit_stp_norm_false$draws(pars) %&gt;%\n  mcmc_pairs()\n\n\n\n\n\n\n\nCode\nbind_rows(\n  fit_stp_norm$draws(pars) %&gt;%\n    as_tibble() %&gt;%\n    gather() %&gt;%\n    separate(key, c(\"chain\", \"parameter\", \"index\", \"ind_value\"),\n             convert = TRUE) %&gt;%\n    mutate(model = \"STP normal\"),\n  fit_stp_norm_false$draws(pars) %&gt;%\n    as_tibble() %&gt;%\n    gather() %&gt;%\n    separate(key, c(\"chain\", \"parameter\", \"index\", \"ind_value\"),\n             convert = TRUE) %&gt;%\n    mutate(model = \"STP false\") %&gt;%\n    mutate(value = ifelse(parameter == \"thetaInf\", exp(value), value))\n) %&gt;%\n  ggplot(aes(value, fill = model)) +\n  geom_density(alpha = .5, col = NA) +\n  facet_wrap(~parameter, scales = \"free\") +\n  theme_bw()\n\n\n\n\n\n\n\nCode\npars &lt;- c(\n  \"mu_dist\", \"sigma_dist\", \"mu_lambda\", \"sigma_lambda\", \"mu_thetaInf\",\n  \"sigma_thetaInf\", \"sigma_old\", \"sigma_pre\", \"sigma_rec\", \"mu_delta\",\n  \"sigma_delta\", \"mu_tau\", \"sigma_tau\"\n)\nbind_rows(\n  fit_stp_norm$draws(pars) %&gt;%\n    as_tibble() %&gt;%\n    gather() %&gt;%\n    separate(key, c(\"chain\", \"parameter\"), sep = \"\\\\.\", convert = TRUE) %&gt;%\n    mutate(model = \"STP normal\"),\n  fit_stp_norm_false$draws(pars) %&gt;%\n    as_tibble() %&gt;%\n    gather() %&gt;%\n    separate(key, c(\"chain\", \"parameter\"), sep = \"\\\\.\", convert = TRUE) %&gt;%\n    mutate(model = \"STP false\") %&gt;%\n    mutate(value = ifelse(parameter == \"mu_thetaInf\", exp(value), value))\n) %&gt;%\n  ggplot(aes(value, fill = model)) +\n  geom_density(alpha = .5, col = NA) +\n  facet_wrap(~parameter, scales = \"free\") +\n  theme_bw()"
  },
  {
    "objectID": "91_stp_negative.html",
    "href": "91_stp_negative.html",
    "title": "STP negatives",
    "section": "",
    "text": "Using long term and short term processes model based on initial value \\(\\theta_0\\) we had issue with negatives values of \\(\\mu_{rec}\\) resulting in impossible log-values:\n\\[\n\\begin{align}\n\\mu_{rec} = \\theta_{0,p} + (\\theta_{\\infty,s} - \\theta_{0,p}) \\times (LTP+STP) \\\\\nLTP = 1 - e^{-\\lambda_p \\times time} \\\\\nSTP = \\delta_p \\times (\\frac{time}{\\tau_s} \\times e^{1-\\frac{time}{\\tau_s}})^2\n\\end{align}\n\\]\nNegatives values happen when the trajectory is negative and the difference of \\(\\theta\\) and the bump fall below 0, so when \\(time=\\tau\\):\n\\[\n\\begin{align}\n\\theta_{0,p} + (\\theta_{\\infty,s} - \\theta_{0,p}) \\times (1 - e^{-\\lambda_p \\times \\tau_s}+\\delta_p) \\leq 0\\\\\n\\end{align}\n\\]\nEn \\(\\lambda_p=0.5\\) et \\(\\tau_s=30\\) , \\(LTP = 1-e^{-0.5*30} \\approx 1\\), thus:\n\\[\n\\begin{align}\n\\theta_{0,p} + (\\theta_{\\infty,s} - \\theta_{0,p}) \\times (1+\\delta_p) \\leq 0\\\\\n\\theta_{\\infty,s} + (\\theta_{\\infty,s} - \\theta_{0,p}) \\times \\delta_p \\leq 0\\\\\n\\delta_p \\geq \\frac{-\\theta_{\\infty,s}}  {\\theta_{\\infty,s} - \\theta_{0,p}} ~|~ \\theta_{\\infty,s} - \\theta_{0,p} &lt; 0 \\\\\n\\delta_p \\geq \\frac{-1}  {1 - dist_p} ~|~\\theta_{0,p}=dist_p\\times\\theta_{\\infty,s} \\\\\n\\delta_p \\geq \\frac{1}  {dist_p-1}\n\\end{align}\n\\]\nWe could thus use this inequality to constrain \\(\\delta_p\\) on \\(dist_p\\) knowing that stan now accepts parameters bounds to depend on another parameter. However, this is complicated as it depends on the sign in the division above, \\(dist=1\\) is no possible, and near 1 values results in positive or negative infinite values. Thus we simply bounded \\(dist_p\\) to 1.5 for now (50% gain of attribute post-disturbance).\n\n\nCode\nmodel &lt;- function(time, dist, thetainf, lambda, tau, delta) {\n  theta0 &lt;- thetainf * dist\n  ltp &lt;- 1 - exp(-lambda * time)\n  stp &lt;- delta * (time / tau * exp(1 - time / tau))^2\n  return(theta0 + (thetainf - theta0) * (ltp + stp))\n}\ndata.frame(time = 1:50) %&gt;%\n  mutate(y = model(time, dist = 2, thetainf = 20,\n                   lambda = 0.5, tau = 30, delta = 0.5)) %&gt;%\n  mutate(y2 = model(time, dist = 2, thetainf = 20,\n                    lambda = 0.5, tau = 30, delta = 2)) %&gt;%\n  mutate(y3 = model(time, dist = 2, thetainf = 20,\n                    lambda = 0.5, tau = 30, delta = 1)) %&gt;%\n  ggplot(aes(time)) +\n  geom_line(aes(y = y, col = \"dist=2, delta=.5\")) +\n  geom_line(aes(y = y2, col = \"dist=2, delta=2\")) +\n  geom_line(aes(y = y3, col = \"dist=2, delta=1\")) +\n  theme_bw()\n\n\n\n\n\nNegative STR examples with delta-dist link.\n\n\n\n\n\n\nCode\ndata.frame(dist = seq(.5, 2, length.out = 100)) %&gt;%\n  mutate(delta_max = 2 - (1 / (dist - 1))) %&gt;%\n  ggplot(aes(dist, delta_max)) +\n  geom_line() +\n  theme_bw()\n\n\n\n\n\ndelta_max with dist."
  }
]