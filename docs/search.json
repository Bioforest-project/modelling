[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "modelling",
    "section": "",
    "text": "Introduction\nmodelling is a sub-project of the BioForest project aimed at species related data (correct names, functional traits, phylogeny) as part of the data preparation for data preparation within the project."
  },
  {
    "objectID": "index.html#usage",
    "href": "index.html#usage",
    "title": "modelling",
    "section": "Usage",
    "text": "Usage\nAll modelling analyses rely on the quarto documents (files.qmd) that can be run with R and associated environment defined with renv."
  },
  {
    "objectID": "index.html#project",
    "href": "index.html#project",
    "title": "modelling",
    "section": "Project",
    "text": "Project\nmodelling includes:\n\nAnalyse of the data with associated documentation and figures:\n\nReproductive analyses in files.qmd\nResulting pages in docs/\nDocument structure definition in _quarto.yml\n\nData in data/ with:\n\nAll raw data in raw_data/\nAll derived data in derived_sata/\n\nStan Bayesian models in models/\nR scripts with funtions in r/\nIntermediary files in outputs/\nFigures in figures/\nR environment definition with renv in renv/ and renv/lock\nR files (.Rbuildignore , .Rdata , .Rprofile , .Rhistory, .lintr)\nGit and GitHub files (.gitignore , .github/)\nProject documentation (README.qmd , README.md , NEWS.md, LICENSE )"
  },
  {
    "objectID": "index.html#contribution",
    "href": "index.html#contribution",
    "title": "modelling",
    "section": "Contribution",
    "text": "Contribution\nYou can contribute to the project by forking the repository on github and cloning the fork to your machine using several options, including GitHub desktop GUI. Further informations on contribution are detailed in the online document: https://bioforest-project.github.io/data_preparation/98_contributing.html."
  },
  {
    "objectID": "index.html#help",
    "href": "index.html#help",
    "title": "modelling",
    "section": "Help",
    "text": "Help\nPlease preferentially create an issue on GitHub for any questions, bugs or help needed regarding modelling: https://github.com/Bioforest-project/modelling/issues . You may however reach us by mail with people from the core group (see below)."
  },
  {
    "objectID": "index.html#core-group",
    "href": "index.html#core-group",
    "title": "modelling",
    "section": "Core group",
    "text": "Core group\n\nSylvain Schmitt (sylvain.schmitt@cirad.fr)\nCamille Piponiot-Laroche (camille.piponiot-laroche@cirad.fr)\nBruno HÃ©rault (bruno.herault@cirad.fr)\n\nThe whole group consist of participants to the Bioforest project."
  },
  {
    "objectID": "11_observations.html",
    "href": "11_observations.html",
    "title": "Observations",
    "section": "",
    "text": "Data exploration.\n\n\nCode\nmetadata &lt;- read_sheet(\"https://docs.google.com/spreadsheets/d/1fq2owxMBLBwwibcdw2uQQFxnIhsMbaH4Qcj_xUwVvSQ/edit?gid=0#gid=0\", col_types = \"c\") %&gt;% # nolint\n  rename_all(tolower) %&gt;%\n  select(site, plot, treatment, year_of_harvest) %&gt;%\n  separate(year_of_harvest, \"year_of_harvest\") %&gt;%\n  mutate(year_of_harvest = as.numeric(year_of_harvest)) %&gt;%\n  rename(harvest_year = year_of_harvest) %&gt;%\n  mutate(treatment = ifelse(\n    treatment %in% c(\"control\", \"Control\", \"Natural_Forest\"),\n    \"control\", \"logged\"\n  )) %&gt;%\n  group_by(site) %&gt;%\n  mutate(harvest_year_min = min(harvest_year, na.rm = TRUE)) %&gt;%\n  mutate(harvest_year = ifelse(site == \"Paracou\", 1986, harvest_year)) %&gt;%\n  mutate(harvest_year_min = ifelse(site == \"Paracou\", 1986, harvest_year_min))\ndata &lt;- read_csv(\"data/raw_data/aggregated_data.csv\") %&gt;%\n  rename_all(tolower) %&gt;%\n  left_join(read_tsv(\"data/raw_data/environment.tsv\") %&gt;%\n              gather(env, env_value, -site, -plot)) %&gt;%\n  left_join(read_csv(\"data/raw_data/plot_area.csv\") %&gt;%\n              rename_all(tolower) %&gt;%\n              select(site, plot, plotarea) %&gt;%\n              unique()) %&gt;%\n  left_join(metadata) %&gt;%\n  filter(!(site %in% c(\"Peteco\", \"Bafog\", \"Tene\", \"Montagne_Tortue\"))) %&gt;%\n  filter(!(site == \"Kabo\" & year &lt; 1980)) %&gt;%\n  mutate(rel_year = ifelse(treatment == \"control\",\n    year - harvest_year_min,\n    year - harvest_year\n  ))\nwrite_tsv(data, \"data/derived_data/data.tsv\")\n\n\n\n\nCode\nread_tsv(\"data/derived_data/data.tsv\") %&gt;%\n  ggplot(aes(year, value, group = paste(site, plot))) +\n  geom_line() +\n  theme_bw() +\n  facet_wrap(~variable, scales = \"free_y\") +\n  theme(\n    axis.title = element_blank(),\n    strip.text = element_text(size = 6)\n  )\n\n\n\n\n\nDummy figure 1 - traj.\n\n\n\n\n\n\nCode\nread_tsv(\"data/derived_data/data.tsv\") %&gt;%\n  filter(variable == \"agb\", env == \"cwd\") %&gt;%\n  na.omit() %&gt;%\n  ggplot(aes(year, value, group = paste(site, plot), col = env_value)) +\n  geom_line() +\n  theme_bw() +\n  scale_color_viridis_c(\"Climate\\nwater\\ndeficit\\n[ mm ]\") +\n  xlab(\"\") +\n  ylab(expression(\"AGB [\" ~ Mg ~ ha^{\n    -1\n  } ~ \"]\"))\n\n\n\n\n\nDummy figure 2 - env.\n\n\n\n\n\n\nCode\nmake_fig &lt;- function(var) {\n  g &lt;- read_tsv(\"data/derived_data/data.tsv\") %&gt;%\n    filter(variable == var) %&gt;%\n    ggplot(aes(year, value, group = paste(site, plot), col = treatment)) +\n    geom_line() +\n    theme_bw() +\n    xlab(\"\") +\n    ylab(\"\") +\n    facet_wrap(~site, scales = \"free\") +\n    geom_vline(aes(xintercept = harvest_year)) +\n    theme(legend.position = \"bottom\") +\n    ggtitle(var)\n  ggsave(plot = g, filename = paste0(\"figures/obs/\", var, \".png\"))\n}\nunique(read_tsv(\"data/derived_data/data.tsv\")$variable) %&gt;%\n  lapply(make_fig)\n\n\n\n\nCode\nread_tsv(\"data/derived_data/data.tsv\") %&gt;%\n  filter(variable == \"agb\") %&gt;%\n  ggplot(aes(year, value, group = paste(site, plot), col = treatment)) +\n  geom_line() +\n  theme_bw() +\n  xlab(\"\") +\n  ylab(expression(\"AGB [\" ~ Mg ~ ha^{\n    -1\n  } ~ \"]\")) +\n  facet_wrap(~site, scales = \"free\") +\n  geom_vline(aes(xintercept = harvest_year)) +\n  theme(legend.position = \"bottom\")\n\n\n\n\n\nDummy figure 3 - treatment."
  },
  {
    "objectID": "21_dummy_model.html#classic",
    "href": "21_dummy_model.html#classic",
    "title": "Dummy models",
    "section": "Classic",
    "text": "Classic\n\n\nCode\ndata &lt;- read_csv(\"data/raw_data/aggregated_data.csv\") %&gt;%\n  rename_all(tolower) %&gt;%\n  filter(variable == \"agb\") %&gt;%\n  mutate(site_plot = paste0(site, \"_\", plot)) %&gt;%\n  mutate(site_plot_num = as.numeric(as.factor(site_plot)))\n\n\n\n\nCode\nmdata &lt;- list(\n  N = nrow(data),\n  P = max(data$site_plot_num),\n  y = data$value,\n  year = data$year,\n  plot = data$site_plot_num\n)\nmodel &lt;- cmdstan_model(\"models/dummy.stan\")\nfit &lt;- model$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  threads_per_chain = 1,\n  save_warmup = FALSE,\n  max_treedepth = 12\n)\ndir.create(\"data/derived_data/dummy\")\nfit$save_output_files(dir = \"data/derived_data/dummy\")\n\n\n\n\nCode\nfit &lt;- as_cmdstan_fit(list.files(\"data/derived_data/dummy\", full.names = TRUE))\n\n\n\n\nCode\nrhat(fit) %&gt;%\n  mcmc_rhat()\n\n\n\n\n\nRhat\n\n\n\n\n\n\nCode\nfit$draws(c(\"alpha\", \"beta\", \"sigma\", \"sigma_a\", \"sigma_b\")) %&gt;%\n  mcmc_trace()\n\n\n\n\n\nTrace\n\n\n\n\n\n\nCode\nfit$draws(c(\"alpha\", \"beta\", \"sigma\", \"sigma_a\", \"sigma_b\")) %&gt;%\n  mcmc_pairs()\n\n\n\n\n\nPairs\n\n\n\n\n\n\nCode\nfit$summary(c(\"alpha\", \"beta\", \"sigma\", \"sigma_a\", \"sigma_b\")) %&gt;%\n  kable(caption = \"Summary\")\n\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvariable\nmean\nmedian\nsd\nmad\nq5\nq95\nrhat\ness_bulk\ness_tail\n\n\n\n\nalpha\n-34.4175916\n-4.1867950\n48.2046484\n9.1769604\n-133.1686500\n3.5867120\n2.501936\n4.849593\n11.47456\n\n\nbeta\n0.1742818\n0.1618795\n0.0246876\n0.0136688\n0.1497618\n0.2260654\n1.701448\n6.284556\n14.25356\n\n\nsigma\n49.6296399\n49.6211000\n0.9145410\n0.9287748\n48.1783400\n51.1559400\n1.003916\n2716.132701\n2441.89347\n\n\nsigma_a\n2.9157766\n2.1319800\n2.2880955\n2.0967745\n0.6475763\n7.3413580\n2.399378\n4.917238\n29.35076\n\n\nsigma_b\n0.0601926\n0.0599634\n0.0035780\n0.0035326\n0.0547951\n0.0665531\n1.014446\n232.207924\n362.45292\n\n\n\n\n\n\n\nCode\nfit$loo()\n\n\n\nComputed from 4000 by 1569 log-likelihood matrix.\n\n         Estimate   SE\nelpd_loo    763.0  9.7\np_loo        14.8  0.3\nlooic     -1525.9 19.4\n------\nMCSE of elpd_loo is 0.1.\nMCSE and ESS estimates assume MCMC draws (r_eff in [0.3, 1.6]).\n\nAll Pareto k estimates are good (k &lt; 0.7).\nSee help('pareto-k-diagnostic') for details.\n\n\n\n\nCode\nfit$draws(c(\"alpha\", \"beta\", \"sigma\", \"sigma_a\", \"sigma_b\")) %&gt;%\n  mcmc_intervals()\n\n\n\n\n\nIntervals\n\n\n\n\n\n\nCode\npreds &lt;- fit$summary(c(\"mu\"), mean) %&gt;%\n  rename(predicted = mean) %&gt;%\n  mutate(variable = gsub(\"]\", \"\", variable)) %&gt;%\n  separate(variable, c(\"X\", \"site_plot_num\"), sep = \"mu\\\\[\", convert = TRUE) %&gt;%\n  select(-X) %&gt;%\n  left_join(data) %&gt;%\n  rename(observed = value)\nrmse &lt;- sqrt(mean((preds$predicted - preds$observed)^2, na.rm = TRUE))\npreds %&gt;%\n  ggplot(aes(predicted, observed)) +\n  geom_point(alpha = 0.25) +\n  geom_abline(col = \"red\", linetype = \"dashed\") +\n  ggtitle(paste(\"RMSE =\", round(rmse, 2))) +\n  theme_bw()\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\npreds %&gt;%\n  filter(site == \"Paracou\", plot == 1) %&gt;%\n  ggplot(aes(year)) +\n  geom_point(aes(y = observed)) +\n  geom_line(aes(y = predicted)) +\n  theme_bw() +\n  theme(axis.title = element_blank())\n\n\n\n\n\nPredicted trajectory"
  },
  {
    "objectID": "21_dummy_model.html#parallel",
    "href": "21_dummy_model.html#parallel",
    "title": "Dummy models",
    "section": "Parallel",
    "text": "Parallel\n\n\nCode\nmdata &lt;- list(\n  N = nrow(data),\n  P = max(data$site_plot_num),\n  y = data$value,\n  year = data$year,\n  plot = data$site_plot_num\n)\nmodel_par &lt;- cmdstan_model(\"models/dummy.stan\",\n  cpp_options = list(stan_threads = TRUE)\n)\nfit_par &lt;- model_par$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  threads_per_chain = 5,\n  save_warmup = FALSE,\n  max_treedepth = 12\n)\ndir.create(\"data/derived_data/dummy_par\")\nfit_par$save_output_files(dir = \"data/derived_data/dummy_par\")\n\n\n\n\nCode\nfit_par &lt;- as_cmdstan_fit(list.files(\"data/derived_data/dummy_par\",\n  full.names = TRUE\n))\n\n\n\n\nCode\nlist(\n  classic = fit$time()$chains,\n  parrallel = fit_par$time()$chains\n) %&gt;%\n  bind_rows(.id = \"model\") %&gt;%\n  ggplot(aes(model, total)) +\n  geom_boxplot() +\n  theme_bw() +\n  xlab(\"Model\") +\n  ylab(\"Total time [ seconds ]\")"
  },
  {
    "objectID": "31_stem.html#data",
    "href": "31_stem.html#data",
    "title": "Stem",
    "section": "Data",
    "text": "Data\n\n\nCode\ndata &lt;- read_tsv(\"data/derived_data/data.tsv\") %&gt;%\n  filter(variable == \"nstem\") %&gt;%\n  unique() %&gt;%\n  rename(stem = value) %&gt;%\n  select(-env, -env_value, -variable) %&gt;%\n  unique() %&gt;%\n  filter(!is.infinite(harvest_year_min)) %&gt;%\n  mutate(sitenum = as.numeric(as.factor(site)))\ndata_rec &lt;- data %&gt;%\n  filter(treatment == \"logged\", rel_year &gt; 2) %&gt;%\n  mutate(plotnum = as.numeric(as.factor(paste0(site, \"_\", plot))))\ndata_old &lt;- data %&gt;% filter(treatment == \"control\")\ndata_pre &lt;- data %&gt;% filter(rel_year &lt;= 0)\nind_rec &lt;- data_rec %&gt;%\n  select(site, plot, sitenum, plotnum) %&gt;%\n  unique() %&gt;%\n  arrange(plotnum)\nmdata &lt;- list(\n  n_rec = nrow(data_rec),\n  n_old = nrow(data_old),\n  n_pre = nrow(data_pre),\n  n_site = max(data_rec$sitenum),\n  n_plot_rec = max(data_rec$plotnum),\n  stem_rec = data_rec$stem,\n  stem_old = data_old$stem,\n  stem_pre = data_pre$stem,\n  time = data_rec$rel_year - 3,\n  site_rec = data_rec$sitenum,\n  site_old = data_old$sitenum,\n  site_pre = data_pre$sitenum,\n  plot_rec = data_rec$plotnum,\n  site_plot_rec = ind_rec$sitenum\n)\n\n\n\n\nCode\nggplot(data, aes(rel_year, stem, group = paste(site, plot), col = treatment)) +\n  geom_line() +\n  facet_wrap(~site) +\n  theme_bw() +\n  xlab(\"\") +\n  ylab(expression(\"Stems [ trees\" ~ ha^{\n    -1\n  } ~ \"]\")) +\n  theme(legend.position = \"bottom\") +\n  scale_color_discrete(\"\")\n\n\n\n\n\nModelled trajectories."
  },
  {
    "objectID": "31_stem.html#ltp",
    "href": "31_stem.html#ltp",
    "title": "Stem",
    "section": "LTP",
    "text": "LTP\nLong term process only model:\n\\[\n\\begin{align}\n\\mu_{rec} = \\theta_{0,p} + (\\theta_{\\infty,s} - \\theta_{0,p}) \\times LTP \\\\\nLTP = 1 - e^{-\\lambda_p \\times time}\n\\end{align}\n\\]\n\n\nCode\nltp &lt;- cmdstan_model(\"models/ltp.stan\")\nunlink(\"data/derived_data/ltp\", recursive = TRUE)\ndir.create(\"data/derived_data/ltp\")\nfit_ltp &lt;- ltp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = \"data/derived_data/ltp\"\n)\n\n\n\n\nCode\nfit_ltp &lt;- as_cmdstan_fit(list.files(\"data/derived_data/ltp\",\n  full.names = TRUE\n))\nfit_ltp\n\n\n     variable   mean median    sd   mad     q5    q95 rhat ess_bulk ess_tail\n lp__         785.36 785.87 15.50 15.28 758.77 810.17 1.01      827     1412\n mu_theta0    326.18 325.98 13.99 13.66 303.67 349.29 1.00     4723     3133\n sigma_theta0   0.41   0.41  0.03  0.03   0.37   0.47 1.00     5662     3109\n theta0_p[1]  213.24 213.21 28.82 31.47 165.88 259.62 1.00     4424     2925\n theta0_p[2]  269.27 271.27 22.18 19.91 228.50 302.02 1.00     4105     2924\n theta0_p[3]  224.47 226.14 18.76 18.57 191.06 252.88 1.00     4608     2925\n theta0_p[4]  222.43 222.15 29.18 30.96 174.74 269.02 1.00     5357     2968\n theta0_p[5]  222.45 224.14 21.97 21.96 183.95 255.68 1.00     4929     2830\n theta0_p[6]  250.85 250.30 16.97 15.39 223.88 278.83 1.00     6271     2742\n theta0_p[7]  238.46 241.29 26.65 28.20 192.34 277.50 1.00     4932     3336\n\n # showing 10 of 3319 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\ndata_rec$preds &lt;- fit_ltp$summary(c(\"mu_rec\"), median)$median\nrmse_rec &lt;- sqrt(mean((data_rec$preds - data_rec$stem)^2, na.rm = TRUE))\ng_rec &lt;- data_rec %&gt;%\n  ggplot(aes(preds, stem)) +\n  geom_point(alpha = 0.25) +\n  geom_abline(col = \"red\", linetype = \"dashed\") +\n  ggtitle(\"Recovery\", paste(\"RMSE =\", round(rmse_rec, 2))) +\n  theme_bw() +\n  xlab(expression(\"Predicted [ trees\" ~ ha^{\n    -1\n  } ~ \"]\")) +\n  ylab(expression(\"Observed [ trees\" ~ ha^{\n    -1\n  } ~ \"]\"))\ndata_pre$preds &lt;- fit_ltp$summary(c(\"mu_pre\"), median)$median\nrmse_pre &lt;- sqrt(mean((data_pre$preds - data_pre$stem)^2, na.rm = TRUE))\ng_pre &lt;- data_pre %&gt;%\n  ggplot(aes(preds, stem, col = site)) +\n  geom_point(alpha = 0.25) +\n  geom_abline(col = \"red\", linetype = \"dashed\") +\n  ggtitle(\"Prelogging\", paste(\"RMSE =\", round(rmse_pre, 2))) +\n  theme_bw() +\n  scale_color_discrete(\"\") +\n  theme(legend.position = \"bottom\") +\n  xlab(expression(\"Predicted [ trees\" ~ ha^{\n    -1\n  } ~ \"]\")) +\n  ylab(expression(\"Observed [ trees\" ~ ha^{\n    -1\n  } ~ \"]\"))\ng_pre + g_rec\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nbind_rows(data_pre, data_rec) %&gt;%\n  ggplot(aes(rel_year, group = paste(site, plot), col = plot)) +\n  geom_point(aes(y = stem), alpha = .5) +\n  geom_line(aes(y = preds)) +\n  facet_wrap(~site, scales = \"free\") +\n  theme_bw() +\n  xlab(\"\") +\n  theme(legend.position = \"bottom\") +\n  ylab(expression(\"Stem [ trees\" ~ ha^{\n    -1\n  } ~ \"]\")) +\n  scale_color_discrete(guide = \"none\")\n\n\n\n\n\nPredicted trajectories."
  },
  {
    "objectID": "31_stem.html#stp-sum",
    "href": "31_stem.html#stp-sum",
    "title": "Stem",
    "section": "STP sum",
    "text": "STP sum\nLong term and short term processes model based on initial value \\(\\theta_0\\):\n\\[\n\\begin{align}\n\\mu_{rec} = \\theta_{0,p} + (\\theta_{\\infty,s} - \\theta_{0,p}) \\times (LTP+STP) \\\\\nLTP = 1 - e^{-\\lambda_p \\times time} \\\\\nSTP = \\delta_p \\times (\\frac{time}{\\tau_s} \\times e^{1-\\frac{time}{\\tau_s}})^2\n\\end{align}\n\\]\n\n\nCode\nstp_sum &lt;- cmdstan_model(\"models/stp_sum.stan\")\nunlink(\"data/derived_data/stp_sum\", recursive = TRUE)\ndir.create(\"data/derived_data/stp_sum\")\nfit_stp_sum &lt;- stp_sum$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = \"data/derived_data/stp_sum\"\n)\n\n\n\n\nCode\nfit_stp_sum &lt;- as_cmdstan_fit(list.files(\"data/derived_data/stp_sum\",\n  full.names = TRUE\n))\nfit_stp_sum\n\n\n     variable   mean median    sd   mad     q5    q95 rhat ess_bulk ess_tail\n lp__         682.25 696.71 59.77 73.48 589.01 762.37 1.78        4       76\n mu_theta0    324.69 324.49 14.92 14.85 300.52 349.51 1.01     1533     2188\n sigma_theta0   0.43   0.43  0.04  0.04   0.37   0.50 1.08       25      260\n theta0_p[1]  204.78 205.21 16.39 15.51 177.96 231.33 1.00     2553     1617\n theta0_p[2]  260.92 261.40 20.09 20.31 227.56 293.27 1.00     3286     2339\n theta0_p[3]  217.64 218.09 14.92 15.11 192.58 241.79 1.00     3962     2353\n theta0_p[4]  212.20 212.17 18.24 17.22 183.23 242.12 1.00     2669     1791\n theta0_p[5]  217.91 217.77 16.42 16.55 190.96 245.16 1.00     3202     2353\n theta0_p[6]  248.43 247.22 16.36 14.91 224.03 276.59 1.01     2540     1141\n theta0_p[7]  226.10 225.80 19.28 18.33 194.50 258.03 1.00     2748     1855\n\n # showing 10 of 4291 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\ndata_rec$preds &lt;- fit_stp_sum$summary(c(\"mu_rec\"), median)$median\nrmse_rec &lt;- sqrt(mean((data_rec$preds - data_rec$stem)^2, na.rm = TRUE))\ng_rec &lt;- data_rec %&gt;%\n  ggplot(aes(preds, stem)) +\n  geom_point(alpha = 0.25) +\n  geom_abline(col = \"red\", linetype = \"dashed\") +\n  ggtitle(\"Recovery\", paste(\"RMSE =\", round(rmse_rec, 2))) +\n  theme_bw() +\n  xlab(expression(\"Predicted [ trees\" ~ ha^{\n    -1\n  } ~ \"]\")) +\n  ylab(expression(\"Observed [ trees\" ~ ha^{\n    -1\n  } ~ \"]\"))\ndata_pre$preds &lt;- fit_stp_sum$summary(c(\"mu_pre\"), median)$median\nrmse_pre &lt;- sqrt(mean((data_pre$preds - data_pre$stem)^2, na.rm = TRUE))\ng_pre &lt;- data_pre %&gt;%\n  ggplot(aes(preds, stem, col = site)) +\n  geom_point(alpha = 0.25) +\n  geom_abline(col = \"red\", linetype = \"dashed\") +\n  ggtitle(\"Prelogging\", paste(\"RMSE =\", round(rmse_pre, 2))) +\n  theme_bw() +\n  scale_color_discrete(\"\") +\n  theme(legend.position = \"bottom\") +\n  xlab(expression(\"Predicted [ trees\" ~ ha^{\n    -1\n  } ~ \"]\")) +\n  ylab(expression(\"Observed [ trees\" ~ ha^{\n    -1\n  } ~ \"]\"))\ng_pre + g_rec\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nbind_rows(data_pre, data_rec) %&gt;%\n  ggplot(aes(rel_year, group = paste(site, plot), col = plot)) +\n  geom_point(aes(y = stem), alpha = .5) +\n  geom_line(aes(y = preds)) +\n  facet_wrap(~site, scales = \"free\") +\n  theme_bw() +\n  xlab(\"\") +\n  theme(legend.position = \"bottom\") +\n  ylab(expression(\"Stem [ trees\" ~ ha^{\n    -1\n  } ~ \"]\")) +\n  scale_color_discrete(guide = \"none\")\n\n\n\n\n\nPredicted trajectories."
  },
  {
    "objectID": "31_stem.html#stp-dist",
    "href": "31_stem.html#stp-dist",
    "title": "Stem",
    "section": "STP dist",
    "text": "STP dist\nLong term and short term processes model based on disturbance index \\(dist\\):\n\\[\n\\begin{align}\n\\mu_{rec} = \\theta_{0,p} + (\\theta_{\\infty,s} - \\theta_{0,p}) \\times (LTP+STP) \\\\\nLTP = 1 - e^{-\\lambda_p \\times time} \\\\\nSTP = \\delta_p \\times (\\frac{time}{\\tau_s} \\times e^{1-\\frac{time}{\\tau_s}})^2 \\\\\n\\theta_{0,p} = \\theta_{\\infty,s} \\times dist_p\n\\end{align}\n\\]\n\n\nCode\nstp &lt;- cmdstan_model(\"models/stp.stan\")\nunlink(\"data/derived_data/stp\", recursive = TRUE)\ndir.create(\"data/derived_data/stp\")\nfit_stp &lt;- stp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = \"data/derived_data/stp\"\n)\n\n\n\n\nCode\nfit_stp &lt;- as_cmdstan_fit(list.files(\"data/derived_data/stp\",\n  full.names = TRUE\n))\nfit_stp\n\n\n   variable   mean median    sd   mad     q5    q95 rhat ess_bulk ess_tail\n lp__       535.50 586.96 94.45 43.99 384.59 630.54 1.68        4       43\n mu_dist      0.86   0.86  0.03  0.03   0.82   0.91 1.14       13      120\n sigma_dist   0.26   0.26  0.02  0.02   0.23   0.30 1.06       33      902\n dist_p[1]    0.74   0.73  0.06  0.06   0.64   0.85 1.01     1693     1337\n dist_p[2]    0.93   0.93  0.08  0.08   0.80   1.05 1.00     2331     1868\n dist_p[3]    0.78   0.78  0.06  0.06   0.69   0.88 1.01     1993     1438\n dist_p[4]    0.76   0.76  0.07  0.07   0.66   0.88 1.02     1736     1420\n dist_p[5]    0.78   0.78  0.07  0.06   0.68   0.89 1.01     2115     1923\n dist_p[6]    0.88   0.88  0.06  0.06   0.78   0.99 1.01     1581     1599\n dist_p[7]    0.81   0.81  0.07  0.07   0.70   0.93 1.01     1515      915\n\n # showing 10 of 4397 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\ndata_rec$preds &lt;- fit_stp$summary(c(\"mu_rec\"), median)$median\nrmse_rec &lt;- sqrt(mean((data_rec$preds - data_rec$stem)^2, na.rm = TRUE))\ng_rec &lt;- data_rec %&gt;%\n  ggplot(aes(preds, stem)) +\n  geom_point(alpha = 0.25) +\n  geom_abline(col = \"red\", linetype = \"dashed\") +\n  ggtitle(\"Recovery\", paste(\"RMSE =\", round(rmse_rec, 2))) +\n  theme_bw() +\n  xlab(expression(\"Predicted [ trees\" ~ ha^{\n    -1\n  } ~ \"]\")) +\n  ylab(expression(\"Observed [ trees\" ~ ha^{\n    -1\n  } ~ \"]\"))\ndata_pre$preds &lt;- fit_stp$summary(c(\"mu_pre\"), median)$median\nrmse_pre &lt;- sqrt(mean((data_pre$preds - data_pre$stem)^2, na.rm = TRUE))\ng_pre &lt;- data_pre %&gt;%\n  ggplot(aes(preds, stem, col = site)) +\n  geom_point(alpha = 0.25) +\n  geom_abline(col = \"red\", linetype = \"dashed\") +\n  ggtitle(\"Prelogging\", paste(\"RMSE =\", round(rmse_pre, 2))) +\n  theme_bw() +\n  scale_color_discrete(\"\") +\n  theme(legend.position = \"bottom\") +\n  xlab(expression(\"Predicted [ trees\" ~ ha^{\n    -1\n  } ~ \"]\")) +\n  ylab(expression(\"Observed [ trees\" ~ ha^{\n    -1\n  } ~ \"]\"))\ng_pre + g_rec\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nbind_rows(data_pre, data_rec) %&gt;%\n  ggplot(aes(rel_year, group = paste(site, plot), col = plot)) +\n  geom_point(aes(y = stem), alpha = .5) +\n  geom_line(aes(y = preds)) +\n  facet_wrap(~site, scales = \"free\") +\n  theme_bw() +\n  xlab(\"\") +\n  theme(legend.position = \"bottom\") +\n  ylab(expression(\"Stem [ trees\" ~ ha^{\n    -1\n  } ~ \"]\")) +\n  scale_color_discrete(guide = \"none\")\n\n\n\n\n\nPredicted trajectories.\n\n\n\n\n\n\nCode\nfit_stp$draws(\"dist_p\") %&gt;%\n  mcmc_intervals()\n\n\n\n\n\nDisturbance parameters posteriors."
  },
  {
    "objectID": "31_stem.html#horseshoe",
    "href": "31_stem.html#horseshoe",
    "title": "Stem",
    "section": "Horseshoe",
    "text": "Horseshoe\n\nTo be developed."
  },
  {
    "objectID": "31_stem.html#comparison",
    "href": "31_stem.html#comparison",
    "title": "Stem",
    "section": "Comparison",
    "text": "Comparison\n\n\nCode\nloo_compare(\n  fit_ltp$loo(),\n  fit_stp_sum$loo(),\n  fit_stp$loo()\n) %&gt;%\n  kable()\n\n\nWarning: Some Pareto k diagnostic values are too high. See help('pareto-k-diagnostic') for details.\n\n\nWarning: Can't fit generalized Pareto distribution because all tail values are\nthe same.\n\n\nWarning: Some Pareto k diagnostic values are too high. See help('pareto-k-diagnostic') for details.\nWarning: Some Pareto k diagnostic values are too high. See help('pareto-k-diagnostic') for details.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nelpd_diff\nse_diff\nelpd_loo\nse_elpd_loo\np_loo\nse_p_loo\nlooic\nse_looic\n\n\n\n\nmodel1\n0.00000\n0.000000\n442.8946\n6.934509\n12.96416\n0.4308176\n-885.7892\n13.86902\n\n\nmodel2\n-25.92172\n5.796471\n416.9729\n5.820086\n20.59274\n0.6022396\n-833.9458\n11.64017\n\n\nmodel3\n-28.06625\n5.376330\n414.8284\n5.935723\n18.79057\n0.4840138\n-829.6568\n11.87145"
  }
]