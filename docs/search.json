[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "modelling",
    "section": "",
    "text": "Introduction\nmodelling is a sub-project of the BioForest project aimed at species related data (correct names, functional traits, phylogeny) as part of the data preparation for data preparation within the project."
  },
  {
    "objectID": "index.html#usage",
    "href": "index.html#usage",
    "title": "modelling",
    "section": "Usage",
    "text": "Usage\nAll modelling analyses rely on the quarto documents (files.qmd) that can be run with R and associated environment defined with renv."
  },
  {
    "objectID": "index.html#project",
    "href": "index.html#project",
    "title": "modelling",
    "section": "Project",
    "text": "Project\nmodelling includes:\n\nAnalyse of the data with associated documentation and figures:\n\nReproductive analyses in files.qmd\nResulting pages in docs/\nDocument structure definition in _quarto.yml\n\nData in data/ with:\n\nAll raw data in raw_data/\nAll derived data in derived_sata/\n\nStan Bayesian models in models/\nR scripts with funtions in r/\nIntermediary files in outputs/\nFigures in figures/\nR environment definition with renv in renv/ and renv/lock\nR files (.Rbuildignore , .Rdata , .Rprofile , .Rhistory, .lintr)\nGit and GitHub files (.gitignore , .github/)\nProject documentation (README.qmd , README.md , NEWS.md, LICENSE )"
  },
  {
    "objectID": "index.html#contribution",
    "href": "index.html#contribution",
    "title": "modelling",
    "section": "Contribution",
    "text": "Contribution\nYou can contribute to the project by forking the repository on github and cloning the fork to your machine using several options, including GitHub desktop GUI. Further informations on contribution are detailed in the online document: https://bioforest-project.github.io/data_preparation/98_contributing.html."
  },
  {
    "objectID": "index.html#help",
    "href": "index.html#help",
    "title": "modelling",
    "section": "Help",
    "text": "Help\nPlease preferentially create an issue on GitHub for any questions, bugs or help needed regarding modelling: https://github.com/Bioforest-project/modelling/issues . You may however reach us by mail with people from the core group (see below)."
  },
  {
    "objectID": "index.html#core-group",
    "href": "index.html#core-group",
    "title": "modelling",
    "section": "Core group",
    "text": "Core group\n\nSylvain Schmitt (sylvain.schmitt@cirad.fr)\nCamille Piponiot-Laroche (camille.piponiot-laroche@cirad.fr)\nBruno Hérault (bruno.herault@cirad.fr)\n\nThe whole group consist of participants to the Bioforest project."
  },
  {
    "objectID": "11_observations.html",
    "href": "11_observations.html",
    "title": "Observations",
    "section": "",
    "text": "Code example for data exploration.\nToDo:\n\nAdd new functional traits to species analyses: plant nitrogen fixation capacity & leaf phenology type\nInclude Kibale in environmental analyses with coordinates (0deg13–0deg41 N; 30deg19–30deg32 E = 0.27°N; 30.255°E = 0.45;34.25)\nClean metadata with lacking treatments and fortified harvesting year\nPrepare models with n_stem LTP only, LTP + STP, LTP + STP with horseshoe, including models comparisons with loo (with or without parrallelization, to be tested)\n\nDone:\n\nRemove Kabo pre-logging inventories (incomplete)\nRemove Peteco from analyses\n\n\n\nCode\nmetadata &lt;- read_sheet(\"https://docs.google.com/spreadsheets/d/1fq2owxMBLBwwibcdw2uQQFxnIhsMbaH4Qcj_xUwVvSQ/edit?gid=0#gid=0\", col_types = \"c\") %&gt;%  #nolint\n  rename_all(tolower) %&gt;%\n  select(site, plot, treatment, year_of_harvest) %&gt;%\n  separate(year_of_harvest, \"year_of_harvest\") %&gt;% \n  mutate(year_of_harvest = as.numeric(year_of_harvest)) %&gt;%\n  rename(harvest_year = year_of_harvest) %&gt;%\n  mutate(treatment = ifelse(treatment %in% c(\"Control\", \"Natural_Forest\"),\n                            \"control\", \"logged\")) %&gt;% \n  group_by(site) %&gt;% \n  mutate(harvest_year_min = min(harvest_year, na.rm = T)) %&gt;% \n  mutate(harvest_year_min = ifelse(site == \"Paracou\", 1986, harvest_year_min))\ndata &lt;- read_csv(\"data/raw_data/aggregated_data.csv\") %&gt;%\n  rename_all(tolower) %&gt;%\n  left_join(read_tsv(\"data/raw_data/environment.tsv\") %&gt;%\n              gather(env, env_value, -site, -plot)) %&gt;%\n  left_join(metadata) %&gt;% \n  filter(site != \"Peteco\") %&gt;% \n  filter(!(site == \"Kabo\" & year &lt; 1980)) %&gt;% \n  mutate(sitenum = as.numeric(as.factor(site))) %&gt;% \n  mutate(siteplot = paste0(site, \"_\", plot)) %&gt;% \n  mutate(plotnum = as.numeric(as.factor(siteplot))) %&gt;% \n  mutate(rel_year = year - harvest_year_min)\nwrite_tsv(data, \"data/derived_data/data.tsv\")\n\n\n\n\nCode\nread_tsv(\"data/derived_data/data.tsv\") %&gt;%\n  ggplot(aes(year, value, group = paste(site, plot))) +\n  geom_line() +\n  theme_bw() +\n  facet_wrap(~variable, scales = \"free_y\") +\n  theme(\n    axis.title = element_blank(),\n    strip.text = element_text(size = 6)\n  )\n\n\n\n\n\nDummy figure 1 - traj.\n\n\n\n\n\n\nCode\nread_tsv(\"data/derived_data/data.tsv\") %&gt;%\n  filter(variable == \"agb\", env == \"cwd\") %&gt;%\n  na.omit() %&gt;%\n  ggplot(aes(year, value, group = paste(site, plot), col = env_value)) +\n  geom_line() +\n  theme_bw() +\n  scale_color_viridis_c(\"Climate\\nwater\\ndeficit\\n[ mm ]\") +\n  xlab(\"\") +\n  ylab(expression(\"AGB [\" ~ Mg ~ ha^{\n    -1\n  } ~ \"]\"))\n\n\n\n\n\nDummy figure 2 - env.\n\n\n\n\n\n\nCode\nmake_fig &lt;- function(var){\n  g &lt;- read_tsv(\"data/derived_data/data.tsv\") %&gt;%\n  filter(variable == var) %&gt;%\n  ggplot(aes(year, value, group = paste(site, plot), col = treatment)) +\n  geom_line() +\n  theme_bw() +\n  xlab(\"\") +\n  ylab(\"\") +\n  facet_wrap(~ site, scales = \"free\") +\n  geom_vline(aes(xintercept = harvest_year)) +\n  theme(legend.position = \"bottom\") +\n    ggtitle(var)\n  ggsave(plot = g, filename = paste0(\"figures/obs/\", var, \".png\"))\n}\nunique(read_tsv(\"data/derived_data/data.tsv\")$variable) %&gt;% \n  lapply(make_fig)\n\n\n\n\nCode\nread_tsv(\"data/derived_data/data.tsv\") %&gt;%\n  filter(variable == \"agb\") %&gt;%\n  ggplot(aes(year, value, group = paste(site, plot), col = treatment)) +\n  geom_line() +\n  theme_bw() +\n  xlab(\"\") +\n  ylab(expression(\"AGB [\" ~ Mg ~ ha^{\n   -1\n  } ~ \"]\")) +\n  facet_wrap(~ site, scales = \"free\") +\n  geom_vline(aes(xintercept = harvest_year)) +\n  theme(legend.position = \"bottom\")\n\n\n\n\n\nDummy figure 3 - treatment."
  },
  {
    "objectID": "21_dummy_model.html#classic",
    "href": "21_dummy_model.html#classic",
    "title": "Dummy models",
    "section": "Classic",
    "text": "Classic\n\n\nCode\ndata &lt;- read_csv(\"data/raw_data/aggregated_data.csv\") %&gt;%\n  rename_all(tolower) %&gt;%\n  filter(variable == \"agb\") %&gt;%\n  mutate(site_plot = paste0(site, \"_\", plot)) %&gt;%\n  mutate(site_plot_num = as.numeric(as.factor(site_plot)))\n\n\n\n\nCode\nmdata &lt;- list(\n  N = nrow(data),\n  P = max(data$site_plot_num),\n  y = data$value,\n  year = data$year,\n  plot = data$site_plot_num\n)\nmodel &lt;- cmdstan_model(\"models/dummy.stan\")\nfit &lt;- model$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  threads_per_chain = 1,\n  save_warmup = FALSE,\n  max_treedepth = 12\n)\ndir.create(\"data/derived_data/dummy\")\nfit$save_output_files(dir = \"data/derived_data/dummy\")\n\n\n\n\nCode\nfit &lt;- as_cmdstan_fit(list.files(\"data/derived_data/dummy\", full.names = TRUE))\n\n\n\n\nCode\nrhat(fit) %&gt;%\n  mcmc_rhat()\n\n\n\n\n\nRhat\n\n\n\n\n\n\nCode\nfit$draws(c(\"alpha\", \"beta\", \"sigma\", \"sigma_a\", \"sigma_b\")) %&gt;%\n  mcmc_trace()\n\n\n\n\n\nTrace\n\n\n\n\n\n\nCode\nfit$draws(c(\"alpha\", \"beta\", \"sigma\", \"sigma_a\", \"sigma_b\")) %&gt;%\n  mcmc_pairs()\n\n\n\n\n\nPairs\n\n\n\n\n\n\nCode\nfit$summary(c(\"alpha\", \"beta\", \"sigma\", \"sigma_a\", \"sigma_b\")) %&gt;%\n  kable(caption = \"Summary\")\n\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvariable\nmean\nmedian\nsd\nmad\nq5\nq95\nrhat\ness_bulk\ness_tail\n\n\n\n\nalpha\n-34.4175916\n-4.1867950\n48.2046484\n9.1769604\n-133.1686500\n3.5867120\n2.501936\n4.849593\n11.47456\n\n\nbeta\n0.1742818\n0.1618795\n0.0246876\n0.0136688\n0.1497618\n0.2260654\n1.701448\n6.284556\n14.25356\n\n\nsigma\n49.6296399\n49.6211000\n0.9145410\n0.9287748\n48.1783400\n51.1559400\n1.003916\n2716.132701\n2441.89347\n\n\nsigma_a\n2.9157766\n2.1319800\n2.2880955\n2.0967745\n0.6475763\n7.3413580\n2.399378\n4.917238\n29.35076\n\n\nsigma_b\n0.0601926\n0.0599634\n0.0035780\n0.0035326\n0.0547951\n0.0665531\n1.014446\n232.207924\n362.45292\n\n\n\n\n\n\n\nCode\nfit$loo()\n\n\n\nComputed from 4000 by 1569 log-likelihood matrix.\n\n         Estimate   SE\nelpd_loo    763.0  9.7\np_loo        14.8  0.3\nlooic     -1525.9 19.4\n------\nMCSE of elpd_loo is 0.1.\nMCSE and ESS estimates assume MCMC draws (r_eff in [0.3, 1.6]).\n\nAll Pareto k estimates are good (k &lt; 0.7).\nSee help('pareto-k-diagnostic') for details.\n\n\n\n\nCode\nfit$draws(c(\"alpha\", \"beta\", \"sigma\", \"sigma_a\", \"sigma_b\")) %&gt;%\n  mcmc_intervals()\n\n\n\n\n\nIntervals\n\n\n\n\n\n\nCode\npreds &lt;- fit$summary(c(\"mu\"), mean) %&gt;%\n  rename(predicted = mean) %&gt;%\n  mutate(variable = gsub(\"]\", \"\", variable)) %&gt;%\n  separate(variable, c(\"X\", \"site_plot_num\"), sep = \"mu\\\\[\", convert = TRUE) %&gt;%\n  select(-X) %&gt;%\n  left_join(data) %&gt;%\n  rename(observed = value)\nrmse &lt;- sqrt(mean((preds$predicted - preds$observed)^2, na.rm = TRUE))\npreds %&gt;%\n  ggplot(aes(predicted, observed)) +\n  geom_point(alpha = 0.25) +\n  geom_abline(col = \"red\", linetype = \"dashed\") +\n  ggtitle(paste(\"RMSE =\", round(rmse, 2))) +\n  theme_bw()\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\npreds %&gt;%\n  filter(site == \"Paracou\", plot == 1) %&gt;%\n  ggplot(aes(year)) +\n  geom_point(aes(y = observed)) +\n  geom_line(aes(y = predicted)) +\n  theme_bw() +\n  theme(axis.title = element_blank())\n\n\n\n\n\nPredicted trajectory"
  },
  {
    "objectID": "21_dummy_model.html#parallel",
    "href": "21_dummy_model.html#parallel",
    "title": "Dummy models",
    "section": "Parallel",
    "text": "Parallel\n\n\nCode\nmdata &lt;- list(\n  N = nrow(data),\n  P = max(data$site_plot_num),\n  y = data$value,\n  year = data$year,\n  plot = data$site_plot_num\n)\nmodel_par &lt;- cmdstan_model(\"models/dummy.stan\",\n                           cpp_options = list(stan_threads = TRUE))\nfit_par &lt;- model_par$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  threads_per_chain = 5,\n  save_warmup = FALSE,\n  max_treedepth = 12\n)\ndir.create(\"data/derived_data/dummy_par\")\nfit_par$save_output_files(dir = \"data/derived_data/dummy_par\")\n\n\n\n\nCode\nfit_par &lt;- as_cmdstan_fit(list.files(\"data/derived_data/dummy_par\",\n                                     full.names = TRUE))\n\n\n\n\nCode\nlist(\n  classic = fit$time()$chains,\n  parrallel = fit_par$time()$chains\n) %&gt;%\n  bind_rows(.id = \"model\") %&gt;%\n  ggplot(aes(model, total)) +\n  geom_boxplot() +\n  theme_bw() +\n  xlab(\"Model\") +\n  ylab(\"Total time [ seconds ]\")"
  },
  {
    "objectID": "31_test1.html#data",
    "href": "31_test1.html#data",
    "title": "Test 1",
    "section": "Data",
    "text": "Data\n\n\nCode\ndata &lt;- read_tsv(\"data/derived_data/data.tsv\") %&gt;% \n  filter(variable == \"nstem\") %&gt;% \n  unique() %&gt;% \n  rename(stem = value) %&gt;% \n  select(-env, -env_value, -variable) %&gt;% \n  unique() %&gt;% \n  filter(!is.infinite(harvest_year_min))\ndata_rec &lt;- data %&gt;% filter(treatment == \"logged\", rel_year &gt; 2)\ndata_old &lt;- data %&gt;% filter(treatment == \"control\")\ndata_pre &lt;- data %&gt;% filter(rel_year &lt;= 0)\nmdata &lt;- list(\n  n_rec = nrow(data_rec),\n  n_old = nrow(data_old),\n  n_pre = nrow(data_pre),\n  n_site = max(data$sitenum),\n  n_plot = max(data$plotnum),\n  stem_rec = data_rec$stem,\n  stem_old = data_old$stem,\n  stem_pre = data_pre$stem,\n  time = data_rec$rel_year - 3,\n  site_rec = data_rec$sitenum,\n  site_old = data_old$sitenum,\n  site_pre = data_pre$sitenum,\n  plot_rec = data_rec$plotnum,\n  plot_old = data_old$plotnum ,\n  plot_pre = data_pre$plotnum\n)\n\n\n\n\nCode\nggplot(data, aes(rel_year, stem, group = siteplot, col = treatment)) +\n  geom_line() +\n  facet_wrap(~ site) +\n  theme_bw() +\n  xlab(\"\") +\n  theme(legend.position = \"bottom\")"
  },
  {
    "objectID": "31_test1.html#ltp",
    "href": "31_test1.html#ltp",
    "title": "Test 1",
    "section": "LTP",
    "text": "LTP\n\n\nCode\nltp &lt;- cmdstan_model(\"models/ltp.stan\")\nfit &lt;- ltp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  threads_per_chain = 1,\n  save_warmup = FALSE\n)\nunlink(\"data/derived_data/ltp\", recursive = TRUE)\ndir.create(\"data/derived_data/ltp\")\nfit$save_output_files(dir = \"data/derived_data/ltp\")\n\n\n\n\nCode\nfit_ltp &lt;- as_cmdstan_fit(list.files(\"data/derived_data/ltp\", full.names = TRUE))\n\n\n\n\nCode\nfit_ltp\n\n\n     variable   mean median    sd   mad     q5    q95 rhat ess_bulk ess_tail\n lp__         839.56 840.30 18.10 17.46 809.03 867.37 1.01      436      710\n mu_theta0    328.15 328.04 14.77 14.57 304.05 353.38 1.00     2427     2750\n sigma_theta0   0.41   0.41  0.03  0.03   0.36   0.46 1.00     2494     2619\n theta0_p[1]  217.15 216.72 28.73 31.25 170.16 262.35 1.00     2588     2803\n theta0_p[2]  274.43 275.22 18.87 17.24 242.45 304.08 1.00     3463     1762\n theta0_p[3]  225.12 227.29 20.27 19.19 188.76 254.82 1.00     2909     2356\n theta0_p[4]  228.65 230.65 30.04 33.12 177.96 273.22 1.00     2929     3105\n theta0_p[5]  224.30 226.32 22.52 23.04 184.44 257.92 1.00     3166     2314\n theta0_p[6]  252.41 251.49 18.22 16.13 224.07 282.09 1.00     3374     2021\n theta0_p[7]  244.01 247.88 26.43 25.43 195.82 281.33 1.00     2617     2337\n\n # showing 10 of 2255 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\ndata_rec$preds &lt;- fit_ltp$summary(c(\"mu_rec\"), median)$median\nrmse &lt;- sqrt(mean((data_rec$preds - data_rec$stem)^2, na.rm = TRUE))\ndata_rec %&gt;%\n  ggplot(aes(preds, stem)) +\n  geom_point(alpha = 0.25) +\n  geom_abline(col = \"red\", linetype = \"dashed\") +\n  ggtitle(paste(\"RMSE =\", round(rmse, 2))) +\n  theme_bw()\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nggplot(data_rec, aes(rel_year, group = siteplot)) +\n  geom_point(aes(y = stem), alpha = .5) +\n  geom_line(aes(y = preds)) +\n  facet_wrap(~ site, scales = \"free\") +\n  theme_bw() +\n  xlab(\"\") +\n  theme(legend.position = \"bottom\")"
  },
  {
    "objectID": "31_test1.html#stp",
    "href": "31_test1.html#stp",
    "title": "Test 1",
    "section": "STP",
    "text": "STP\n\n\nCode\nstp &lt;- cmdstan_model(\"models/stp.stan\")\nfit &lt;- stp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  threads_per_chain = 1,\n  save_warmup = FALSE\n)\nunlink(\"data/derived_data/stp\", recursive = TRUE)\ndir.create(\"data/derived_data/stp\")\nfit$save_output_files(dir = \"data/derived_data/stp\")\n\n\n\n\nCode\nfit_stp &lt;- as_cmdstan_fit(list.files(\"data/derived_data/stp\", full.names = TRUE))\n\n\n\n\nCode\nfit_stp\n\n\n     variable    mean  median    sd   mad      q5     q95 rhat ess_bulk\n lp__         2444.87 2425.39 41.24 17.80 2406.39 2523.94 2.25        5\n mu_theta0     328.73  326.93 12.14 13.38  310.75  347.90 1.18       16\n sigma_theta0    0.45    0.45  0.03  0.03    0.40    0.50 1.25       12\n theta0_p[1]   216.20  219.00 15.68 18.11  188.11  237.22 1.82        6\n theta0_p[2]   274.45  273.78 15.48 17.86  249.43  298.42 1.40        8\n theta0_p[3]   217.00  215.11 15.19 18.92  194.93  241.08 1.61        6\n theta0_p[4]   212.42  210.13 10.74  9.51  199.90  232.70 1.26       13\n theta0_p[5]   222.38  222.97 12.99  9.93  195.85  244.16 1.56        7\n theta0_p[6]   253.37  252.27 13.77 10.46  230.71  279.50 1.39        8\n theta0_p[7]   230.35  229.54 12.12 14.26  213.16  249.66 1.36        9\n ess_tail\n       14\n       50\n       24\n       29\n       63\n       15\n       30\n       18\n       15\n      109\n\n # showing 10 of 2387 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\ndata_rec$preds &lt;- fit_stp$summary(c(\"mu_rec\"), median)$median\nrmse &lt;- sqrt(mean((data_rec$preds - data_rec$stem)^2, na.rm = TRUE))\ndata_rec %&gt;%\n  ggplot(aes(preds, stem)) +\n  geom_point(alpha = 0.25) +\n  geom_abline(col = \"red\", linetype = \"dashed\") +\n  ggtitle(paste(\"RMSE =\", round(rmse, 2))) +\n  theme_bw()\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nggplot(data_rec, aes(rel_year, group = siteplot)) +\n  geom_point(aes(y = stem), alpha = .5) +\n  geom_line(aes(y = preds)) +\n  facet_wrap(~ site, scales = \"free\") +\n  theme_bw() +\n  xlab(\"\") +\n  theme(legend.position = \"bottom\")"
  },
  {
    "objectID": "31_test1.html#horseshoe",
    "href": "31_test1.html#horseshoe",
    "title": "Test 1",
    "section": "Horseshoe",
    "text": "Horseshoe"
  },
  {
    "objectID": "31_test1.html#comparison",
    "href": "31_test1.html#comparison",
    "title": "Test 1",
    "section": "Comparison",
    "text": "Comparison\n\n\nCode\nloo_compare(fit_ltp$loo(), \n            fit_stp$loo()) %&gt;% \n  kable()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nelpd_diff\nse_diff\nelpd_loo\nse_elpd_loo\np_loo\nse_p_loo\nlooic\nse_looic\n\n\n\n\nmodel2\n0.00000\n0.000000\n427.8418\n6.760252\n11.14943\n0.4026600\n-855.6837\n13.52050\n\n\nmodel1\n-12.10873\n4.810827\n415.7331\n6.662066\n11.66986\n0.3998528\n-831.4662\n13.32413"
  }
]