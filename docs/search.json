[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "modelling",
    "section": "",
    "text": "Introduction\nmodelling is a sub-project of the BioForest project aimed at species related data (correct names, functional traits, phylogeny) as part of the data preparation for data preparation within the project."
  },
  {
    "objectID": "index.html#usage",
    "href": "index.html#usage",
    "title": "modelling",
    "section": "Usage",
    "text": "Usage\nAll modelling analyses rely on the quarto documents (files.qmd) that can be run with R and associated environment defined with renv."
  },
  {
    "objectID": "index.html#project",
    "href": "index.html#project",
    "title": "modelling",
    "section": "Project",
    "text": "Project\nmodelling includes:\n\nAnalyse of the data with associated documentation and figures:\n\nReproductive analyses in files.qmd\nResulting pages in docs/\nDocument structure definition in _quarto.yml\n\nData in data/ with:\n\nAll raw data in raw_data/\nAll derived data in derived_sata/\n\nStan Bayesian models in models/\nR scripts with funtions in r/\nIntermediary files in outputs/\nFigures in figures/\nR environment definition with renv in renv/ and renv/lock\nR files (.Rbuildignore , .Rdata , .Rprofile , .Rhistory, .lintr)\nGit and GitHub files (.gitignore , .github/)\nProject documentation (README.qmd , README.md , NEWS.md, LICENSE )"
  },
  {
    "objectID": "index.html#contribution",
    "href": "index.html#contribution",
    "title": "modelling",
    "section": "Contribution",
    "text": "Contribution\nYou can contribute to the project by forking the repository on github and cloning the fork to your machine using several options, including GitHub desktop GUI. Further informations on contribution are detailed in the online document: https://bioforest-project.github.io/data_preparation/98_contributing.html."
  },
  {
    "objectID": "index.html#help",
    "href": "index.html#help",
    "title": "modelling",
    "section": "Help",
    "text": "Help\nPlease preferentially create an issue on GitHub for any questions, bugs or help needed regarding modelling: https://github.com/Bioforest-project/modelling/issues . You may however reach us by mail with people from the core group (see below)."
  },
  {
    "objectID": "index.html#core-group",
    "href": "index.html#core-group",
    "title": "modelling",
    "section": "Core group",
    "text": "Core group\n\nSylvain Schmitt (sylvain.schmitt@cirad.fr)\nCamille Piponiot-Laroche (camille.piponiot-laroche@cirad.fr)\nBruno HÃ©rault (bruno.herault@cirad.fr)\n\nThe whole group consist of participants to the Bioforest project."
  },
  {
    "objectID": "11_observations.html",
    "href": "11_observations.html",
    "title": "Observations",
    "section": "",
    "text": "Data exploration.\n\n\nCode\nmetadata &lt;- read_sheet(\"https://docs.google.com/spreadsheets/d/1fq2owxMBLBwwibcdw2uQQFxnIhsMbaH4Qcj_xUwVvSQ/edit?gid=0#gid=0\", col_types = \"c\") %&gt;% # nolint\n  rename_all(tolower) %&gt;%\n  select(site, plot, treatment, year_of_harvest) %&gt;%\n  separate(year_of_harvest, \"year_of_harvest\") %&gt;%\n  mutate(year_of_harvest = as.numeric(year_of_harvest)) %&gt;%\n  rename(harvest_year = year_of_harvest) %&gt;%\n  mutate(treatment = ifelse(\n    treatment %in% c(\"control\", \"Control\", \"Natural_Forest\"),\n    \"control\", \"logged\"\n  )) %&gt;%\n  group_by(site) %&gt;%\n  mutate(harvest_year_min = min(harvest_year, na.rm = TRUE)) %&gt;%\n  mutate(harvest_year = ifelse(site == \"Paracou\", 1986, harvest_year)) %&gt;%\n  mutate(harvest_year_min = ifelse(site == \"Paracou\", 1986, harvest_year_min))\ndata &lt;- read_csv(\"data/raw_data/aggregated_data.csv\") %&gt;%\n  rename_all(tolower) %&gt;%\n  left_join(read_tsv(\"data/raw_data/environment.tsv\") %&gt;%\n              gather(env, env_value, -site, -plot)) %&gt;%\n  left_join(read_csv(\"data/raw_data/plot_area.csv\") %&gt;%\n              rename_all(tolower) %&gt;%\n              select(site, plot, plotarea) %&gt;%\n              unique()) %&gt;%\n  left_join(metadata) %&gt;%\n  filter(!(site %in% c(\"Peteco\", \"Bafog\", \"Tene\", \"Montagne_Tortue\"))) %&gt;%\n  filter(!(site == \"Kabo\" & year &lt; 1980)) %&gt;%\n  mutate(rel_year = ifelse(treatment == \"control\",\n    year - harvest_year_min,\n    year - harvest_year\n  ))\nwrite_tsv(data, \"data/derived_data/data.tsv\")\n\n\n\n\nCode\nread_tsv(\"data/derived_data/data.tsv\") %&gt;%\n  ggplot(aes(year, value, group = paste(site, plot))) +\n  geom_line() +\n  theme_bw() +\n  facet_wrap(~variable, scales = \"free_y\") +\n  theme(\n    axis.title = element_blank(),\n    strip.text = element_text(size = 6)\n  )\n\n\n\n\n\nDummy figure 1 - traj.\n\n\n\n\n\n\nCode\nread_tsv(\"data/derived_data/data.tsv\") %&gt;%\n  filter(variable == \"agb\", env == \"cwd\") %&gt;%\n  na.omit() %&gt;%\n  ggplot(aes(year, value, group = paste(site, plot), col = env_value)) +\n  geom_line() +\n  theme_bw() +\n  scale_color_viridis_c(\"Climate\\nwater\\ndeficit\\n[ mm ]\") +\n  xlab(\"\") +\n  ylab(expression(\"AGB [\" ~ Mg ~ ha^{\n    -1\n  } ~ \"]\"))\n\n\n\n\n\nDummy figure 2 - env.\n\n\n\n\n\n\nCode\nmake_fig &lt;- function(var) {\n  g &lt;- read_tsv(\"data/derived_data/data.tsv\") %&gt;%\n    filter(variable == var) %&gt;%\n    ggplot(aes(year, value, group = paste(site, plot), col = treatment)) +\n    geom_line() +\n    theme_bw() +\n    xlab(\"\") +\n    ylab(\"\") +\n    facet_wrap(~site, scales = \"free\") +\n    geom_vline(aes(xintercept = harvest_year)) +\n    theme(legend.position = \"bottom\") +\n    ggtitle(var)\n  ggsave(plot = g, filename = paste0(\"figures/obs/\", var, \".png\"))\n}\nunique(read_tsv(\"data/derived_data/data.tsv\")$variable) %&gt;%\n  lapply(make_fig)\n\n\n\n\nCode\nread_tsv(\"data/derived_data/data.tsv\") %&gt;%\n  filter(variable == \"agb\") %&gt;%\n  ggplot(aes(year, log(value), group = paste(site, plot), col = treatment)) +\n  geom_line() +\n  theme_bw() +\n  xlab(\"\") +\n  ylab(expression(\"AGB [\" ~ Mg ~ ha^{\n    -1\n  } ~ \"]\")) +\n  facet_wrap(~site, scales = \"free\") +\n  geom_vline(aes(xintercept = harvest_year)) +\n  theme(legend.position = \"bottom\")\n\n\n\n\n\nDummy figure 3 - treatment."
  },
  {
    "objectID": "21_models.html#ltp",
    "href": "21_models.html#ltp",
    "title": "Models",
    "section": "LTP",
    "text": "LTP\nLong term process only model:\n\\[\n\\begin{align}\n\\mu_{rec} = \\theta_{0,p} + (\\theta_{\\infty,s} - \\theta_{0,p}) \\times LTP \\\\\nLTP = 1 - e^{-\\lambda_p \\times time}\n\\end{align}\n\\]\n\n\nCode\nltp &lt;- function(time, dist, thetainf, lambda) {\n  theta0 &lt;- thetainf * dist\n  ltp &lt;- 1 - exp(-lambda * time)\n  return(theta0 + (thetainf - theta0) * (ltp))\n}\ndata.frame(time = seq(0.1, 50, length.out = 100)) %&gt;%\n  mutate(y_ltp = ltp(time, dist = 0.5, thetainf = 20, lambda = 0.05)) %&gt;%\n  bind_rows(data.frame(time = 0, y_stp = 20, y_ltp = 20)) %&gt;%\n  ggplot(aes(time)) +\n  geom_line(aes(y = y_ltp)) +\n  theme_bw() +\n  annotate(\"text\",\n    x = 52, y = 19.5, label = \"theta[Inf]\",\n    col = \"#9ea1d4\", parse = TRUE, size = 5\n  ) +\n  annotate(\"text\",\n    x = 20, y = 15, label = \"lambda\",\n    col = \"#a8d2d1\", parse = TRUE, size = 5\n  ) +\n  annotate(\"text\",\n    x = -4, y = 15, label = \"dist\",\n    col = \"#fc8a8a\", parse = TRUE, size = 5\n  ) +\n  theme(axis.title = element_blank()) +\n  geom_segment(aes(x = -2, y = 10, xend = -2, yend = 20),\n    arrow = arrow(length = unit(0.2, \"cm\")), col = \"#fc8a8a\"\n  ) +\n  geom_segment(aes(x = -2, y = 20, xend = -2, yend = 10),\n    arrow = arrow(length = unit(0.2, \"cm\")), col = \"#fc8a8a\"\n  )\n\n\n\n\n\nLTP proj with pars."
  },
  {
    "objectID": "21_models.html#stp",
    "href": "21_models.html#stp",
    "title": "Models",
    "section": "STP",
    "text": "STP\nLong term and short term processes model based on disturbance index \\(dist\\):\n\\[\n\\begin{align}\n\\mu_{rec} = \\theta_{0,p} + (\\theta_{\\infty,s} - \\theta_{0,p}) \\times (LTP+STP) \\\\\nLTP = 1 - e^{-\\lambda_p \\times time} \\\\\nSTP = \\delta_p \\times (\\frac{time}{\\tau_s} \\times e^{1-\\frac{time}{\\tau_s}})^2 \\\\\n\\theta_{0,p} = \\theta_{\\infty,s} \\times dist_p\n\\end{align}\n\\]\n\n\nCode\nstp &lt;- function(time, dist, thetainf, lambda, tau, delta) {\n  theta0 &lt;- thetainf * dist\n  ltp &lt;- 1 - exp(-lambda * time)\n  stp &lt;- delta * (time / tau * exp(1 - time / tau))^2\n  return(theta0 + (thetainf - theta0) * (ltp + stp))\n}\ndata.frame(time = seq(0.1, 50, length.out = 100)) %&gt;%\n  mutate(y_stp = stp(time,\n    dist = 0.5, thetainf = 20, lambda = 0.05,\n    tau = 5, delta = 1\n  )) %&gt;%\n  mutate(y_ltp = ltp(time, dist = 0.5, thetainf = 20, lambda = 0.05)) %&gt;%\n  bind_rows(data.frame(time = 0, y_stp = 20, y_ltp = 20)) %&gt;%\n  ggplot(aes(time)) +\n  geom_line(aes(y = y_ltp), col = \"grey\") +\n  geom_line(aes(y = y_stp)) +\n  theme_bw() +\n  annotate(\"text\",\n    x = 52, y = 19.5, label = \"theta[Inf]\",\n    col = \"#9ea1d4\", parse = TRUE, size = 5\n  ) +\n  annotate(\"text\",\n    x = 20, y = 15, label = \"lambda\",\n    col = \"#a8d2d1\", parse = TRUE, size = 5\n  ) +\n  annotate(\"text\",\n    x = -4, y = 15, label = \"dist\",\n    col = \"#fc8a8a\", parse = TRUE, size = 5\n  ) +\n  theme(axis.title = element_blank()) +\n  geom_segment(aes(x = -2, y = 10, xend = -2, yend = 20),\n    arrow = arrow(length = unit(0.2, \"cm\")), col = \"#fc8a8a\"\n  ) +\n  geom_segment(aes(x = -2, y = 20, xend = -2, yend = 10),\n    arrow = arrow(length = unit(0.2, \"cm\")), col = \"#fc8a8a\"\n  ) +\n  annotate(\"text\",\n    x = 6, y = 11.3, label = \"tau\",\n    col = \"#f2e5a9\", parse = TRUE, size = 5\n  ) +\n  annotate(\"text\",\n    x = 5, y = 17.5, label = \"delta\",\n    col = \"#a7d6ac\", parse = TRUE, size = 5\n  ) +\n  geom_segment(aes(x = 6, y = 13, xend = 6, yend = 22),\n    arrow = arrow(length = unit(0.2, \"cm\")), col = \"#a7d6ac\"\n  ) +\n  geom_segment(aes(x = 6, y = 22, xend = 6, yend = 13),\n    arrow = arrow(length = unit(0.2, \"cm\")), col = \"#a7d6ac\"\n  ) +\n  geom_segment(aes(x = 6, y = 11, xend = 6, yend = 10),\n    arrow = arrow(length = unit(0.2, \"cm\")), col = \"#f2e5a9\"\n  ) +\n  theme(axis.title = element_blank())\n\n\n\n\n\nSTP proj with pars.\n\n\n\n\nChoices:\n\nUsing the log of y and a normal distribution centred on log(mu)\nCauchy hyperdist\nForced dist_p&lt;1\nBounds of theta\nFree tau\nFree delta\n\nâ ï¸ Hump is mathematically opposed to the sign of dist_p-1."
  },
  {
    "objectID": "30_trajectories.html",
    "href": "30_trajectories.html",
    "title": "Trajectories",
    "section": "",
    "text": "This section develop trajectories per attributes."
  },
  {
    "objectID": "31_stem.html#data",
    "href": "31_stem.html#data",
    "title": "Stem",
    "section": "Data",
    "text": "Data\n\n\nCode\nvar &lt;- \"nstem\"\nif (!exists(file.path(\"chains\", var))) {\n  dir.create(file.path(\"chains\", var))\n}\nlab &lt;- expression(\"Stem [ trees\" ~ ha^{\n  -1\n} ~ \"]\")\ndata &lt;- read_tsv(\"data/derived_data/data.tsv\") %&gt;%\n  filter(variable == var) %&gt;%\n  unique() %&gt;%\n  rename(y = value) %&gt;%\n  select(-env, -env_value, -variable) %&gt;%\n  unique() %&gt;%\n  filter(!is.infinite(harvest_year_min)) %&gt;%\n  mutate(sitenum = as.numeric(as.factor(site)))\ndata_rec &lt;- data %&gt;%\n  filter(treatment == \"logged\", rel_year &gt; 2) %&gt;%\n  mutate(plotnum = as.numeric(as.factor(paste0(site, \"_\", plot))))\ndata_old &lt;- data %&gt;% filter(treatment == \"control\")\ndata_pre &lt;- data %&gt;% filter(rel_year &lt;= 0)\nind_rec &lt;- data_rec %&gt;%\n  select(site, plot, sitenum, plotnum) %&gt;%\n  unique() %&gt;%\n  arrange(plotnum)\nmdata &lt;- list(\n  n_rec = nrow(data_rec),\n  n_old = nrow(data_old),\n  n_pre = nrow(data_pre),\n  n_site = max(data_rec$sitenum),\n  n_plot_rec = max(data_rec$plotnum),\n  y_rec = data_rec$y,\n  y_old = data_old$y,\n  y_pre = data_pre$y,\n  time = data_rec$rel_year - 3,\n  site_rec = data_rec$sitenum,\n  site_old = data_old$sitenum,\n  site_pre = data_pre$sitenum,\n  plot_rec = data_rec$plotnum,\n  site_plot_rec = ind_rec$sitenum,\n  time_max = 60,\n  dist_bounds = c(0.1, 1),\n  delta_bounds = c(0, 5),\n  mu_thetaInf_bounds = c(100, 1000),\n  thetaInf_s_bounds = c(50, 2000)\n)\n\n\n\n\nCode\nggplot(data, aes(rel_year, y, group = paste(site, plot), col = treatment)) +\n  geom_line() +\n  facet_wrap(~site) +\n  theme_bw() +\n  xlab(\"\") +\n  ylab(lab) +\n  theme(legend.position = \"bottom\") +\n  scale_color_discrete(\"\")\n\n\n\n\n\nModelled trajectories."
  },
  {
    "objectID": "31_stem.html#ltp",
    "href": "31_stem.html#ltp",
    "title": "Stem",
    "section": "LTP",
    "text": "LTP\n\n\nCode\nltp &lt;- cmdstan_model(\"models/ltp.stan\")\npath &lt;- file.path(\"chains\", var, \"ltp\")\nunlink(path, recursive = TRUE)\ndir.create(path)\nfit_ltp &lt;- ltp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = path\n)\n\n\n\n\nCode\npath &lt;- file.path(\"chains\", var, \"ltp\")\nfit_ltp &lt;- as_cmdstan_fit(list.files(path, full.names = TRUE))\nfit_ltp\n\n\n   variable    mean  median    sd   mad      q5     q95 rhat ess_bulk ess_tail\n lp__       2276.91 2276.18 18.48 18.29 2247.58 2307.73 1.00      389      812\n mu_dist       0.80    0.80  0.02  0.02    0.76    0.83 1.00      580     1492\n sigma_dist    0.09    0.08  0.01  0.01    0.07    0.11 1.00     2178     2881\n dist_p[1]     0.79    0.80  0.07  0.06    0.68    0.89 1.00     1363     1781\n dist_p[2]     0.87    0.87  0.06  0.06    0.77    0.97 1.00     1679     1201\n dist_p[3]     0.78    0.78  0.05  0.05    0.69    0.86 1.00     2284     2086\n dist_p[4]     0.81    0.81  0.07  0.06    0.69    0.91 1.00     1868     1496\n dist_p[5]     0.78    0.79  0.05  0.05    0.69    0.87 1.00     2400     2280\n dist_p[6]     0.83    0.83  0.05  0.05    0.74    0.91 1.00     2680     1742\n dist_p[7]     0.83    0.83  0.06  0.06    0.73    0.93 1.00     1701     1573\n\n # showing 10 of 9054 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\npvo_fig(data_rec, data_pre, fit_ltp)\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nproj_fig(data_rec, data_pre, data_old, fit_ltp, lab)\n\n\n\n\n\nPredicted trajectories."
  },
  {
    "objectID": "31_stem.html#stp",
    "href": "31_stem.html#stp",
    "title": "Stem",
    "section": "STP",
    "text": "STP\n\n\nCode\nstp &lt;- cmdstan_model(\"models/stp.stan\")\npath &lt;- file.path(\"chains\", var, \"stp\")\nunlink(path, recursive = TRUE)\ndir.create(path)\nfit_stp &lt;- stp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = path\n)\n\n\n\n\nCode\npath &lt;- file.path(\"chains\", var, \"stp\")\nfit_stp &lt;- as_cmdstan_fit(list.files(path, full.names = TRUE))\nfit_stp\n\n\n   variable    mean  median    sd   mad      q5     q95 rhat ess_bulk ess_tail\n lp__       2688.67 2688.19 24.07 23.74 2649.61 2729.58 1.01      476      729\n mu_dist       0.74    0.74  0.02  0.02    0.71    0.78 1.00     1772     2440\n sigma_dist    0.10    0.09  0.01  0.01    0.07    0.12 1.00     2873     3229\n dist_p[1]     0.71    0.71  0.04  0.04    0.63    0.78 1.00     4166     2953\n dist_p[2]     0.87    0.87  0.06  0.06    0.78    0.96 1.00     2546     1452\n dist_p[3]     0.73    0.73  0.04  0.04    0.67    0.80 1.00     3282     2808\n dist_p[4]     0.73    0.73  0.05  0.05    0.66    0.81 1.00     4255     2816\n dist_p[5]     0.74    0.74  0.04  0.04    0.67    0.81 1.00     3668     2502\n dist_p[6]     0.81    0.81  0.05  0.05    0.74    0.89 1.00     3146     2621\n dist_p[7]     0.77    0.77  0.05  0.05    0.70    0.85 1.00     4153     2507\n\n # showing 10 of 10026 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\npvo_fig(data_rec, data_pre, fit_stp)\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nproj_fig(data_rec, data_pre, data_old, fit_stp, lab)\n\n\n\n\n\nPredicted trajectories."
  },
  {
    "objectID": "31_stem.html#comparison",
    "href": "31_stem.html#comparison",
    "title": "Stem",
    "section": "Comparison",
    "text": "Comparison\n\n\nCode\nfit_ltp$summary(\"lambda_p\", \"mean\") %&gt;%\n  rename(ltp = mean) %&gt;%\n  left_join(\n    fit_stp$summary(\"lambda_p\", \"mean\") %&gt;%\n      rename(stp = mean)\n  ) %&gt;%\n  separate(variable, c(\"lambda\", \"p\", \"plotnum\"), convert = TRUE) %&gt;%\n  left_join(ind_rec) %&gt;%\n  ggplot(aes(ltp, stp, col = site)) +\n  geom_abline(linetype = \"dashed\") +\n  geom_point() +\n  theme_bw() +\n  scale_y_log10() +\n  scale_x_log10() +\n  ggpubr::stat_cor(aes(group = NA)) +\n  scale_color_discrete(\"\") +\n  xlab(\"LTP\") + ylab(\"STP\")\n\n\n\n\n\nlambda comparison across models."
  },
  {
    "objectID": "32_wd.html#data",
    "href": "32_wd.html#data",
    "title": "WD",
    "section": "Data",
    "text": "Data\n\n\nCode\nvar &lt;- \"WD_cwm_ba\"\nif (!exists(file.path(\"chains\", var))) {\n  dir.create(file.path(\"chains\", var))\n}\nlab &lt;- expression(\"WD [ g\" ~ cm^{\n  -3\n} ~ \"]\")\ndata &lt;- read_tsv(\"data/derived_data/data.tsv\") %&gt;%\n  filter(variable == var) %&gt;%\n  unique() %&gt;%\n  rename(stem = value) %&gt;%\n  select(-env, -env_value, -variable) %&gt;%\n  unique() %&gt;%\n  filter(!is.infinite(harvest_year_min)) %&gt;%\n  mutate(sitenum = as.numeric(as.factor(site)))\ndata_rec &lt;- data %&gt;%\n  filter(treatment == \"logged\", rel_year &gt; 2) %&gt;%\n  mutate(plotnum = as.numeric(as.factor(paste0(site, \"_\", plot))))\ndata_old &lt;- data %&gt;% filter(treatment == \"control\")\ndata_pre &lt;- data %&gt;% filter(rel_year &lt;= 0)\nind_rec &lt;- data_rec %&gt;%\n  select(site, plot, sitenum, plotnum) %&gt;%\n  unique() %&gt;%\n  arrange(plotnum)\nmdata &lt;- list(\n  n_rec = nrow(data_rec),\n  n_old = nrow(data_old),\n  n_pre = nrow(data_pre),\n  n_site = max(data_rec$sitenum),\n  n_plot_rec = max(data_rec$plotnum),\n  stem_rec = data_rec$stem,\n  stem_old = data_old$stem,\n  stem_pre = data_pre$stem,\n  time = data_rec$rel_year - 3,\n  site_rec = data_rec$sitenum,\n  site_old = data_old$sitenum,\n  site_pre = data_pre$sitenum,\n  plot_rec = data_rec$plotnum,\n  site_plot_rec = ind_rec$sitenum,\n  dist_bounds = c(0.1, 1.5),\n  delta_bounds = c(0, 2),\n  mu_thetaInf_bounds = c(0.5, 1.3),\n  thetaInf_s_bounds = c(0.5, 1.3)\n)\n\n\n\n\nCode\nggplot(data, aes(rel_year, stem, group = paste(site, plot), col = treatment)) +\n  geom_line() +\n  facet_wrap(~site) +\n  theme_bw() +\n  xlab(\"\") +\n  ylab(lab) +\n  theme(legend.position = \"bottom\") +\n  scale_color_discrete(\"\")\n\n\n\n\n\nModelled trajectories."
  },
  {
    "objectID": "32_wd.html#ltp",
    "href": "32_wd.html#ltp",
    "title": "WD",
    "section": "LTP",
    "text": "LTP\n\n\nCode\nltp &lt;- cmdstan_model(\"models/ltp.stan\")\npath &lt;- file.path(\"chains\", var, \"ltp\")\nunlink(path, recursive = TRUE)\ndir.create(path)\nfit_ltp &lt;- ltp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = path\n)\n\n\n\n\nCode\npath &lt;- file.path(\"chains\", var, \"ltp\")\nfit_ltp &lt;- as_cmdstan_fit(list.files(path, full.names = TRUE))\ndata_old &lt;- data_old %&gt;%\n  group_by(site) %&gt;%\n  mutate(rel_year = max(rel_year + 2))\ndata_rec$preds &lt;- fit_ltp$summary(c(\"mu_rec\"), median)$median\ndata_pre$preds &lt;- fit_ltp$summary(c(\"mu_pre\"), median)$median\nfit_ltp\n\n\n   variable    mean  median    sd   mad      q5     q95 rhat ess_bulk ess_tail\n lp__       4875.64 4873.84 41.62 41.65 4812.29 4946.70 1.07       56       40\n mu_dist       0.97    0.97  0.00  0.00    0.96    0.98 1.00      897      670\n sigma_dist    0.03    0.03  0.00  0.00    0.02    0.03 1.01     1175     1061\n dist_p[1]     1.00    1.00  0.02  0.02    0.98    1.03 1.00      787      893\n dist_p[2]     0.96    0.96  0.01  0.01    0.94    0.98 1.00     1199      908\n dist_p[3]     1.01    1.01  0.02  0.02    0.99    1.04 1.00     1059     1856\n dist_p[4]     0.98    0.98  0.01  0.01    0.96    1.00 1.00      939     1402\n dist_p[5]     0.98    0.98  0.01  0.01    0.96    1.00 1.00      908      935\n dist_p[6]     0.99    0.99  0.01  0.01    0.96    1.01 1.00      998     1310\n dist_p[7]     0.99    0.99  0.01  0.01    0.97    1.01 1.00      723      723\n\n # showing 10 of 3545 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\npvo_fig(data_rec, data_pre)\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nltp_fig(data_rec, data_pre, data_old, fit_ltp, lab)\n\n\n\n\n\nPredicted trajectories."
  },
  {
    "objectID": "32_wd.html#stp",
    "href": "32_wd.html#stp",
    "title": "WD",
    "section": "STP",
    "text": "STP\n\n\nCode\nstp &lt;- cmdstan_model(\"models/stp.stan\")\npath &lt;- file.path(\"chains\", var, \"stp\")\nunlink(path, recursive = TRUE)\ndir.create(path)\nfit_stp &lt;- stp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = path\n)\n\n\n\n\nCode\npath &lt;- file.path(\"chains\", var, \"stp\")\nfit_stp &lt;- as_cmdstan_fit(list.files(path, full.names = TRUE))\ndata_old &lt;- data_old %&gt;%\n  group_by(site) %&gt;%\n  mutate(rel_year = max(rel_year + 2))\ndata_rec$preds &lt;- fit_stp$summary(c(\"mu_rec\"), median)$median\ndata_pre$preds &lt;- fit_stp$summary(c(\"mu_pre\"), median)$median\nfit_stp\n\n\n   variable    mean  median     sd   mad      q5     q95 rhat ess_bulk ess_tail\n lp__       4651.28 4621.22 107.13 85.54 4535.54 4851.70 2.22        5       34\n mu_dist       1.02    1.03   0.03  0.01    0.96    1.05 1.57        6       35\n sigma_dist    0.04    0.04   0.01  0.01    0.02    0.05 1.44        7       70\n dist_p[1]     1.06    1.07   0.04  0.03    0.98    1.11 1.53        7       31\n dist_p[2]     0.98    0.98   0.03  0.03    0.94    1.02 1.38        8       43\n dist_p[3]     1.05    1.06   0.03  0.03    1.00    1.09 1.51        7       32\n dist_p[4]     1.03    1.04   0.04  0.03    0.96    1.08 1.53        7       31\n dist_p[5]     1.01    1.02   0.03  0.03    0.96    1.05 1.50        7       31\n dist_p[6]     1.02    1.02   0.03  0.03    0.97    1.06 1.48        7       30\n dist_p[7]     1.03    1.04   0.04  0.03    0.96    1.08 1.53        7       27\n\n # showing 10 of 4517 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\npvo_fig(data_rec, data_pre)\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nstp_fig(data_rec, data_pre, data_old, fit_stp, lab)\n\n\n\n\n\nPredicted trajectories.\n\n\n\n\n\n\nCode\nfit_stp$draws(\"dist_p\") %&gt;%\n  mcmc_intervals() +\n  geom_vline(xintercept = 1)\n\n\n\n\n\nPosteriors delta_p."
  },
  {
    "objectID": "32_wd.html#comparison",
    "href": "32_wd.html#comparison",
    "title": "WD",
    "section": "Comparison",
    "text": "Comparison\n\n\nCode\nloo_compare(\n  list(\n    ltp = fit_ltp$loo(),\n    stp = fit_stp$loo()\n  )\n) %&gt;%\n  kable()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nelpd_diff\nse_diff\nelpd_loo\nse_elpd_loo\np_loo\nse_p_loo\nlooic\nse_looic\n\n\n\n\nltp\n0.0000\n0.000000\n407.2019\n7.312131\n10.52453\n0.3523903\n-814.4038\n14.62426\n\n\nstp\n-22.5406\n5.708076\n384.6613\n5.031262\n28.74440\n0.7287073\n-769.3226\n10.06252"
  },
  {
    "objectID": "33_agb.html#data",
    "href": "33_agb.html#data",
    "title": "AGB",
    "section": "Data",
    "text": "Data\n\nWe removed Kibale for now.\n\n\n\nCode\nvar &lt;- \"agb\"\nif (!exists(file.path(\"chains\", var))) {\n  dir.create(file.path(\"chains\", var))\n}\nlab &lt;- expression(\"AGB [ t\" ~ ha^{\n  -1\n} ~ \"]\")\ndata &lt;- read_tsv(\"data/derived_data/data.tsv\") %&gt;%\n  filter(variable == var, site != \"Kibale\") %&gt;%\n  unique() %&gt;%\n  rename(stem = value) %&gt;%\n  select(-env, -env_value, -variable) %&gt;%\n  unique() %&gt;%\n  filter(!is.infinite(harvest_year_min)) %&gt;%\n  mutate(sitenum = as.numeric(as.factor(site)))\ndata_rec &lt;- data %&gt;%\n  filter(treatment == \"logged\", rel_year &gt; 2) %&gt;%\n  mutate(plotnum = as.numeric(as.factor(paste0(site, \"_\", plot))))\ndata_old &lt;- data %&gt;%\n  filter(treatment == \"control\") %&gt;%\n  mutate(plotoldnum = as.numeric(as.factor(paste0(site, \"_\", plot))))\ndata_pre &lt;- data %&gt;% filter(rel_year &lt;= 0)\nind_rec &lt;- data_rec %&gt;%\n  select(site, plot, sitenum, plotnum) %&gt;%\n  unique() %&gt;%\n  arrange(plotnum)\nmdata &lt;- list(\n  n_rec = nrow(data_rec),\n  n_old = nrow(data_old),\n  n_pre = nrow(data_pre),\n  n_site = max(data_rec$sitenum),\n  n_plot_rec = max(data_rec$plotnum),\n  stem_rec = data_rec$stem,\n  stem_old = data_old$stem,\n  stem_pre = data_pre$stem,\n  time = data_rec$rel_year - 3,\n  site_rec = data_rec$sitenum,\n  site_old = data_old$sitenum,\n  site_pre = data_pre$sitenum,\n  plot_rec = data_rec$plotnum,\n  site_plot_rec = ind_rec$sitenum,\n  dist_bounds = c(0.1, 1),\n  delta_bounds = c(0, 5),\n  mu_thetaInf_bounds = c(100, 500),\n  thetaInf_s_bounds = c(50, 1000)\n)\n\n\n\n\nCode\nggplot(data, aes(rel_year, stem, group = paste(site, plot), col = treatment)) +\n  geom_line() +\n  facet_wrap(~site) +\n  theme_bw() +\n  xlab(\"\") +\n  ylab(lab) +\n  theme(legend.position = \"bottom\") +\n  scale_color_discrete(\"\")\n\n\n\n\n\nModelled trajectories."
  },
  {
    "objectID": "33_agb.html#ltp",
    "href": "33_agb.html#ltp",
    "title": "AGB",
    "section": "LTP",
    "text": "LTP\n\n\nCode\nltp &lt;- cmdstan_model(\"models/ltp.stan\")\npath &lt;- file.path(\"chains\", var, \"ltp\")\nunlink(path, recursive = TRUE)\ndir.create(path)\nfit_ltp &lt;- ltp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = path\n)\n\n\n\n\nCode\npath &lt;- file.path(\"chains\", var, \"ltp\")\nfit_ltp &lt;- as_cmdstan_fit(list.files(path, full.names = TRUE))\ndata_old &lt;- data_old %&gt;%\n  group_by(site) %&gt;%\n  mutate(rel_year = max(rel_year + 2))\ndata_rec$preds &lt;- fit_ltp$summary(c(\"mu_rec\"), median)$median\ndata_pre$preds &lt;- fit_ltp$summary(c(\"mu_pre\"), median)$median\nfit_ltp\n\n\n   variable    mean  median    sd   mad      q5     q95 rhat ess_bulk ess_tail\n lp__       2518.51 2519.05 13.07 13.25 2496.81 2539.45 1.00      977     1726\n mu_dist       0.55    0.55  0.02  0.02    0.51    0.59 1.00     4285     3041\n sigma_dist    0.12    0.12  0.02  0.02    0.10    0.15 1.00     6074     2953\n dist_p[1]     0.51    0.51  0.03  0.03    0.46    0.56 1.00     3923     2999\n dist_p[2]     0.71    0.71  0.03  0.03    0.66    0.75 1.00     2838     3113\n dist_p[3]     0.69    0.69  0.05  0.05    0.60    0.78 1.00     4469     1568\n dist_p[4]     0.70    0.70  0.07  0.06    0.58    0.80 1.00     5055     2676\n dist_p[5]     0.67    0.67  0.03  0.03    0.62    0.71 1.00     2624     2836\n dist_p[6]     0.82    0.83  0.06  0.06    0.73    0.92 1.00     3451     2298\n dist_p[7]     0.82    0.82  0.06  0.06    0.73    0.91 1.00     3719     2186\n\n # showing 10 of 3163 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\npvo_fig(data_rec, data_pre)\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nltp_fig(data_rec, data_pre, data_old, fit_ltp, lab)\n\n\n\n\n\nPredicted trajectories."
  },
  {
    "objectID": "33_agb.html#stp",
    "href": "33_agb.html#stp",
    "title": "AGB",
    "section": "STP",
    "text": "STP\n\n\nCode\nstp &lt;- cmdstan_model(\"models/stp.stan\")\npath &lt;- file.path(\"chains\", var, \"stp\")\nunlink(path, recursive = TRUE)\ndir.create(path)\nfit_stp &lt;- stp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = path\n)\n\n\n\n\nCode\npath &lt;- file.path(\"chains\", var, \"stp\")\nfit_stp &lt;- as_cmdstan_fit(list.files(path, full.names = TRUE))\ndata_old &lt;- data_old %&gt;%\n  group_by(site) %&gt;%\n  mutate(rel_year = max(rel_year + 2))\ndata_rec$preds &lt;- fit_stp$summary(c(\"mu_rec\"), median)$median\ndata_pre$preds &lt;- fit_stp$summary(c(\"mu_pre\"), median)$median\nfit_stp\n\n\n   variable    mean  median    sd   mad      q5     q95 rhat ess_bulk ess_tail\n lp__       2655.89 2657.40 20.23 20.36 2620.47 2685.48 1.11       26       35\n mu_dist       0.61    0.61  0.03  0.03    0.56    0.66 1.01     1475     3064\n sigma_dist    0.14    0.14  0.02  0.02    0.11    0.17 1.00     4412     3157\n dist_p[1]     0.50    0.50  0.03  0.03    0.46    0.55 1.01     2675     2216\n dist_p[2]     0.66    0.67  0.06  0.05    0.54    0.73 1.01      504     1384\n dist_p[3]     0.70    0.70  0.04  0.04    0.63    0.76 1.00     3090     2143\n dist_p[4]     0.67    0.69  0.08  0.06    0.51    0.76 1.01      737     1435\n dist_p[5]     0.67    0.67  0.02  0.02    0.63    0.70 1.01     1619     2144\n dist_p[6]     0.82    0.82  0.05  0.05    0.74    0.90 1.00     2865     1959\n dist_p[7]     0.82    0.82  0.05  0.05    0.74    0.89 1.00     2715     2031\n\n # showing 10 of 4029 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\npvo_fig(data_rec, data_pre)\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nstp_fig(data_rec, data_pre, data_old, fit_stp, lab)\n\n\n\n\n\nPredicted trajectories.\n\n\n\n\n\n\nCode\nt &lt;- fit_stp$summary(\n  c(\n    \"mu_dist\", \"dist_p\", \"sigma_dist\",\n    \"mu_lambda\", \"sigma_lambda\", \"lambda_p\",\n    \"mu_thetaInf\", \"sigma_thetaInf\", \"thetaInf_s\",\n    \"mu_delta\", \"delta_p\", \"sigma_delta\",\n    \"mu_tau\", \"tau_s\", \"sigma_tau\",\n    \"sigma_old\", \"sigma_pre\", \"sigma_rec\"\n  ),\n  \"rhat\"\n) %&gt;%\n  filter(rhat &gt; 1.1)\nt$variable\n\n\n [1] \"dist_p[67]\"   \"dist_p[68]\"   \"dist_p[70]\"   \"dist_p[71]\"   \"dist_p[72]\"  \n [6] \"dist_p[74]\"   \"mu_lambda\"    \"sigma_lambda\" \"lambda_p[67]\" \"lambda_p[68]\"\n[11] \"lambda_p[69]\" \"lambda_p[70]\" \"lambda_p[71]\" \"lambda_p[72]\" \"lambda_p[73]\"\n[16] \"lambda_p[74]\" \"lambda_p[75]\" \"mu_delta\"     \"delta_p[67]\"  \"delta_p[68]\" \n[21] \"delta_p[69]\"  \"delta_p[70]\"  \"delta_p[71]\"  \"delta_p[72]\"  \"delta_p[73]\" \n[26] \"delta_p[74]\"  \"sigma_delta\"  \"tau_s[7]\"    \n\n\n\n\nCode\npars &lt;- c(\n  \"mu_dist\", \"sigma_dist\", \"mu_lambda\", \"sigma_lambda\", \"mu_thetaInf\",\n  \"sigma_thetaInf\", \"sigma_old\", \"sigma_pre\", \"sigma_rec\", \"mu_delta\",\n  \"sigma_delta\", \"mu_tau\", \"sigma_tau\"\n)\nfit_stp$draws(pars) %&gt;%\n  mcmc_dens()\n\n\n\n\n\nPosteriors generals pars.\n\n\n\n\n\n\nCode\nfit_stp$summary(\"lambda_p\", \"mean\") %&gt;%\n  mutate(t95 = log(20) / mean) %&gt;%\n  ggplot(aes(t95)) +\n  geom_histogram() +\n  theme_bw() +\n  scale_x_log10()\n\n\n\n\n\n95% recovery time."
  },
  {
    "objectID": "33_agb.html#comparison",
    "href": "33_agb.html#comparison",
    "title": "AGB",
    "section": "Comparison",
    "text": "Comparison\n\n\nCode\nloo_compare(\n  list(\n    ltp = fit_ltp$loo(),\n    stp = fit_stp$loo()\n  )\n) %&gt;%\n  kable()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nelpd_diff\nse_diff\nelpd_loo\nse_elpd_loo\np_loo\nse_p_loo\nlooic\nse_looic\n\n\n\n\nltp\n0.00000\n0.000000\n381.1977\n6.548561\n13.71512\n0.4541074\n-762.3953\n13.09712\n\n\nstp\n-10.23239\n4.187546\n370.9653\n6.624593\n16.36641\n0.5261383\n-741.9306\n13.24919\n\n\n\n\n\n\n\nCode\nfit_ltp$summary(\"lambda_p\", \"mean\") %&gt;%\n  rename(ltp = mean) %&gt;%\n  left_join(\n    fit_stp$summary(\"lambda_p\", \"mean\") %&gt;%\n      rename(stp = mean)\n  ) %&gt;%\n  separate(variable, c(\"lambda\", \"p\", \"plotnum\"), convert = TRUE) %&gt;%\n  left_join(ind_rec) %&gt;%\n  ggplot(aes(ltp, stp, col = site)) +\n  geom_abline(linetype = \"dashed\") +\n  geom_point() +\n  theme_bw() +\n  scale_y_log10() +\n  scale_x_log10() +\n  ggpubr::stat_cor()\n\n\nJoining with `by = join_by(variable)`\n\n\nWarning: Expected 3 pieces. Additional pieces discarded in 91 rows [1, 2, 3, 4, 5, 6, 7,\n8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, ...].\n\n\nJoining with `by = join_by(plotnum)`\n\n\n\n\n\nPosteriors generals pars."
  },
  {
    "objectID": "34_fdiv.html#data",
    "href": "34_fdiv.html#data",
    "title": "FDiv",
    "section": "Data",
    "text": "Data\n\n\nCode\nvar &lt;- \"FDiv\"\nif (!exists(file.path(\"chains\", var))) {\n  dir.create(file.path(\"chains\", var))\n}\nlab &lt;- expression(\"FDiv\")\ndata &lt;- read_tsv(\"data/derived_data/data.tsv\") %&gt;%\n  filter(variable == var) %&gt;%\n  unique() %&gt;%\n  rename(stem = value) %&gt;%\n  select(-env, -env_value, -variable) %&gt;%\n  unique() %&gt;%\n  filter(!is.infinite(harvest_year_min)) %&gt;%\n  mutate(sitenum = as.numeric(as.factor(site)))\ndata_rec &lt;- data %&gt;%\n  filter(treatment == \"logged\", rel_year &gt; 2) %&gt;%\n  mutate(plotnum = as.numeric(as.factor(paste0(site, \"_\", plot))))\ndata_old &lt;- data %&gt;%\n  filter(treatment == \"control\") %&gt;%\n  mutate(plotoldnum = as.numeric(as.factor(paste0(site, \"_\", plot))))\ndata_pre &lt;- data %&gt;% filter(rel_year &lt;= 0)\nind_rec &lt;- data_rec %&gt;%\n  select(site, plot, sitenum, plotnum) %&gt;%\n  unique() %&gt;%\n  arrange(plotnum)\nmdata &lt;- list(\n  n_rec = nrow(data_rec),\n  n_old = nrow(data_old),\n  n_pre = nrow(data_pre),\n  n_site = max(data_rec$sitenum),\n  n_plot_rec = max(data_rec$plotnum),\n  stem_rec = data_rec$stem,\n  stem_old = data_old$stem,\n  stem_pre = data_pre$stem,\n  time = data_rec$rel_year - 3,\n  site_rec = data_rec$sitenum,\n  site_old = data_old$sitenum,\n  site_pre = data_pre$sitenum,\n  plot_rec = data_rec$plotnum,\n  site_plot_rec = ind_rec$sitenum,\n  dist_bounds = c(0.1, 1.5),\n  delta_bounds = c(0, 2),\n  mu_thetaInf_bounds = c(0, 1),\n  thetaInf_s_bounds = c(0, 1)\n)\n\n\n\n\nCode\nggplot(data, aes(rel_year, stem, group = paste(site, plot), col = treatment)) +\n  geom_line() +\n  facet_wrap(~site) +\n  theme_bw() +\n  xlab(\"\") +\n  ylab(lab) +\n  theme(legend.position = \"bottom\") +\n  scale_color_discrete(\"\")\n\n\n\n\n\nModelled trajectories."
  },
  {
    "objectID": "34_fdiv.html#ltp",
    "href": "34_fdiv.html#ltp",
    "title": "FDiv",
    "section": "LTP",
    "text": "LTP\n\n\nCode\nltp &lt;- cmdstan_model(\"models/ltp.stan\")\npath &lt;- file.path(\"chains\", var, \"ltp\")\nunlink(path, recursive = TRUE)\ndir.create(path)\nfit_ltp &lt;- ltp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = path\n)\n\n\n\n\nCode\npath &lt;- file.path(\"chains\", var, \"ltp\")\nfit_ltp &lt;- as_cmdstan_fit(list.files(path, full.names = TRUE))\ndata_old &lt;- data_old %&gt;%\n  group_by(site) %&gt;%\n  mutate(rel_year = max(rel_year + 2))\ndata_rec$preds &lt;- fit_ltp$summary(c(\"mu_rec\"), median)$median\ndata_pre$preds &lt;- fit_ltp$summary(c(\"mu_pre\"), median)$median\nfit_ltp\n\n\n   variable    mean  median    sd   mad      q5     q95 rhat ess_bulk ess_tail\n lp__       3087.55 3082.98 37.95 35.40 3034.11 3168.81 1.06       70       26\n mu_dist       1.02    1.02  0.02  0.02    1.00    1.05 1.00     1093     2043\n sigma_dist    0.09    0.09  0.01  0.01    0.07    0.12 1.02      193      323\n dist_p[1]     1.18    1.17  0.06  0.06    1.09    1.28 1.01      283      453\n dist_p[2]     1.29    1.31  0.12  0.13    1.08    1.47 1.03      102       57\n dist_p[3]     0.93    0.93  0.04  0.05    0.86    1.00 1.01      559     1480\n dist_p[4]     0.79    0.79  0.04  0.04    0.73    0.85 1.01      324      595\n dist_p[5]     0.91    0.91  0.05  0.04    0.83    0.99 1.02      311       80\n dist_p[6]     0.83    0.83  0.04  0.04    0.77    0.91 1.01      712     1487\n dist_p[7]     0.89    0.90  0.05  0.05    0.80    0.97 1.01      584     1317\n\n # showing 10 of 3545 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\npvo_fig(data_rec, data_pre)\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nltp_fig(data_rec, data_pre, data_old, fit_ltp, lab)\n\n\n\n\n\nPredicted trajectories."
  },
  {
    "objectID": "34_fdiv.html#stp",
    "href": "34_fdiv.html#stp",
    "title": "FDiv",
    "section": "STP",
    "text": "STP\n\n\nCode\nstp &lt;- cmdstan_model(\"models/stp.stan\")\npath &lt;- file.path(\"chains\", var, \"stp\")\nunlink(path, recursive = TRUE)\ndir.create(path)\nfit_stp &lt;- stp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = path\n)\n\n\n\n\nCode\npath &lt;- file.path(\"chains\", var, \"stp\")\nfit_stp &lt;- as_cmdstan_fit(list.files(path, full.names = TRUE))\ndata_old &lt;- data_old %&gt;%\n  group_by(site) %&gt;%\n  mutate(rel_year = max(rel_year + 2))\ndata_rec$preds &lt;- fit_stp$summary(c(\"mu_rec\"), median)$median\ndata_pre$preds &lt;- fit_stp$summary(c(\"mu_pre\"), median)$median\nfit_stp\n\n\n   variable    mean  median    sd   mad      q5     q95 rhat ess_bulk ess_tail\n lp__       2969.85 2963.23 43.38 46.58 2910.71 3045.81 1.86        5       25\n mu_dist       1.01    1.01  0.04  0.04    0.95    1.07 1.46        7       46\n sigma_dist    0.14    0.14  0.02  0.02    0.11    0.18 1.07       38      614\n dist_p[1]     1.21    1.29  0.21  0.12    0.84    1.45 1.72        6       28\n dist_p[2]     1.36    1.37  0.09  0.10    1.20    1.49 1.29       10       56\n dist_p[3]     0.90    0.88  0.07  0.06    0.80    1.04 1.54        7       32\n dist_p[4]     0.93    0.93  0.30  0.43    0.58    1.26 1.75        6       57\n dist_p[5]     0.88    0.85  0.10  0.06    0.76    1.09 1.53        7       30\n dist_p[6]     0.79    0.78  0.07  0.06    0.69    0.92 1.52        7       30\n dist_p[7]     0.78    0.78  0.11  0.09    0.61    0.93 1.39        8       40\n\n # showing 10 of 4517 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\npvo_fig(data_rec, data_pre)\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nstp_fig(data_rec, data_pre, data_old, fit_stp, lab)\n\n\n\n\n\nPredicted trajectories."
  },
  {
    "objectID": "34_fdiv.html#comparison",
    "href": "34_fdiv.html#comparison",
    "title": "FDiv",
    "section": "Comparison",
    "text": "Comparison\n\n\nCode\nloo_compare(\n  list(\n    ltp = fit_ltp$loo(),\n    stp = fit_stp$loo()\n  )\n) %&gt;%\n  kable()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nelpd_diff\nse_diff\nelpd_loo\nse_elpd_loo\np_loo\nse_p_loo\nlooic\nse_looic\n\n\n\n\nstp\n0.000000\n0.000000\n426.4032\n6.038147\n19.73929\n0.6936535\n-852.8063\n12.07629\n\n\nltp\n-1.736747\n3.541043\n424.6664\n6.774805\n10.24635\n0.3242435\n-849.3329\n13.54961"
  },
  {
    "objectID": "35_div_q1_gen.html#data",
    "href": "35_div_q1_gen.html#data",
    "title": "Genus diversity 1",
    "section": "Data",
    "text": "Data\n\n\nCode\nvar &lt;- \"diversity_q1_gen\"\nif (!exists(file.path(\"chains\", var))) {\n  dir.create(file.path(\"chains\", var))\n}\nlab &lt;- expression(\"Genus diversity q=1\")\ndata &lt;- read_tsv(\"data/derived_data/data.tsv\") %&gt;%\n  filter(variable == var) %&gt;%\n  unique() %&gt;%\n  rename(stem = value) %&gt;%\n  select(-env, -env_value, -variable) %&gt;%\n  unique() %&gt;%\n  filter(!is.infinite(harvest_year_min)) %&gt;%\n  mutate(sitenum = as.numeric(as.factor(site)))\ndata_rec &lt;- data %&gt;%\n  filter(treatment == \"logged\", rel_year &gt; 2) %&gt;%\n  mutate(plotnum = as.numeric(as.factor(paste0(site, \"_\", plot))))\ndata_old &lt;- data %&gt;%\n  filter(treatment == \"control\") %&gt;%\n  mutate(plotoldnum = as.numeric(as.factor(paste0(site, \"_\", plot))))\ndata_pre &lt;- data %&gt;% filter(rel_year &lt;= 0)\nind_rec &lt;- data_rec %&gt;%\n  select(site, plot, sitenum, plotnum) %&gt;%\n  unique() %&gt;%\n  arrange(plotnum)\nmdata &lt;- list(\n  n_rec = nrow(data_rec),\n  n_old = nrow(data_old),\n  n_pre = nrow(data_pre),\n  n_site = max(data_rec$sitenum),\n  n_plot_rec = max(data_rec$plotnum),\n  stem_rec = data_rec$stem,\n  stem_old = data_old$stem,\n  stem_pre = data_pre$stem,\n  time = data_rec$rel_year - 3,\n  site_rec = data_rec$sitenum,\n  site_old = data_old$sitenum,\n  site_pre = data_pre$sitenum,\n  plot_rec = data_rec$plotnum,\n  site_plot_rec = ind_rec$sitenum,\n  dist_bounds = c(0.1, 1.5),\n  delta_bounds = c(0, 2),\n  mu_thetaInf_bounds = c(10, 100),\n  thetaInf_s_bounds = c(10, 100)\n)\n\n\n\n\nCode\nggplot(data, aes(rel_year, stem, group = paste(site, plot), col = treatment)) +\n  geom_line() +\n  facet_wrap(~site) +\n  theme_bw() +\n  xlab(\"\") +\n  ylab(lab) +\n  theme(legend.position = \"bottom\") +\n  scale_color_discrete(\"\")\n\n\n\n\n\nModelled trajectories."
  },
  {
    "objectID": "35_div_q1_gen.html#ltp",
    "href": "35_div_q1_gen.html#ltp",
    "title": "Genus diversity 1",
    "section": "LTP",
    "text": "LTP\n\n\nCode\nltp &lt;- cmdstan_model(\"models/ltp.stan\")\npath &lt;- file.path(\"chains\", var, \"ltp\")\nunlink(path, recursive = TRUE)\ndir.create(path)\nfit_ltp &lt;- ltp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = path\n)\n\n\n\n\nCode\npath &lt;- file.path(\"chains\", var, \"ltp\")\nfit_ltp &lt;- as_cmdstan_fit(list.files(path, full.names = TRUE))\ndata_old &lt;- data_old %&gt;%\n  group_by(site) %&gt;%\n  mutate(rel_year = max(rel_year + 2))\ndata_rec$preds &lt;- fit_ltp$summary(c(\"mu_rec\"), median)$median\ndata_pre$preds &lt;- fit_ltp$summary(c(\"mu_pre\"), median)$median\nfit_ltp\n\n\n   variable    mean  median    sd   mad      q5     q95 rhat ess_bulk ess_tail\n lp__       2469.28 2466.50 31.45 30.98 2422.87 2526.42 1.09       45       61\n mu_dist       1.02    1.02  0.03  0.03    0.98    1.06 1.03       97     2472\n sigma_dist    0.14    0.14  0.02  0.02    0.11    0.18 1.03      132     1915\n dist_p[1]     1.07    1.07  0.07  0.07    0.96    1.19 1.01     1432     1625\n dist_p[2]     0.76    0.76  0.06  0.06    0.67    0.86 1.01     1070     1881\n dist_p[3]     1.23    1.23  0.09  0.09    1.09    1.37 1.00     1689     1358\n dist_p[4]     0.83    0.83  0.06  0.06    0.73    0.93 1.01     1659     2154\n dist_p[5]     1.07    1.07  0.07  0.07    0.96    1.19 1.01     1767     1418\n dist_p[6]     0.91    0.91  0.07  0.06    0.81    1.02 1.01      923     1410\n dist_p[7]     0.69    0.69  0.06  0.06    0.59    0.79 1.02      174     1148\n\n # showing 10 of 3545 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\npvo_fig(data_rec, data_pre)\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nltp_fig(data_rec, data_pre, data_old, fit_ltp, lab)\n\n\n\n\n\nPredicted trajectories."
  },
  {
    "objectID": "35_div_q1_gen.html#stp",
    "href": "35_div_q1_gen.html#stp",
    "title": "Genus diversity 1",
    "section": "STP",
    "text": "STP\n\nâ ï¸ Caution \\(\\tau\\) limited to 30 for Paracou limits hump\n\n\n\nCode\nstp &lt;- cmdstan_model(\"models/stp.stan\")\npath &lt;- file.path(\"chains\", var, \"stp\")\nunlink(path, recursive = TRUE)\ndir.create(path)\nfit_stp &lt;- stp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = path\n)\n\n\n\n\nCode\npath &lt;- file.path(\"chains\", var, \"stp\")\nfit_stp &lt;- as_cmdstan_fit(list.files(path, full.names = TRUE))\ndata_old &lt;- data_old %&gt;%\n  group_by(site) %&gt;%\n  mutate(rel_year = max(rel_year + 2))\ndata_rec$preds &lt;- fit_stp$summary(c(\"mu_rec\"), median)$median\ndata_pre$preds &lt;- fit_stp$summary(c(\"mu_pre\"), median)$median\nfit_stp\n\n\n   variable    mean  median    sd    mad      q5     q95 rhat ess_bulk ess_tail\n lp__       2085.22 2082.27 73.95 100.81 1980.54 2191.37 1.77        6       95\n mu_dist       0.99    0.99  0.05   0.05    0.91    1.07 1.28       10       69\n sigma_dist    0.17    0.17  0.02   0.03    0.13    0.21 1.05       54      707\n dist_p[1]     1.12    1.11  0.11   0.10    0.97    1.32 1.01     2029     1709\n dist_p[2]     0.74    0.74  0.08   0.08    0.62    0.88 1.01     2145     2410\n dist_p[3]     1.28    1.28  0.11   0.12    1.10    1.46 1.01     1651     1737\n dist_p[4]     0.84    0.83  0.08   0.08    0.71    0.98 1.01     1623     2146\n dist_p[5]     1.10    1.10  0.10   0.09    0.95    1.27 1.00     1966     1436\n dist_p[6]     0.91    0.91  0.09   0.08    0.77    1.05 1.00     2524     2366\n dist_p[7]     0.63    0.63  0.08   0.08    0.51    0.76 1.02      275     2498\n\n # showing 10 of 4517 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\npvo_fig(data_rec, data_pre)\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nstp_fig(data_rec, data_pre, data_old, fit_stp, lab)\n\n\n\n\n\nPredicted trajectories."
  },
  {
    "objectID": "35_div_q1_gen.html#comparison",
    "href": "35_div_q1_gen.html#comparison",
    "title": "Genus diversity 1",
    "section": "Comparison",
    "text": "Comparison\n\n\nCode\nloo_compare(\n  list(\n    ltp = fit_ltp$loo(),\n    stp = fit_stp$loo()\n  )\n) %&gt;%\n  kable()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nelpd_diff\nse_diff\nelpd_loo\nse_elpd_loo\np_loo\nse_p_loo\nlooic\nse_looic\n\n\n\n\nltp\n0.000000\n0.000000\n433.3360\n6.886086\n11.08126\n0.3638875\n-866.6721\n13.77217\n\n\nstp\n-2.552911\n4.701578\n430.7831\n5.887430\n16.55624\n0.5339010\n-861.5662\n11.77486"
  },
  {
    "objectID": "36_agb_mort.html#data",
    "href": "36_agb_mort.html#data",
    "title": "AGB mortality",
    "section": "Data",
    "text": "Data\n\nWe removed Uppangala for now.\n\n\n\nCode\nvar &lt;- \"agb_mort\"\nif (!exists(file.path(\"chains\", var))) {\n  dir.create(file.path(\"chains\", var))\n}\nlab &lt;- expression(\"AGB mort [ t\" ~ ha^{\n  -1\n} ~ \"]\")\ndata &lt;- read_tsv(\"data/derived_data/data.tsv\") %&gt;%\n  filter(variable == var, site != \"Uppangala\") %&gt;%\n  unique() %&gt;%\n  mutate(value = value + 1) %&gt;%\n  rename(stem = value) %&gt;%\n  select(-env, -env_value, -variable) %&gt;%\n  unique() %&gt;%\n  filter(!is.infinite(harvest_year_min)) %&gt;%\n  mutate(sitenum = as.numeric(as.factor(site)))\ndata_rec &lt;- data %&gt;%\n  filter(treatment == \"logged\", rel_year &gt; 2) %&gt;%\n  mutate(plotnum = as.numeric(as.factor(paste0(site, \"_\", plot))))\ndata_old &lt;- data %&gt;%\n  filter(treatment == \"control\") %&gt;%\n  mutate(plotoldnum = as.numeric(as.factor(paste0(site, \"_\", plot))))\ndata_pre &lt;- data %&gt;% filter(rel_year &lt;= 0)\nind_rec &lt;- data_rec %&gt;%\n  select(site, plot, sitenum, plotnum) %&gt;%\n  unique() %&gt;%\n  arrange(plotnum)\nmdata &lt;- list(\n  n_rec = nrow(data_rec),\n  n_old = nrow(data_old),\n  n_pre = nrow(data_pre),\n  n_site = max(data_rec$sitenum),\n  n_plot_rec = max(data_rec$plotnum),\n  stem_rec = data_rec$stem,\n  stem_old = data_old$stem,\n  stem_pre = data_pre$stem,\n  time = data_rec$rel_year - 3,\n  site_rec = data_rec$sitenum,\n  site_old = data_old$sitenum,\n  site_pre = data_pre$sitenum,\n  plot_rec = data_rec$plotnum,\n  site_plot_rec = ind_rec$sitenum,\n  dist_bounds = c(0.1, 1.5),\n  delta_bounds = c(0, 2),\n  mu_thetaInf_bounds = c(1, 250),\n  thetaInf_s_bounds = c(1, 250)\n)\n\n\n\n\nCode\nggplot(data, aes(rel_year, stem, group = paste(site, plot), col = treatment)) +\n  geom_line() +\n  facet_wrap(~site) +\n  theme_bw() +\n  xlab(\"\") +\n  ylab(lab) +\n  theme(legend.position = \"bottom\") +\n  scale_color_discrete(\"\") +\n  scale_y_log10()\n\n\n\n\n\nModelled trajectories."
  },
  {
    "objectID": "36_agb_mort.html#ltp",
    "href": "36_agb_mort.html#ltp",
    "title": "AGB mortality",
    "section": "LTP",
    "text": "LTP\n\n\nCode\nltp &lt;- cmdstan_model(\"models/ltp.stan\")\npath &lt;- file.path(\"chains\", var, \"ltp\")\nunlink(path, recursive = TRUE)\ndir.create(path)\nfit_ltp &lt;- ltp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = path\n)\n\n\n\n\nCode\npath &lt;- file.path(\"chains\", var, \"ltp\")\nfit_ltp &lt;- as_cmdstan_fit(list.files(path, full.names = TRUE))\ndata_old &lt;- data_old %&gt;%\n  group_by(site) %&gt;%\n  mutate(rel_year = max(rel_year + 2))\ndata_rec$preds &lt;- fit_ltp$summary(c(\"mu_rec\"), median)$median\ndata_pre$preds &lt;- fit_ltp$summary(c(\"mu_pre\"), median)$median\nfit_ltp\n\n\n   variable   mean median    sd   mad     q5    q95 rhat ess_bulk ess_tail\n lp__       386.92 385.93 98.29 97.35 228.98 551.37 1.12       23       42\n mu_dist      1.31   1.31  0.07  0.08   1.19   1.43 1.08       34       25\n sigma_dist   0.01   0.00  0.00  0.00   0.00   0.02 1.18       16       32\n dist_p[1]    1.31   1.31  0.08  0.08   1.18   1.43 1.08       38       31\n dist_p[2]    1.31   1.31  0.08  0.08   1.19   1.43 1.08       37       30\n dist_p[3]    1.31   1.31  0.08  0.08   1.19   1.45 1.07       40       37\n dist_p[4]    1.31   1.31  0.08  0.08   1.19   1.44 1.08       39       30\n dist_p[5]    1.31   1.31  0.08  0.08   1.17   1.44 1.09       34       28\n dist_p[6]    1.31   1.31  0.08  0.08   1.19   1.43 1.07       39       26\n dist_p[7]    1.31   1.31  0.08  0.08   1.19   1.44 1.07       38       31\n\n # showing 10 of 3277 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\npvo_fig(data_rec, data_pre)\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nltp_fig(data_rec, data_pre, data_old, fit_ltp, lab)\n\n\n\n\n\nPredicted trajectories."
  },
  {
    "objectID": "36_agb_mort.html#stp",
    "href": "36_agb_mort.html#stp",
    "title": "AGB mortality",
    "section": "STP",
    "text": "STP\n\n\nCode\nstp &lt;- cmdstan_model(\"models/stp.stan\")\npath &lt;- file.path(\"chains\", var, \"stp\")\nunlink(path, recursive = TRUE)\ndir.create(path)\nfit_stp &lt;- stp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = path\n)\n\n\n\n\nCode\npath &lt;- file.path(\"chains\", var, \"stp\")\nfit_stp &lt;- as_cmdstan_fit(list.files(path, full.names = TRUE))\ndata_old &lt;- data_old %&gt;%\n  group_by(site) %&gt;%\n  mutate(rel_year = max(rel_year + 2))\ndata_rec$preds &lt;- fit_stp$summary(c(\"mu_rec\"), median)$median\ndata_pre$preds &lt;- fit_stp$summary(c(\"mu_pre\"), median)$median\nfit_stp\n\n\n   variable   mean median    sd   mad     q5    q95 rhat ess_bulk ess_tail\n lp__       468.92 466.34 88.82 90.52 341.47 615.86 1.17       15       11\n mu_dist      1.14   1.14  0.03  0.02   1.10   1.18 1.04      139      173\n sigma_dist   0.04   0.04  0.01  0.01   0.02   0.07 1.02      130      408\n dist_p[1]    1.31   1.32  0.11  0.13   1.13   1.45 1.01      313      488\n dist_p[2]    1.43   1.45  0.06  0.04   1.29   1.49 1.01      473      733\n dist_p[3]    1.44   1.46  0.07  0.04   1.30   1.49 1.01      590      913\n dist_p[4]    1.21   1.19  0.09  0.08   1.09   1.38 1.02      214      241\n dist_p[5]    1.48   1.49  0.02  0.01   1.45   1.50 1.01      375      753\n dist_p[6]    1.46   1.48  0.06  0.03   1.35   1.50 1.01      295      239\n dist_p[7]    1.18   1.16  0.08  0.06   1.07   1.33 1.01      355      667\n\n # showing 10 of 4198 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\npvo_fig(data_rec, data_pre)\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nstp_fig(data_rec, data_pre, data_old, fit_stp, lab)\n\n\n\n\n\nPredicted trajectories."
  },
  {
    "objectID": "36_agb_mort.html#comparison",
    "href": "36_agb_mort.html#comparison",
    "title": "AGB mortality",
    "section": "Comparison",
    "text": "Comparison\n\n\nCode\nloo_compare(\n  list(\n    ltp = fit_ltp$loo(),\n    stp = fit_stp$loo()\n  )\n) %&gt;%\n  kable()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nelpd_diff\nse_diff\nelpd_loo\nse_elpd_loo\np_loo\nse_p_loo\nlooic\nse_looic\n\n\n\n\nstp\n0.0000\n0.000000\n396.7407\n7.514485\n4.4448275\n0.1920373\n-793.4814\n15.02897\n\n\nltp\n-24.3836\n1.699302\n372.3571\n7.494086\n0.7786587\n0.0301408\n-744.7142\n14.98817"
  },
  {
    "objectID": "37_gini.html#data",
    "href": "37_gini.html#data",
    "title": "Gini",
    "section": "Data",
    "text": "Data\n\n\nCode\nvar &lt;- \"gini\"\nif (!exists(file.path(\"chains\", var))) {\n  dir.create(file.path(\"chains\", var))\n}\nlab &lt;- \"Gini\"\ndata &lt;- read_tsv(\"data/derived_data/data.tsv\") %&gt;%\n  filter(variable == var) %&gt;%\n  unique() %&gt;%\n  mutate(value = value + 1) %&gt;%\n  rename(stem = value) %&gt;%\n  select(-env, -env_value, -variable) %&gt;%\n  unique() %&gt;%\n  filter(!is.infinite(harvest_year_min)) %&gt;%\n  mutate(sitenum = as.numeric(as.factor(site)))\ndata_rec &lt;- data %&gt;%\n  filter(treatment == \"logged\", rel_year &gt; 2) %&gt;%\n  mutate(plotnum = as.numeric(as.factor(paste0(site, \"_\", plot))))\ndata_old &lt;- data %&gt;%\n  filter(treatment == \"control\") %&gt;%\n  mutate(plotoldnum = as.numeric(as.factor(paste0(site, \"_\", plot))))\ndata_pre &lt;- data %&gt;% filter(rel_year &lt;= 0)\nind_rec &lt;- data_rec %&gt;%\n  select(site, plot, sitenum, plotnum) %&gt;%\n  unique() %&gt;%\n  arrange(plotnum)\nmdata &lt;- list(\n  n_rec = nrow(data_rec),\n  n_old = nrow(data_old),\n  n_pre = nrow(data_pre),\n  n_site = max(data_rec$sitenum),\n  n_plot_rec = max(data_rec$plotnum),\n  stem_rec = data_rec$stem,\n  stem_old = data_old$stem,\n  stem_pre = data_pre$stem,\n  time = data_rec$rel_year - 3,\n  site_rec = data_rec$sitenum,\n  site_old = data_old$sitenum,\n  site_pre = data_pre$sitenum,\n  plot_rec = data_rec$plotnum,\n  site_plot_rec = ind_rec$sitenum,\n  dist_bounds = c(0.1, 1.5),\n  delta_bounds = c(0, 2),\n  mu_thetaInf_bounds = c(0, 2),\n  thetaInf_s_bounds = c(0, 2)\n)\n\n\n\n\nCode\nggplot(data, aes(rel_year, stem, group = paste(site, plot), col = treatment)) +\n  geom_line() +\n  facet_wrap(~site) +\n  theme_bw() +\n  xlab(\"\") +\n  ylab(lab) +\n  theme(legend.position = \"bottom\") +\n  scale_color_discrete(\"\")\n\n\n\n\n\nModelled trajectories."
  },
  {
    "objectID": "37_gini.html#ltp",
    "href": "37_gini.html#ltp",
    "title": "Gini",
    "section": "LTP",
    "text": "LTP\n\n\nCode\nltp &lt;- cmdstan_model(\"models/ltp.stan\")\npath &lt;- file.path(\"chains\", var, \"ltp\")\nunlink(path, recursive = TRUE)\ndir.create(path)\nfit_ltp &lt;- ltp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = path\n)\n\n\n\n\nCode\npath &lt;- file.path(\"chains\", var, \"ltp\")\nfit_ltp &lt;- as_cmdstan_fit(list.files(path, full.names = TRUE))\ndata_old &lt;- data_old %&gt;%\n  group_by(site) %&gt;%\n  mutate(rel_year = max(rel_year + 2))\ndata_rec$preds &lt;- fit_ltp$summary(c(\"mu_rec\"), median)$median\ndata_pre$preds &lt;- fit_ltp$summary(c(\"mu_pre\"), median)$median\nfit_ltp\n\n\n   variable    mean  median    sd   mad      q5     q95 rhat ess_bulk ess_tail\n lp__       6416.64 6416.70 14.83 15.00 6392.28 6440.48 1.00      684     1241\n mu_dist       0.97    0.97  0.00  0.00    0.97    0.98 1.00     2587     2967\n sigma_dist    0.01    0.01  0.00  0.00    0.01    0.02 1.00     3714     3087\n dist_p[1]     0.96    0.96  0.01  0.01    0.95    0.97 1.00     2098     2228\n dist_p[2]     0.98    0.98  0.01  0.01    0.97    0.99 1.00     1778     1555\n dist_p[3]     0.99    0.99  0.01  0.01    0.97    1.00 1.00     1881     2024\n dist_p[4]     1.00    1.00  0.01  0.01    0.98    1.01 1.00     1741     1879\n dist_p[5]     0.99    0.99  0.01  0.01    0.98    1.00 1.00     1485      928\n dist_p[6]     1.00    1.00  0.01  0.01    0.98    1.01 1.00     1336     1526\n dist_p[7]     0.99    0.99  0.01  0.01    0.98    1.00 1.00     1676     1465\n\n # showing 10 of 3545 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\npvo_fig(data_rec, data_pre)\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nltp_fig(data_rec, data_pre, data_old, fit_ltp, lab)\n\n\n\n\n\nPredicted trajectories."
  },
  {
    "objectID": "37_gini.html#stp",
    "href": "37_gini.html#stp",
    "title": "Gini",
    "section": "STP",
    "text": "STP\n\n\nCode\nstp &lt;- cmdstan_model(\"models/stp.stan\")\npath &lt;- file.path(\"chains\", var, \"stp\")\nunlink(path, recursive = TRUE)\ndir.create(path)\nfit_stp &lt;- stp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = path\n)\n\n\n\n\nCode\npath &lt;- file.path(\"chains\", var, \"stp\")\nfit_stp &lt;- as_cmdstan_fit(list.files(path, full.names = TRUE))\ndata_old &lt;- data_old %&gt;%\n  group_by(site) %&gt;%\n  mutate(rel_year = max(rel_year + 2))\ndata_rec$preds &lt;- fit_stp$summary(c(\"mu_rec\"), median)$median\ndata_pre$preds &lt;- fit_stp$summary(c(\"mu_pre\"), median)$median\nfit_stp\n\n\n   variable    mean  median     sd   mad      q5     q95 rhat ess_bulk ess_tail\n lp__       6252.14 6434.00 344.48 98.32 5641.06 6526.81 2.09        5       35\n mu_dist       0.97    0.97   0.01  0.01    0.97    0.99 1.96        5       30\n sigma_dist    0.01    0.01   0.00  0.00    0.01    0.02 1.01     1167     2120\n dist_p[1]     0.96    0.96   0.01  0.01    0.95    0.98 1.20       13       34\n dist_p[2]     0.98    0.98   0.01  0.01    0.96    0.99 1.34        9       36\n dist_p[3]     0.98    0.98   0.01  0.01    0.97    1.00 1.13       19       66\n dist_p[4]     0.99    0.99   0.01  0.01    0.98    1.01 1.07       43       81\n dist_p[5]     0.98    0.98   0.02  0.02    0.96    1.01 1.62        6       44\n dist_p[6]     1.00    1.00   0.01  0.01    0.98    1.01 1.08       35       99\n dist_p[7]     0.99    0.99   0.01  0.01    0.97    1.01 1.11       24       96\n\n # showing 10 of 4517 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\npvo_fig(data_rec, data_pre)\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nstp_fig(data_rec, data_pre, data_old, fit_stp, lab)\n\n\n\n\n\nPredicted trajectories."
  },
  {
    "objectID": "38_ba.html#data",
    "href": "38_ba.html#data",
    "title": "BA",
    "section": "Data",
    "text": "Data\n\n\nCode\nvar &lt;- \"ba\"\nif (!exists(file.path(\"chains\", var))) {\n  dir.create(file.path(\"chains\", var))\n}\nlab &lt;- expression(\"AGB [\" ~ m^2 ~ m^{\n  -2\n} ~ \"]\")\ndata &lt;- read_tsv(\"data/derived_data/data.tsv\") %&gt;%\n  filter(variable == var) %&gt;%\n  unique() %&gt;%\n  mutate(value = value + 1) %&gt;%\n  rename(stem = value) %&gt;%\n  select(-env, -env_value, -variable) %&gt;%\n  unique() %&gt;%\n  filter(!is.infinite(harvest_year_min)) %&gt;%\n  mutate(sitenum = as.numeric(as.factor(site)))\ndata_rec &lt;- data %&gt;%\n  filter(treatment == \"logged\", rel_year &gt; 2) %&gt;%\n  mutate(plotnum = as.numeric(as.factor(paste0(site, \"_\", plot))))\ndata_old &lt;- data %&gt;%\n  filter(treatment == \"control\") %&gt;%\n  mutate(plotoldnum = as.numeric(as.factor(paste0(site, \"_\", plot))))\ndata_pre &lt;- data %&gt;% filter(rel_year &lt;= 0)\nind_rec &lt;- data_rec %&gt;%\n  select(site, plot, sitenum, plotnum) %&gt;%\n  unique() %&gt;%\n  arrange(plotnum)\nmdata &lt;- list(\n  n_rec = nrow(data_rec),\n  n_old = nrow(data_old),\n  n_pre = nrow(data_pre),\n  n_site = max(data_rec$sitenum),\n  n_plot_rec = max(data_rec$plotnum),\n  stem_rec = data_rec$stem,\n  stem_old = data_old$stem,\n  stem_pre = data_pre$stem,\n  time = data_rec$rel_year - 3,\n  site_rec = data_rec$sitenum,\n  site_old = data_old$sitenum,\n  site_pre = data_pre$sitenum,\n  plot_rec = data_rec$plotnum,\n  site_plot_rec = ind_rec$sitenum,\n  dist_bounds = c(0.1, 1.5),\n  delta_bounds = c(0, 2),\n  mu_thetaInf_bounds = c(1, 100),\n  thetaInf_s_bounds = c(1, 100)\n)\n\n\n\n\nCode\nggplot(data, aes(rel_year, stem, group = paste(site, plot), col = treatment)) +\n  geom_line() +\n  facet_wrap(~site) +\n  theme_bw() +\n  xlab(\"\") +\n  ylab(lab) +\n  theme(legend.position = \"bottom\") +\n  scale_color_discrete(\"\")\n\n\n\n\n\nModelled trajectories."
  },
  {
    "objectID": "38_ba.html#ltp",
    "href": "38_ba.html#ltp",
    "title": "BA",
    "section": "LTP",
    "text": "LTP\n\n\nCode\nltp &lt;- cmdstan_model(\"models/ltp.stan\")\npath &lt;- file.path(\"chains\", var, \"ltp\")\nunlink(path, recursive = TRUE)\ndir.create(path)\nfit_ltp &lt;- ltp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = path\n)\n\n\n\n\nCode\npath &lt;- file.path(\"chains\", var, \"ltp\")\nfit_ltp &lt;- as_cmdstan_fit(list.files(path, full.names = TRUE))\ndata_old &lt;- data_old %&gt;%\n  group_by(site) %&gt;%\n  mutate(rel_year = max(rel_year + 2))\ndata_rec$preds &lt;- fit_ltp$summary(c(\"mu_rec\"), median)$median\ndata_pre$preds &lt;- fit_ltp$summary(c(\"mu_pre\"), median)$median\nfit_ltp\n\n\n   variable    mean  median    sd   mad      q5     q95 rhat ess_bulk ess_tail\n lp__       2699.80 2699.97 14.61 14.43 2675.29 2723.58 1.00      968     1631\n mu_dist       0.63    0.63  0.03  0.03    0.58    0.67 1.00     5698     3141\n sigma_dist    0.15    0.15  0.02  0.02    0.12    0.18 1.00     4520     2936\n dist_p[1]     0.57    0.57  0.04  0.04    0.51    0.63 1.00     6199     2867\n dist_p[2]     0.78    0.78  0.04  0.04    0.71    0.84 1.00     3763     3300\n dist_p[3]     0.72    0.72  0.05  0.05    0.64    0.81 1.00     5347     2463\n dist_p[4]     0.70    0.71  0.07  0.06    0.59    0.81 1.00     6565     2708\n dist_p[5]     0.71    0.71  0.03  0.03    0.65    0.76 1.00     4298     3544\n dist_p[6]     0.85    0.85  0.06  0.06    0.75    0.95 1.00     4979     3227\n dist_p[7]     0.79    0.79  0.07  0.07    0.68    0.91 1.00     6062     3047\n\n # showing 10 of 3545 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\npvo_fig(data_rec, data_pre)\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nltp_fig(data_rec, data_pre, data_old, fit_ltp, lab)\n\n\n\n\n\nPredicted trajectories."
  },
  {
    "objectID": "38_ba.html#stp",
    "href": "38_ba.html#stp",
    "title": "BA",
    "section": "STP",
    "text": "STP\n\n\nCode\nstp &lt;- cmdstan_model(\"models/stp.stan\")\npath &lt;- file.path(\"chains\", var, \"stp\")\nunlink(path, recursive = TRUE)\ndir.create(path)\nfit_stp &lt;- stp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = path\n)\n\n\n\n\nCode\npath &lt;- file.path(\"chains\", var, \"stp\")\nfit_stp &lt;- as_cmdstan_fit(list.files(path, full.names = TRUE))\ndata_old &lt;- data_old %&gt;%\n  group_by(site) %&gt;%\n  mutate(rel_year = max(rel_year + 2))\ndata_rec$preds &lt;- fit_stp$summary(c(\"mu_rec\"), median)$median\ndata_pre$preds &lt;- fit_stp$summary(c(\"mu_pre\"), median)$median\nfit_stp\n\n\n   variable    mean  median     sd    mad      q5     q95 rhat ess_bulk\n lp__       2404.77 2271.22 427.89 740.26 1777.20 2859.56 2.22        5\n mu_dist       0.71    0.71   0.06   0.07    0.62    0.81 1.62        6\n sigma_dist    0.17    0.16   0.03   0.03    0.13    0.22 1.17       15\n dist_p[1]     0.59    0.58   0.07   0.06    0.50    0.74 1.13       32\n dist_p[2]     0.79    0.78   0.07   0.05    0.70    0.91 1.08       63\n dist_p[3]     0.76    0.75   0.08   0.06    0.66    0.89 1.07       41\n dist_p[4]     0.76    0.75   0.10   0.08    0.63    0.95 1.12       21\n dist_p[5]     0.73    0.72   0.06   0.05    0.64    0.83 1.10       48\n dist_p[6]     0.87    0.86   0.09   0.07    0.75    1.02 1.08      428\n dist_p[7]     0.83    0.82   0.09   0.08    0.70    1.00 1.06       45\n ess_tail\n       14\n       52\n       92\n       41\n       52\n       81\n       61\n       50\n      110\n       67\n\n # showing 10 of 4517 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\npvo_fig(data_rec, data_pre)\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nstp_fig(data_rec, data_pre, data_old, fit_stp, lab)\n\n\n\n\n\nPredicted trajectories."
  },
  {
    "objectID": "39_feve.html#data",
    "href": "39_feve.html#data",
    "title": "FEve",
    "section": "Data",
    "text": "Data\n\n\nCode\nvar &lt;- \"FEve\"\nif (!exists(file.path(\"chains\", var))) {\n  dir.create(file.path(\"chains\", var))\n}\nlab &lt;- \"FEve\"\ndata &lt;- read_tsv(\"data/derived_data/data.tsv\") %&gt;%\n  filter(variable == var) %&gt;%\n  unique() %&gt;%\n  mutate(value = value + 1) %&gt;%\n  rename(stem = value) %&gt;%\n  select(-env, -env_value, -variable) %&gt;%\n  unique() %&gt;%\n  filter(!is.infinite(harvest_year_min)) %&gt;%\n  mutate(sitenum = as.numeric(as.factor(site)))\ndata_rec &lt;- data %&gt;%\n  filter(treatment == \"logged\", rel_year &gt; 2) %&gt;%\n  mutate(plotnum = as.numeric(as.factor(paste0(site, \"_\", plot))))\ndata_old &lt;- data %&gt;%\n  filter(treatment == \"control\") %&gt;%\n  mutate(plotoldnum = as.numeric(as.factor(paste0(site, \"_\", plot))))\ndata_pre &lt;- data %&gt;% filter(rel_year &lt;= 0)\nind_rec &lt;- data_rec %&gt;%\n  select(site, plot, sitenum, plotnum) %&gt;%\n  unique() %&gt;%\n  arrange(plotnum)\nmdata &lt;- list(\n  n_rec = nrow(data_rec),\n  n_old = nrow(data_old),\n  n_pre = nrow(data_pre),\n  n_site = max(data_rec$sitenum),\n  n_plot_rec = max(data_rec$plotnum),\n  stem_rec = data_rec$stem,\n  stem_old = data_old$stem,\n  stem_pre = data_pre$stem,\n  time = data_rec$rel_year - 3,\n  site_rec = data_rec$sitenum,\n  site_old = data_old$sitenum,\n  site_pre = data_pre$sitenum,\n  plot_rec = data_rec$plotnum,\n  site_plot_rec = ind_rec$sitenum,\n  dist_bounds = c(0.1, 1.5),\n  delta_bounds = c(0, 2),\n  mu_thetaInf_bounds = c(0, 2),\n  thetaInf_s_bounds = c(0, 2)\n)\n\n\n\n\nCode\nggplot(data, aes(rel_year, stem, group = paste(site, plot), col = treatment)) +\n  geom_line() +\n  facet_wrap(~site) +\n  theme_bw() +\n  xlab(\"\") +\n  ylab(lab) +\n  theme(legend.position = \"bottom\") +\n  scale_color_discrete(\"\")\n\n\n\n\n\nModelled trajectories."
  },
  {
    "objectID": "39_feve.html#ltp",
    "href": "39_feve.html#ltp",
    "title": "FEve",
    "section": "LTP",
    "text": "LTP\n\n\nCode\nltp &lt;- cmdstan_model(\"models/ltp.stan\")\npath &lt;- file.path(\"chains\", var, \"ltp\")\nunlink(path, recursive = TRUE)\ndir.create(path)\nfit_ltp &lt;- ltp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = path\n)\n\n\n\n\nCode\npath &lt;- file.path(\"chains\", var, \"ltp\")\nfit_ltp &lt;- as_cmdstan_fit(list.files(path, full.names = TRUE))\ndata_old &lt;- data_old %&gt;%\n  group_by(site) %&gt;%\n  mutate(rel_year = max(rel_year + 2))\ndata_rec$preds &lt;- fit_ltp$summary(c(\"mu_rec\"), median)$median\ndata_pre$preds &lt;- fit_ltp$summary(c(\"mu_pre\"), median)$median\nfit_ltp\n\n\n   variable    mean  median    sd   mad      q5     q95 rhat ess_bulk ess_tail\n lp__       5061.29 5058.38 42.88 41.58 4994.12 5141.50 1.14       20       79\n mu_dist       1.00    1.00  0.00  0.00    1.00    1.01 1.01      695      949\n sigma_dist    0.02    0.02  0.00  0.00    0.01    0.02 1.01      766     1364\n dist_p[1]     1.01    1.01  0.01  0.01    0.99    1.03 1.01     1403     2020\n dist_p[2]     1.01    1.01  0.01  0.01    0.99    1.04 1.00     1047      671\n dist_p[3]     1.02    1.01  0.01  0.01    1.00    1.04 1.01     1058      849\n dist_p[4]     0.94    0.94  0.02  0.02    0.90    0.96 1.02      155     1940\n dist_p[5]     0.96    0.96  0.01  0.01    0.94    0.99 1.01      815     1693\n dist_p[6]     1.00    1.00  0.01  0.01    0.98    1.02 1.01     1231     1147\n dist_p[7]     1.01    1.01  0.01  0.01    1.00    1.04 1.00     2024     2188\n\n # showing 10 of 3545 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\npvo_fig(data_rec, data_pre)\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nltp_fig(data_rec, data_pre, data_old, fit_ltp, lab)\n\n\n\n\n\nPredicted trajectories."
  },
  {
    "objectID": "39_feve.html#stp",
    "href": "39_feve.html#stp",
    "title": "FEve",
    "section": "STP",
    "text": "STP\n\n\nCode\nstp &lt;- cmdstan_model(\"models/stp.stan\")\npath &lt;- file.path(\"chains\", var, \"stp\")\nunlink(path, recursive = TRUE)\ndir.create(path)\nfit_stp &lt;- stp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = path\n)\n\n\n\n\nCode\npath &lt;- file.path(\"chains\", var, \"stp\")\nfit_stp &lt;- as_cmdstan_fit(list.files(path, full.names = TRUE))\ndata_old &lt;- data_old %&gt;%\n  group_by(site) %&gt;%\n  mutate(rel_year = max(rel_year + 2))\ndata_rec$preds &lt;- fit_stp$summary(c(\"mu_rec\"), median)$median\ndata_pre$preds &lt;- fit_stp$summary(c(\"mu_pre\"), median)$median\nfit_stp\n\n\n   variable    mean  median    sd   mad      q5     q95 rhat ess_bulk ess_tail\n lp__       4983.22 5006.29 96.77 86.89 4815.30 5113.31 2.11        5       33\n mu_dist       1.00    1.00  0.01  0.01    0.99    1.01 1.60        6       57\n sigma_dist    0.03    0.03  0.00  0.00    0.02    0.04 1.09       30      310\n dist_p[1]     1.00    1.00  0.02  0.02    0.96    1.04 1.15       19      903\n dist_p[2]     1.02    1.02  0.02  0.02    0.99    1.06 1.01     1612     1480\n dist_p[3]     1.01    1.01  0.02  0.02    0.98    1.04 1.09       29      189\n dist_p[4]     0.91    0.91  0.02  0.02    0.87    0.95 1.10       26      518\n dist_p[5]     0.95    0.95  0.02  0.02    0.92    0.98 1.09       28      843\n dist_p[6]     0.99    0.99  0.02  0.02    0.97    1.02 1.04       66     2136\n dist_p[7]     1.01    1.01  0.02  0.02    0.97    1.04 1.12       22      902\n\n # showing 10 of 4517 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\npvo_fig(data_rec, data_pre)\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nstp_fig(data_rec, data_pre, data_old, fit_stp, lab)\n\n\n\n\n\nPredicted trajectories."
  },
  {
    "objectID": "40_sla.html#data",
    "href": "40_sla.html#data",
    "title": "SLA",
    "section": "Data",
    "text": "Data\n\n\nCode\nvar &lt;- \"SLA_cwm_ba\"\nif (!exists(file.path(\"chains\", var))) {\n  dir.create(file.path(\"chains\", var))\n}\nlab &lt;- expression(\"SLA [\" ~ mm^2 ~ mg^{\n  -1\n} ~ \"]\")\ndata &lt;- read_tsv(\"data/derived_data/data.tsv\") %&gt;%\n  filter(variable == var) %&gt;%\n  unique() %&gt;%\n  mutate(value = value + 1) %&gt;%\n  rename(stem = value) %&gt;%\n  select(-env, -env_value, -variable) %&gt;%\n  unique() %&gt;%\n  filter(!is.infinite(harvest_year_min)) %&gt;%\n  mutate(sitenum = as.numeric(as.factor(site)))\ndata_rec &lt;- data %&gt;%\n  filter(treatment == \"logged\", rel_year &gt; 2) %&gt;%\n  mutate(plotnum = as.numeric(as.factor(paste0(site, \"_\", plot))))\ndata_old &lt;- data %&gt;%\n  filter(treatment == \"control\") %&gt;%\n  mutate(plotoldnum = as.numeric(as.factor(paste0(site, \"_\", plot))))\ndata_pre &lt;- data %&gt;% filter(rel_year &lt;= 0)\nind_rec &lt;- data_rec %&gt;%\n  select(site, plot, sitenum, plotnum) %&gt;%\n  unique() %&gt;%\n  arrange(plotnum)\nmdata &lt;- list(\n  n_rec = nrow(data_rec),\n  n_old = nrow(data_old),\n  n_pre = nrow(data_pre),\n  n_site = max(data_rec$sitenum),\n  n_plot_rec = max(data_rec$plotnum),\n  stem_rec = data_rec$stem,\n  stem_old = data_old$stem,\n  stem_pre = data_pre$stem,\n  time = data_rec$rel_year - 3,\n  site_rec = data_rec$sitenum,\n  site_old = data_old$sitenum,\n  site_pre = data_pre$sitenum,\n  plot_rec = data_rec$plotnum,\n  site_plot_rec = ind_rec$sitenum,\n  dist_bounds = c(0.1, 1.5),\n  delta_bounds = c(0, 2),\n  mu_thetaInf_bounds = c(1, 50),\n  thetaInf_s_bounds = c(1, 50)\n)\n\n\n\n\nCode\nggplot(data, aes(rel_year, stem, group = paste(site, plot), col = treatment)) +\n  geom_line() +\n  facet_wrap(~site) +\n  theme_bw() +\n  xlab(\"\") +\n  ylab(lab) +\n  theme(legend.position = \"bottom\") +\n  scale_color_discrete(\"\")\n\n\n\n\n\nModelled trajectories."
  },
  {
    "objectID": "40_sla.html#ltp",
    "href": "40_sla.html#ltp",
    "title": "SLA",
    "section": "LTP",
    "text": "LTP\n\n\nCode\nltp &lt;- cmdstan_model(\"models/ltp.stan\")\npath &lt;- file.path(\"chains\", var, \"ltp\")\nunlink(path, recursive = TRUE)\ndir.create(path)\nfit_ltp &lt;- ltp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = path\n)\n\n\n\n\nCode\npath &lt;- file.path(\"chains\", var, \"ltp\")\nfit_ltp &lt;- as_cmdstan_fit(list.files(path, full.names = TRUE))\ndata_old &lt;- data_old %&gt;%\n  group_by(site) %&gt;%\n  mutate(rel_year = max(rel_year + 2))\ndata_rec$preds &lt;- fit_ltp$summary(c(\"mu_rec\"), median)$median\ndata_pre$preds &lt;- fit_ltp$summary(c(\"mu_pre\"), median)$median\nfit_ltp\n\n\n   variable    mean  median    sd   mad      q5     q95 rhat ess_bulk ess_tail\n lp__       4059.63 4059.67 14.70 14.84 4034.61 4083.22 1.01      851     1634\n mu_dist       0.97    0.97  0.01  0.01    0.94    0.99 1.00     1700     2646\n sigma_dist    0.08    0.08  0.01  0.01    0.06    0.10 1.00     3623     2644\n dist_p[1]     0.95    0.95  0.03  0.03    0.90    0.98 1.01      880     2142\n dist_p[2]     1.04    1.04  0.06  0.07    0.95    1.12 1.01      743     2132\n dist_p[3]     0.98    0.98  0.03  0.03    0.94    1.03 1.01      821     2099\n dist_p[4]     0.97    0.97  0.03  0.03    0.92    1.01 1.01      930     2604\n dist_p[5]     1.05    1.06  0.03  0.03    1.00    1.10 1.01      938     2184\n dist_p[6]     1.13    1.13  0.03  0.03    1.07    1.17 1.01      889     1926\n dist_p[7]     1.07    1.07  0.03  0.03    1.01    1.11 1.01      900     2017\n\n # showing 10 of 3545 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\npvo_fig(data_rec, data_pre)\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nltp_fig(data_rec, data_pre, data_old, fit_ltp, lab)\n\n\n\n\n\nPredicted trajectories."
  },
  {
    "objectID": "40_sla.html#stp",
    "href": "40_sla.html#stp",
    "title": "SLA",
    "section": "STP",
    "text": "STP\n\n\nCode\nstp &lt;- cmdstan_model(\"models/stp.stan\")\npath &lt;- file.path(\"chains\", var, \"stp\")\nunlink(path, recursive = TRUE)\ndir.create(path)\nfit_stp &lt;- stp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = path\n)\n\n\n\n\nCode\npath &lt;- file.path(\"chains\", var, \"stp\")\nfit_stp &lt;- as_cmdstan_fit(list.files(path, full.names = TRUE))\ndata_old &lt;- data_old %&gt;%\n  group_by(site) %&gt;%\n  mutate(rel_year = max(rel_year + 2))\ndata_rec$preds &lt;- fit_stp$summary(c(\"mu_rec\"), median)$median\ndata_pre$preds &lt;- fit_stp$summary(c(\"mu_pre\"), median)$median\nfit_stp\n\n\n   variable    mean  median     sd    mad      q5     q95 rhat ess_bulk\n lp__       3661.64 3595.53 156.91 116.49 3495.13 3929.10 2.13        5\n mu_dist       0.99    0.98   0.03   0.03    0.95    1.03 1.65        6\n sigma_dist    0.07    0.07   0.01   0.01    0.06    0.09 1.15       18\n dist_p[1]     0.94    0.94   0.03   0.03    0.89    0.98 1.08       32\n dist_p[2]     1.01    1.01   0.05   0.06    0.94    1.08 1.42        8\n dist_p[3]     0.97    0.97   0.03   0.03    0.92    1.03 1.10       25\n dist_p[4]     0.96    0.96   0.03   0.03    0.91    1.01 1.10       28\n dist_p[5]     1.04    1.04   0.04   0.04    0.98    1.10 1.18       15\n dist_p[6]     1.11    1.12   0.04   0.04    1.05    1.17 1.11       24\n dist_p[7]     1.05    1.05   0.04   0.04    0.99    1.11 1.15       18\n ess_tail\n       26\n       35\n       77\n       70\n       99\n      266\n      119\n      100\n      120\n      167\n\n # showing 10 of 4517 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\npvo_fig(data_rec, data_pre)\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nstp_fig(data_rec, data_pre, data_old, fit_stp, lab)\n\n\n\n\n\nPredicted trajectories."
  },
  {
    "objectID": "41_n.html#data",
    "href": "41_n.html#data",
    "title": "N",
    "section": "Data",
    "text": "Data\n\n\nCode\nvar &lt;- \"N_cwm_ba\"\nif (!exists(file.path(\"chains\", var))) {\n  dir.create(file.path(\"chains\", var))\n}\nlab &lt;- expression(\"N [\" ~ mg ~ g^{\n  -1\n} ~ \"]\")\ndata &lt;- read_tsv(\"data/derived_data/data.tsv\") %&gt;%\n  filter(variable == var) %&gt;%\n  unique() %&gt;%\n  mutate(value = value + 1) %&gt;%\n  rename(stem = value) %&gt;%\n  select(-env, -env_value, -variable) %&gt;%\n  unique() %&gt;%\n  filter(!is.infinite(harvest_year_min)) %&gt;%\n  mutate(sitenum = as.numeric(as.factor(site)))\ndata_rec &lt;- data %&gt;%\n  filter(treatment == \"logged\", rel_year &gt; 2) %&gt;%\n  mutate(plotnum = as.numeric(as.factor(paste0(site, \"_\", plot))))\ndata_old &lt;- data %&gt;%\n  filter(treatment == \"control\") %&gt;%\n  mutate(plotoldnum = as.numeric(as.factor(paste0(site, \"_\", plot))))\ndata_pre &lt;- data %&gt;% filter(rel_year &lt;= 0)\nind_rec &lt;- data_rec %&gt;%\n  select(site, plot, sitenum, plotnum) %&gt;%\n  unique() %&gt;%\n  arrange(plotnum)\nmdata &lt;- list(\n  n_rec = nrow(data_rec),\n  n_old = nrow(data_old),\n  n_pre = nrow(data_pre),\n  n_site = max(data_rec$sitenum),\n  n_plot_rec = max(data_rec$plotnum),\n  stem_rec = data_rec$stem,\n  stem_old = data_old$stem,\n  stem_pre = data_pre$stem,\n  time = data_rec$rel_year - 3,\n  site_rec = data_rec$sitenum,\n  site_old = data_old$sitenum,\n  site_pre = data_pre$sitenum,\n  plot_rec = data_rec$plotnum,\n  site_plot_rec = ind_rec$sitenum,\n  dist_bounds = c(0.1, 1.5),\n  delta_bounds = c(0, 2),\n  mu_thetaInf_bounds = c(10, 50),\n  thetaInf_s_bounds = c(10, 50)\n)\n\n\n\n\nCode\nggplot(data, aes(rel_year, stem, group = paste(site, plot), col = treatment)) +\n  geom_line() +\n  facet_wrap(~site) +\n  theme_bw() +\n  xlab(\"\") +\n  ylab(lab) +\n  theme(legend.position = \"bottom\") +\n  scale_color_discrete(\"\")\n\n\n\n\n\nModelled trajectories."
  },
  {
    "objectID": "41_n.html#ltp",
    "href": "41_n.html#ltp",
    "title": "N",
    "section": "LTP",
    "text": "LTP\n\n\nCode\nltp &lt;- cmdstan_model(\"models/ltp.stan\")\npath &lt;- file.path(\"chains\", var, \"ltp\")\nunlink(path, recursive = TRUE)\ndir.create(path)\nfit_ltp &lt;- ltp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = path\n)\n\n\n\n\nCode\npath &lt;- file.path(\"chains\", var, \"ltp\")\nfit_ltp &lt;- as_cmdstan_fit(list.files(path, full.names = TRUE))\ndata_old &lt;- data_old %&gt;%\n  group_by(site) %&gt;%\n  mutate(rel_year = max(rel_year + 2))\ndata_rec$preds &lt;- fit_ltp$summary(c(\"mu_rec\"), median)$median\ndata_pre$preds &lt;- fit_ltp$summary(c(\"mu_pre\"), median)$median\nfit_ltp\n\n\n   variable    mean  median    sd   mad      q5     q95 rhat ess_bulk ess_tail\n lp__       4651.37 4649.27 29.00 26.29 4610.08 4698.78 1.03      158      146\n mu_dist       0.99    0.99  0.01  0.01    0.97    1.00 1.00     2220     2483\n sigma_dist    0.04    0.04  0.01  0.01    0.04    0.05 1.00     3836     2697\n dist_p[1]     0.98    0.98  0.02  0.02    0.95    1.01 1.00     1477     1962\n dist_p[2]     1.03    1.03  0.02  0.02    1.00    1.06 1.00     1430     1948\n dist_p[3]     0.97    0.97  0.02  0.02    0.94    1.00 1.00     1634     1954\n dist_p[4]     0.96    0.96  0.02  0.02    0.93    0.98 1.00     1555     2015\n dist_p[5]     1.04    1.04  0.02  0.02    1.01    1.08 1.00     1539     2320\n dist_p[6]     0.97    0.97  0.02  0.02    0.94    1.00 1.00     1701     2395\n dist_p[7]     0.95    0.95  0.02  0.02    0.93    0.98 1.00     1490     2471\n\n # showing 10 of 3545 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\npvo_fig(data_rec, data_pre)\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nltp_fig(data_rec, data_pre, data_old, fit_ltp, lab)\n\n\n\n\n\nPredicted trajectories."
  },
  {
    "objectID": "41_n.html#stp",
    "href": "41_n.html#stp",
    "title": "N",
    "section": "STP",
    "text": "STP\n\n\nCode\nstp &lt;- cmdstan_model(\"models/stp.stan\")\npath &lt;- file.path(\"chains\", var, \"stp\")\nunlink(path, recursive = TRUE)\ndir.create(path)\nfit_stp &lt;- stp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = path\n)\n\n\n\n\nCode\npath &lt;- file.path(\"chains\", var, \"stp\")\nfit_stp &lt;- as_cmdstan_fit(list.files(path, full.names = TRUE))\ndata_old &lt;- data_old %&gt;%\n  group_by(site) %&gt;%\n  mutate(rel_year = max(rel_year + 2))\ndata_rec$preds &lt;- fit_stp$summary(c(\"mu_rec\"), median)$median\ndata_pre$preds &lt;- fit_stp$summary(c(\"mu_pre\"), median)$median\nfit_stp\n\n\n   variable    mean  median    sd   mad      q5     q95 rhat ess_bulk ess_tail\n lp__       4567.86 4574.88 64.27 73.46 4458.44 4661.60 1.86        5       38\n mu_dist       1.00    1.00  0.01  0.01    0.98    1.02 1.11       23      300\n sigma_dist    0.05    0.05  0.01  0.01    0.04    0.06 1.13       20      168\n dist_p[1]     0.99    0.99  0.02  0.02    0.96    1.02 1.02      532     1910\n dist_p[2]     1.04    1.04  0.02  0.02    1.01    1.07 1.02      634     2620\n dist_p[3]     0.98    0.98  0.02  0.02    0.95    1.01 1.02      858     1999\n dist_p[4]     0.96    0.96  0.02  0.02    0.93    0.99 1.02      281     2413\n dist_p[5]     1.05    1.05  0.02  0.02    1.02    1.08 1.01     1136     2222\n dist_p[6]     0.97    0.97  0.02  0.02    0.95    1.01 1.02      995     2099\n dist_p[7]     0.96    0.96  0.02  0.02    0.93    0.99 1.02      940     2245\n\n # showing 10 of 4517 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\npvo_fig(data_rec, data_pre)\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nstp_fig(data_rec, data_pre, data_old, fit_stp, lab)\n\n\n\n\n\nPredicted trajectories."
  },
  {
    "objectID": "42_hmax.html#data",
    "href": "42_hmax.html#data",
    "title": "hmax",
    "section": "Data",
    "text": "Data\n\n\nCode\nvar &lt;- \"hmax_cwm_ba\"\nif (!exists(file.path(\"chains\", var))) {\n  dir.create(file.path(\"chains\", var))\n}\nlab &lt;- expression(\"hmax [\" ~ m ~ \"]\")\ndata &lt;- read_tsv(\"data/derived_data/data.tsv\") %&gt;%\n  filter(variable == var) %&gt;%\n  unique() %&gt;%\n  mutate(value = value + 1) %&gt;%\n  rename(stem = value) %&gt;%\n  select(-env, -env_value, -variable) %&gt;%\n  unique() %&gt;%\n  filter(!is.infinite(harvest_year_min)) %&gt;%\n  mutate(sitenum = as.numeric(as.factor(site)))\ndata_rec &lt;- data %&gt;%\n  filter(treatment == \"logged\", rel_year &gt; 2) %&gt;%\n  mutate(plotnum = as.numeric(as.factor(paste0(site, \"_\", plot))))\ndata_old &lt;- data %&gt;%\n  filter(treatment == \"control\") %&gt;%\n  mutate(plotoldnum = as.numeric(as.factor(paste0(site, \"_\", plot))))\ndata_pre &lt;- data %&gt;% filter(rel_year &lt;= 0)\nind_rec &lt;- data_rec %&gt;%\n  select(site, plot, sitenum, plotnum) %&gt;%\n  unique() %&gt;%\n  arrange(plotnum)\nmdata &lt;- list(\n  n_rec = nrow(data_rec),\n  n_old = nrow(data_old),\n  n_pre = nrow(data_pre),\n  n_site = max(data_rec$sitenum),\n  n_plot_rec = max(data_rec$plotnum),\n  stem_rec = data_rec$stem,\n  stem_old = data_old$stem,\n  stem_pre = data_pre$stem,\n  time = data_rec$rel_year - 3,\n  site_rec = data_rec$sitenum,\n  site_old = data_old$sitenum,\n  site_pre = data_pre$sitenum,\n  plot_rec = data_rec$plotnum,\n  site_plot_rec = ind_rec$sitenum,\n  dist_bounds = c(0.1, 1.5),\n  delta_bounds = c(0, 2),\n  mu_thetaInf_bounds = c(30, 60),\n  thetaInf_s_bounds = c(30, 60)\n)\n\n\n\n\nCode\nggplot(data, aes(rel_year, stem, group = paste(site, plot), col = treatment)) +\n  geom_line() +\n  facet_wrap(~site) +\n  theme_bw() +\n  xlab(\"\") +\n  ylab(lab) +\n  theme(legend.position = \"bottom\") +\n  scale_color_discrete(\"\")\n\n\n\n\n\nModelled trajectories."
  },
  {
    "objectID": "42_hmax.html#ltp",
    "href": "42_hmax.html#ltp",
    "title": "hmax",
    "section": "LTP",
    "text": "LTP\n\n\nCode\nltp &lt;- cmdstan_model(\"models/ltp.stan\")\npath &lt;- file.path(\"chains\", var, \"ltp\")\nunlink(path, recursive = TRUE)\ndir.create(path)\nfit_ltp &lt;- ltp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = path\n)\n\n\n\n\nCode\npath &lt;- file.path(\"chains\", var, \"ltp\")\nfit_ltp &lt;- as_cmdstan_fit(list.files(path, full.names = TRUE))\ndata_old &lt;- data_old %&gt;%\n  group_by(site) %&gt;%\n  mutate(rel_year = max(rel_year + 2))\ndata_rec$preds &lt;- fit_ltp$summary(c(\"mu_rec\"), median)$median\ndata_pre$preds &lt;- fit_ltp$summary(c(\"mu_pre\"), median)$median\nfit_ltp\n\n\n   variable    mean  median    sd   mad      q5     q95 rhat ess_bulk ess_tail\n lp__       4994.64 4994.44 19.26 19.31 4962.95 5026.06 1.01      435     1019\n mu_dist       0.99    0.99  0.01  0.00    0.98    1.00 1.00     2290     2799\n sigma_dist    0.03    0.03  0.00  0.00    0.02    0.04 1.00     3932     3087\n dist_p[1]     1.02    1.02  0.01  0.01    1.00    1.04 1.00     1722     2472\n dist_p[2]     1.02    1.02  0.01  0.01    1.00    1.05 1.00     1925     1950\n dist_p[3]     0.99    0.99  0.01  0.01    0.97    1.01 1.00     2020     2630\n dist_p[4]     0.96    0.96  0.01  0.01    0.94    0.98 1.00     2022     2519\n dist_p[5]     0.98    0.98  0.01  0.01    0.95    1.00 1.00     1881     2528\n dist_p[6]     1.00    1.00  0.01  0.01    0.98    1.02 1.00     1858     2440\n dist_p[7]     1.00    1.00  0.01  0.01    0.98    1.03 1.00     1754     1766\n\n # showing 10 of 3545 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\npvo_fig(data_rec, data_pre)\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nltp_fig(data_rec, data_pre, data_old, fit_ltp, lab)\n\n\n\n\n\nPredicted trajectories."
  },
  {
    "objectID": "42_hmax.html#stp",
    "href": "42_hmax.html#stp",
    "title": "hmax",
    "section": "STP",
    "text": "STP\n\n\nCode\nstp &lt;- cmdstan_model(\"models/stp.stan\")\npath &lt;- file.path(\"chains\", var, \"stp\")\nunlink(path, recursive = TRUE)\ndir.create(path)\nfit_stp &lt;- stp$sample(\n  data = mdata,\n  chains = 4,\n  parallel_chains = 4,\n  save_warmup = FALSE,\n  output_dir = path\n)\n\n\n\n\nCode\npath &lt;- file.path(\"chains\", var, \"stp\")\nfit_stp &lt;- as_cmdstan_fit(list.files(path, full.names = TRUE))\ndata_old &lt;- data_old %&gt;%\n  group_by(site) %&gt;%\n  mutate(rel_year = max(rel_year + 2))\ndata_rec$preds &lt;- fit_stp$summary(c(\"mu_rec\"), median)$median\ndata_pre$preds &lt;- fit_stp$summary(c(\"mu_pre\"), median)$median\nfit_stp\n\n\n   variable    mean  median    sd    mad      q5     q95 rhat ess_bulk ess_tail\n lp__       4980.71 4996.62 92.90 112.58 4835.64 5106.82 2.13        5       31\n mu_dist       1.00    1.00  0.01   0.01    0.99    1.01 1.20       13       59\n sigma_dist    0.04    0.04  0.01   0.01    0.03    0.05 1.07       36     1735\n dist_p[1]     1.03    1.02  0.01   0.01    1.00    1.05 1.01     1351     2218\n dist_p[2]     1.03    1.03  0.02   0.01    1.00    1.05 1.02      317     2149\n dist_p[3]     0.99    0.99  0.01   0.01    0.97    1.02 1.01     1773     2318\n dist_p[4]     0.96    0.96  0.01   0.01    0.94    0.98 1.00     1970     2379\n dist_p[5]     0.98    0.98  0.01   0.01    0.95    1.00 1.01     2139     2645\n dist_p[6]     1.00    1.00  0.01   0.01    0.98    1.03 1.02      727     2184\n dist_p[7]     1.01    1.01  0.02   0.01    0.98    1.03 1.02      495     1741\n\n # showing 10 of 4517 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)\n\n\n\n\nCode\npvo_fig(data_rec, data_pre)\n\n\n\n\n\nPredicted versus observed.\n\n\n\n\n\n\nCode\nstp_fig(data_rec, data_pre, data_old, fit_stp, lab)\n\n\n\n\n\nPredicted trajectories."
  },
  {
    "objectID": "91_stp_negative.html",
    "href": "91_stp_negative.html",
    "title": "STP negatives",
    "section": "",
    "text": "Using long term and short term processes model based on initial value \\(\\theta_0\\) we had issue with negatives values of \\(\\mu_{rec}\\) resulting in impossible log-values:\n\\[\n\\begin{align}\n\\mu_{rec} = \\theta_{0,p} + (\\theta_{\\infty,s} - \\theta_{0,p}) \\times (LTP+STP) \\\\\nLTP = 1 - e^{-\\lambda_p \\times time} \\\\\nSTP = \\delta_p \\times (\\frac{time}{\\tau_s} \\times e^{1-\\frac{time}{\\tau_s}})^2\n\\end{align}\n\\]\nNegatives values happen when the trajectory is negative and the difference of \\(\\theta\\) and the bump fall below 0, so when \\(time=\\tau\\):\n\\[\n\\begin{align}\n\\theta_{0,p} + (\\theta_{\\infty,s} - \\theta_{0,p}) \\times (1 - e^{-\\lambda_p \\times \\tau_s}+\\delta_p) \\leq 0\\\\\n\\end{align}\n\\]\nEn \\(\\lambda_p=0.5\\) et \\(\\tau_s=30\\) , \\(LTP = 1-e^{-0.5*30} \\approx 1\\), thus:\n\\[\n\\begin{align}\n\\theta_{0,p} + (\\theta_{\\infty,s} - \\theta_{0,p}) \\times (1+\\delta_p) \\leq 0\\\\\n\\theta_{\\infty,s} + (\\theta_{\\infty,s} - \\theta_{0,p}) \\times \\delta_p \\leq 0\\\\\n\\delta_p \\geq \\frac{-\\theta_{\\infty,s}}  {\\theta_{\\infty,s} - \\theta_{0,p}} ~|~ \\theta_{\\infty,s} - \\theta_{0,p} &lt; 0 \\\\\n\\delta_p \\geq \\frac{-1}  {1 - dist_p} ~|~\\theta_{0,p}=dist_p\\times\\theta_{\\infty,s} \\\\\n\\delta_p \\geq \\frac{1}  {dist_p-1}\n\\end{align}\n\\]\nWe could thus use this inequality to constrain \\(\\delta_p\\) on \\(dist_p\\) knowing that stan now accepts parameters bounds to depend on another parameter. However, this is complicated as it depends on the sign in the division above, \\(dist=1\\) is no possible, and near 1 values results in positive or negative infinite values. Thus we simply bounded \\(dist_p\\) to 1.5 for now (50% gain of attribute post-disturbance).\n\n\nCode\nmodel &lt;- function(time, dist, thetainf, lambda, tau, delta) {\n  theta0 &lt;- thetainf * dist\n  ltp &lt;- 1 - exp(-lambda * time)\n  stp &lt;- delta * (time / tau * exp(1 - time / tau))^2\n  return(theta0 + (thetainf - theta0) * (ltp + stp))\n}\ndata.frame(time = 1:50) %&gt;%\n  mutate(y = model(time,\n    dist = 2, thetainf = 20,\n    lambda = 0.5, tau = 30, delta = 0.5\n  )) %&gt;%\n  mutate(y2 = model(time,\n    dist = 2, thetainf = 20,\n    lambda = 0.5, tau = 30, delta = 2\n  )) %&gt;%\n  mutate(y3 = model(time,\n    dist = 2, thetainf = 20,\n    lambda = 0.5, tau = 30, delta = 1\n  )) %&gt;%\n  ggplot(aes(time)) +\n  geom_line(aes(y = y, col = \"dist=2, delta=.5\")) +\n  geom_line(aes(y = y2, col = \"dist=2, delta=2\")) +\n  geom_line(aes(y = y3, col = \"dist=2, delta=1\")) +\n  theme_bw()\n\n\n\n\n\nNegative STR examples with delta-dist link.\n\n\n\n\n\n\nCode\ndata.frame(dist = seq(.5, 2, length.out = 100)) %&gt;%\n  mutate(delta_max = 2 - (1 / (dist - 1))) %&gt;%\n  ggplot(aes(dist, delta_max)) +\n  geom_line() +\n  theme_bw()\n\n\n\n\n\ndelta_max with dist."
  },
  {
    "objectID": "92_model_devs.html#stp-sum",
    "href": "92_model_devs.html#stp-sum",
    "title": "Models devs",
    "section": "STP sum",
    "text": "STP sum\nmodels/stp_sum.stan\n\\[\n\\begin{align}\n\\mu_{rec} = \\theta_{0,p} + (\\theta_{\\infty,s} - \\theta_{0,p}) \\times (LTP+STP) \\\\\nLTP = 1 - e^{-\\lambda_p \\times time} \\\\\nSTP = \\delta_p \\times (\\frac{time}{\\tau_s} \\times e^{1-\\frac{time}{\\tau_s}})^2 \\\\\n\\theta_{0,p} = \\theta_{\\infty,s} \\times dist_p\n\\end{align}\n\\]"
  },
  {
    "objectID": "92_model_devs.html#stp-lognormal",
    "href": "92_model_devs.html#stp-lognormal",
    "title": "Models devs",
    "section": "STP lognormal",
    "text": "STP lognormal\nmodels/stp.stan\n\\[\n\\begin{align}\n\\mu_{rec} = \\theta_{0,p} + (\\theta_{\\infty,s} - \\theta_{0,p}) \\times (LTP+STP) \\\\\nLTP = 1 - e^{-\\lambda_p \\times time} \\\\\nSTP = \\delta_p \\times (\\frac{time}{\\tau_s} \\times e^{1-\\frac{time}{\\tau_s}})^2 \\\\\n\\theta_{0,p} = \\theta_{\\infty,s} \\times dist_p\n\\end{align}\n\\]"
  },
  {
    "objectID": "92_model_devs.html#stp-correlated",
    "href": "92_model_devs.html#stp-correlated",
    "title": "Models devs",
    "section": "STP correlated",
    "text": "STP correlated\nmodels/stp_cor.stan\nImposed variance-covariance matrix on dist_p and delta_p.\n\\[\n\\begin{align}\n\\mu_{rec} = \\theta_{0,p} + (\\theta_{\\infty,s} - \\theta_{0,p}) \\times (LTP+STP) \\\\\nLTP = 1 - e^{-\\lambda_p \\times time} \\\\\nSTP = \\delta_p \\times (\\frac{time}{\\tau_s} \\times e^{1-\\frac{time}{\\tau_s}})^2 \\\\\n\\theta_{0,p} = \\theta_{\\infty,s} \\times dist_p\n\\end{align}\n\\]"
  },
  {
    "objectID": "92_model_devs.html#parrallel",
    "href": "92_model_devs.html#parrallel",
    "title": "Models devs",
    "section": "Parrallel",
    "text": "Parrallel\ndummy_par.stan"
  },
  {
    "objectID": "93_notes.html#section",
    "href": "93_notes.html#section",
    "title": "Notes",
    "section": "24/01/24",
    "text": "24/01/24\nSections are randomly ordered.\n\nData preparation\nSLA and LA should be logged in species functional trait preparation and SLA inverted in LMA. The N fixation and dispersal still needs to be cleaned.\n\n\nModels structure\nWe must use the random effect for control plots by adding thetaInf_p for controls and pre-inventories with only a hyperdistribution on mu_thetaInf and sigma_thetaInf_p (either concatenating or with two likelihoods) and by modifying thetaInfp in the equation (l. 43 & 44 on mu_old and mu_rec).\n\n\nTrajectories\nAdd box plots for prelogging and controls, and plot longer time series from 1 to 60 years with scale transformation for time. The diversity trajectories are not that bad, but may require better data preparation rather than tweaking the model.\n\n\nModel selection\nLOO model selection fails and does not take into account parsimony with the number of parameters. However, the results show that \\(\\lambda\\) is highly correlated between STP and LTP models (e.g.Â AGB) and the choice may not be necessary or may be made post hoc.\n\n\nDisturbance intensity\n\\(dist_p\\) can represent the intensity of disturbance for attributes where it is well modelled (to be verified with data where possible) to provide information after the HDI on diversity trajectories. Sequential inference problem (uncertainty transmission?) or joint but with influence of diversity trajectory back on \\(dist_p\\). Camille proposes to use a hyperdistribution on \\(dist_p\\), informed with harvested volumes if available.\n\n\nOnline workshop\n3-4 sessions with :\n\nGeneral session on Thursday, a quick introduction to data preparation including environment and species, model development, re-introduction to the model with a quick focus on the constrained disturbance index.\nSubgroup session on Thursday, where subgroups make a first exploration of preliminary parameters for their question of interest with associated covariates.\nGeneral session on Friday where sub-groups present their results.\nOptional subgroup session on Friday if they wish.\n\nWe need to prepare for this:\n\nTrajectory attributes: agb, gini, stem, ba, hill q1 genus index, FDiv, Feve, CWM wd, lma, n, hmax.\nAutomatic rmarkdown pdf report for PIs (no pages yet): agb, gini, stem, ba, hill q1 genus index, FDiv, CWM wd, lma, hmax.\nUpdate Mithila Monday afternoon\nPrepare subgroup data and figures for Wednesday (all parameters with fifth usual quantiles, derived parameter \\(t_{95}\\), associated environmental data with description, maybe some graphs).\n\n\n\nSubgroup 3\nMuch remains to be explored, Sylvainâs offers punctual help on theoretical development in sessions with GÃ©raldine and Camille."
  }
]